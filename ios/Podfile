require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
require_relative '../node_modules/react-native-unimodules/cocoapods.rb'

platform :ios, '10.0'

inhibit_all_warnings!

# Post Install processing for Rollbar
def rollbar_post_install(installer)
  installer.pods_project.targets.each do |target|
    if target.name == 'Rollbar'
      target.build_configurations.each do |config|
        config.build_settings['USE_HEADERMAP'] = 'NO'
      end
    end
  end
end

target 'MissionHub' do
  use_unimodules!
  config = use_native_modules!
  use_react_native!(:path => config["reactNativePath"])

  # Pods for MissionHub
  pod 'FBSDKCoreKit'
  pod 'FBSDKLoginKit'
  pod 'FBSDKShareKit'
  pod 'GoogleTagManager'
  pod 'AdobeMobileLibrary', :path => 'AdobeMobileLibrary'

  target 'MissionHubTests' do
    inherit! :complete
    # Pods for testing
  end

  
  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  use_flipper!

  post_install do |installer|
    flipper_post_install(installer)
    rollbar_post_install(installer) # https://github.com/rollbar/rollbar-react-native/issues/108#issuecomment-615433786
    
    installer.pods_project.targets.each do |target|
      if target.name == 'react-native-config' # https://github.com/luggit/react-native-config/issues/357#issuecomment-508649128
        phase = target.project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
        phase.shell_script = "cd ../../"\
                             " && RNC_ROOT=./node_modules/react-native-config/"\
                             " && export SYMROOT=$RNC_ROOT/ios/ReactNativeConfig"\
                             " && export BUILD_DIR=$RNC_ROOT/ios/ReactNativeConfig"\
                             " && ruby $RNC_ROOT/ios/ReactNativeConfig/BuildDotenvConfig.ruby"
  
        target.build_phases << phase
        target.build_phases.move(phase,0)
      end
    end
  end
end
