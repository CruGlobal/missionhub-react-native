// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  collapsable={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 0,
          "borderWidth": 0,
          "height": 60,
          "justifyContent": "center",
          "margin": 0,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        },
        null,
        Object {},
        null,
      ]
    }
  />
</View>
`;

exports[`renders pill correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  collapsable={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 0,
          "borderWidth": 0,
          "height": 60,
          "justifyContent": "center",
          "margin": 0,
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        },
        null,
        Object {},
        Object {
          "borderRadius": 50,
        },
      ]
    }
  />
</View>
`;

exports[`renders primary correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  collapsable={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#007398",
          "height": 60,
          "justifyContent": "center",
        },
        null,
        Object {},
        null,
      ]
    }
  />
</View>
`;

exports[`renders secondary correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  collapsable={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#52C5DC",
          "height": 60,
          "justifyContent": "center",
        },
        null,
        Object {},
        null,
      ]
    }
  />
</View>
`;

exports[`renders transparent correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  collapsable={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": undefined,
        },
        null,
        Object {},
        null,
      ]
    }
  />
</View>
`;
