// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`a login button is clicked facebook login button is pressed loading wheel appears 1`] = `
<PlatformKeyboardAvoidingView>
  <Connect(BackButton)
    style={
      Object {
        "marginLeft": 5,
        "marginTop": 25,
      }
    }
  />
  <Flex
    align="center"
    justify="center"
    value={1}
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../assets/images/missionHubLogoWords.png",
        }
      }
    />
  </Flex>
  <Flex
    style={
      Object {
        "padding": 30,
      }
    }
    value={3}
  >
    <Component>
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Email
      </MyText>
      <Input
        autoCapitalize="none"
        blurOnSubmit={false}
        keyboardType="email-address"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Email"
        placeholderTextColor="white"
        returnKeyType="next"
        value=""
      />
    </Component>
    <Component
      style={
        Object {
          "paddingVertical": 30,
        }
      }
    >
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Password
      </MyText>
      <Input
        blurOnSubmit={true}
        onChangeText={[Function]}
        placeholder="Password"
        placeholderTextColor="white"
        returnKeyType="next"
        secureTextEntry={true}
        value=""
      />
      <Button
        buttonTextStyle={
          Object {
            "color": "#52C5DC",
            "fontSize": 16,
            "fontWeight": "normal",
            "letterSpacing": 0,
            "paddingVertical": 10,
            "textAlign": "left",
          }
        }
        name="forgotPasswordButton"
        onPress={[Function]}
        style={
          Object {
            "width": 130,
          }
        }
        text="Forgot Password?"
        type="transparent"
      />
    </Component>
    <Button
      buttonTextStyle={
        Object {
          "color": "#ffffff",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 1.5,
          "paddingTop": 2,
        }
      }
      name="facebookButton"
      onPress={[Function]}
      pill={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "#52C5DC",
          "borderWidth": 1,
          "height": 48,
          "margin": 8,
          "width": 670,
        }
      }
    >
      <Flex
        direction="row"
      >
        <Icon
          name="facebookIcon"
          size={21}
          style={
            Object {
              "marginRight": 10,
            }
          }
          type="MissionHub"
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 14,
              "fontWeight": "500",
              "letterSpacing": 1.5,
              "paddingTop": 2,
            }
          }
        >
          LOG IN WITH FACEBOOK
        </MyText>
      </Flex>
    </Button>
  </Flex>
  <LoadingWheel />
</PlatformKeyboardAvoidingView>
`;

exports[`a login button is clicked forgot password button is pressed loading wheel to be rendered 1`] = `
<PlatformKeyboardAvoidingView>
  <Connect(BackButton)
    style={
      Object {
        "marginLeft": 5,
        "marginTop": 25,
      }
    }
  />
  <Flex
    align="center"
    justify="center"
    value={1}
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../assets/images/missionHubLogoWords.png",
        }
      }
    />
  </Flex>
  <Flex
    style={
      Object {
        "padding": 30,
      }
    }
    value={3}
  >
    <Component>
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Email
      </MyText>
      <Input
        autoCapitalize="none"
        blurOnSubmit={false}
        keyboardType="email-address"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Email"
        placeholderTextColor="white"
        returnKeyType="next"
        value=""
      />
    </Component>
    <Component
      style={
        Object {
          "paddingVertical": 30,
        }
      }
    >
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Password
      </MyText>
      <Input
        blurOnSubmit={true}
        onChangeText={[Function]}
        placeholder="Password"
        placeholderTextColor="white"
        returnKeyType="next"
        secureTextEntry={true}
        value=""
      />
      <Button
        buttonTextStyle={
          Object {
            "color": "#52C5DC",
            "fontSize": 16,
            "fontWeight": "normal",
            "letterSpacing": 0,
            "paddingVertical": 10,
            "textAlign": "left",
          }
        }
        name="forgotPasswordButton"
        onPress={[Function]}
        style={
          Object {
            "width": 130,
          }
        }
        text="Forgot Password?"
        type="transparent"
      />
    </Component>
    <Button
      buttonTextStyle={
        Object {
          "color": "#ffffff",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 1.5,
          "paddingTop": 2,
        }
      }
      name="facebookButton"
      onPress={[Function]}
      pill={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "#52C5DC",
          "borderWidth": 1,
          "height": 48,
          "margin": 8,
          "width": 670,
        }
      }
    >
      <Flex
        direction="row"
      >
        <Icon
          name="facebookIcon"
          size={21}
          style={
            Object {
              "marginRight": 10,
            }
          }
          type="MissionHub"
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 14,
              "fontWeight": "500",
              "letterSpacing": 1.5,
              "paddingTop": 2,
            }
          }
        >
          LOG IN WITH FACEBOOK
        </MyText>
      </Flex>
    </Button>
  </Flex>
  <LoadingWheel />
</PlatformKeyboardAvoidingView>
`;

exports[`a login button is clicked key login button is pressed loading wheel appears 1`] = `
<PlatformKeyboardAvoidingView>
  <Connect(BackButton)
    style={
      Object {
        "marginLeft": 5,
        "marginTop": 25,
      }
    }
  />
  <Flex
    align="center"
    justify="center"
    value={1}
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../assets/images/missionHubLogoWords.png",
        }
      }
    />
  </Flex>
  <Flex
    style={
      Object {
        "padding": 30,
      }
    }
    value={3}
  >
    <Component>
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Email
      </MyText>
      <Input
        autoCapitalize="none"
        blurOnSubmit={false}
        keyboardType="email-address"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Email"
        placeholderTextColor="white"
        returnKeyType="next"
        value="klas&jflk@lkjasdf.com"
      />
    </Component>
    <Component
      style={
        Object {
          "paddingVertical": 30,
        }
      }
    >
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Password
      </MyText>
      <Input
        blurOnSubmit={true}
        onChangeText={[Function]}
        placeholder="Password"
        placeholderTextColor="white"
        returnKeyType="next"
        secureTextEntry={true}
        value="this&is=unsafe"
      />
      <Button
        buttonTextStyle={
          Object {
            "color": "#52C5DC",
            "fontSize": 16,
            "fontWeight": "normal",
            "letterSpacing": 0,
            "paddingVertical": 10,
            "textAlign": "left",
          }
        }
        name="forgotPasswordButton"
        onPress={[Function]}
        style={
          Object {
            "width": 130,
          }
        }
        text="Forgot Password?"
        type="transparent"
      />
    </Component>
  </Flex>
  <Flex
    align="stretch"
    justify="end"
  >
    <Button
      name="loginButton"
      onPress={[Function]}
      text="LOGIN"
      type="secondary"
    />
  </Flex>
  <LoadingWheel />
</PlatformKeyboardAvoidingView>
`;

exports[`a login button is clicked key login button is pressed shows email verification required message and tracks user error when email has not been verified 1`] = `
<PlatformKeyboardAvoidingView>
  <Component
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FF5532",
        "height": 60,
        "justifyContent": "center",
      }
    }
  >
    <MyText
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#ffffff",
          "fontSize": 16,
          "marginTop": 0,
        }
      }
    >
      Verify your account via Email
    </MyText>
  </Component>
  <Connect(BackButton)
    style={
      Object {
        "marginLeft": 5,
        "marginTop": 25,
      }
    }
  />
  <Flex
    align="center"
    justify="center"
    value={1}
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../assets/images/missionHubLogoWords.png",
        }
      }
    />
  </Flex>
  <Flex
    style={
      Object {
        "padding": 30,
      }
    }
    value={3}
  >
    <Component>
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Email
      </MyText>
      <Input
        autoCapitalize="none"
        blurOnSubmit={false}
        keyboardType="email-address"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Email"
        placeholderTextColor="white"
        returnKeyType="next"
        value="klas&jflk@lkjasdf.com"
      />
    </Component>
    <Component
      style={
        Object {
          "paddingVertical": 30,
        }
      }
    >
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Password
      </MyText>
      <Input
        blurOnSubmit={true}
        onChangeText={[Function]}
        placeholder="Password"
        placeholderTextColor="white"
        returnKeyType="next"
        secureTextEntry={true}
        value="this&is=unsafe"
      />
      <Button
        buttonTextStyle={
          Object {
            "color": "#52C5DC",
            "fontSize": 16,
            "fontWeight": "normal",
            "letterSpacing": 0,
            "paddingVertical": 10,
            "textAlign": "left",
          }
        }
        name="forgotPasswordButton"
        onPress={[Function]}
        style={
          Object {
            "width": 130,
          }
        }
        text="Forgot Password?"
        type="transparent"
      />
    </Component>
  </Flex>
  <Flex
    align="stretch"
    justify="end"
  >
    <Button
      name="loginButton"
      onPress={[Function]}
      text="LOGIN"
      type="secondary"
    />
  </Flex>
</PlatformKeyboardAvoidingView>
`;

exports[`a login button is clicked key login button is pressed shows invalid credentials message and tracks user error when email or password is missing 1`] = `
<PlatformKeyboardAvoidingView>
  <Component
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FF5532",
        "height": 60,
        "justifyContent": "center",
      }
    }
  >
    <MyText
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#ffffff",
          "fontSize": 16,
          "marginTop": 0,
        }
      }
    >
      Your Email or Password is Incorrect
    </MyText>
  </Component>
  <Connect(BackButton)
    style={
      Object {
        "marginLeft": 5,
        "marginTop": 25,
      }
    }
  />
  <Flex
    align="center"
    justify="center"
    value={1}
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../assets/images/missionHubLogoWords.png",
        }
      }
    />
  </Flex>
  <Flex
    style={
      Object {
        "padding": 30,
      }
    }
    value={3}
  >
    <Component>
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Email
      </MyText>
      <Input
        autoCapitalize="none"
        blurOnSubmit={false}
        keyboardType="email-address"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Email"
        placeholderTextColor="white"
        returnKeyType="next"
        value="klas&jflk@lkjasdf.com"
      />
    </Component>
    <Component
      style={
        Object {
          "paddingVertical": 30,
        }
      }
    >
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Password
      </MyText>
      <Input
        blurOnSubmit={true}
        onChangeText={[Function]}
        placeholder="Password"
        placeholderTextColor="white"
        returnKeyType="next"
        secureTextEntry={true}
        value="this&is=unsafe"
      />
      <Button
        buttonTextStyle={
          Object {
            "color": "#52C5DC",
            "fontSize": 16,
            "fontWeight": "normal",
            "letterSpacing": 0,
            "paddingVertical": 10,
            "textAlign": "left",
          }
        }
        name="forgotPasswordButton"
        onPress={[Function]}
        style={
          Object {
            "width": 130,
          }
        }
        text="Forgot Password?"
        type="transparent"
      />
    </Component>
  </Flex>
  <Flex
    align="stretch"
    justify="end"
  >
    <Button
      name="loginButton"
      onPress={[Function]}
      text="LOGIN"
      type="secondary"
    />
  </Flex>
</PlatformKeyboardAvoidingView>
`;

exports[`a login button is clicked key login button is pressed shows invalid credentials message and tracks user error when invalid credentials are entered 1`] = `
<PlatformKeyboardAvoidingView>
  <Component
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FF5532",
        "height": 60,
        "justifyContent": "center",
      }
    }
  >
    <MyText
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#ffffff",
          "fontSize": 16,
          "marginTop": 0,
        }
      }
    >
      Your Email or Password is Incorrect
    </MyText>
  </Component>
  <Connect(BackButton)
    style={
      Object {
        "marginLeft": 5,
        "marginTop": 25,
      }
    }
  />
  <Flex
    align="center"
    justify="center"
    value={1}
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../assets/images/missionHubLogoWords.png",
        }
      }
    />
  </Flex>
  <Flex
    style={
      Object {
        "padding": 30,
      }
    }
    value={3}
  >
    <Component>
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Email
      </MyText>
      <Input
        autoCapitalize="none"
        blurOnSubmit={false}
        keyboardType="email-address"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Email"
        placeholderTextColor="white"
        returnKeyType="next"
        value="klas&jflk@lkjasdf.com"
      />
    </Component>
    <Component
      style={
        Object {
          "paddingVertical": 30,
        }
      }
    >
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 12,
          }
        }
      >
        Password
      </MyText>
      <Input
        blurOnSubmit={true}
        onChangeText={[Function]}
        placeholder="Password"
        placeholderTextColor="white"
        returnKeyType="next"
        secureTextEntry={true}
        value="this&is=unsafe"
      />
      <Button
        buttonTextStyle={
          Object {
            "color": "#52C5DC",
            "fontSize": 16,
            "fontWeight": "normal",
            "letterSpacing": 0,
            "paddingVertical": 10,
            "textAlign": "left",
          }
        }
        name="forgotPasswordButton"
        onPress={[Function]}
        style={
          Object {
            "width": 130,
          }
        }
        text="Forgot Password?"
        type="transparent"
      />
    </Component>
  </Flex>
  <Flex
    align="stretch"
    justify="end"
  >
    <Button
      name="loginButton"
      onPress={[Function]}
      text="LOGIN"
      type="secondary"
    />
  </Flex>
</PlatformKeyboardAvoidingView>
`;

exports[`renders correctly 1`] = `
<View
  enabled={true}
  keyboardVerticalOffset={0}
  onLayout={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "#007398",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "space-between",
      },
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    style={
      Array [
        Array [
          Object {
            "marginLeft": 5,
            "marginTop": 25,
          },
          null,
        ],
        Object {
          "alignItems": "flex-start",
          "alignSelf": "flex-start",
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits="button"
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            null,
            Object {},
            null,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#ffffff",
                },
                Object {
                  "fontSize": 18,
                },
                Array [
                  Object {
                    "margin": 10,
                  },
                  Object {},
                ],
              ],
              Object {
                "fontFamily": "icomoon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {},
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../assets/images/missionHubLogoWords.png",
        }
      }
    />
  </View>
  <View
    style={
      Array [
        Object {
          "padding": 30,
        },
        Object {
          "flex": 3,
        },
      ]
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "color": "#52C5DC",
              "fontSize": 12,
            },
          ]
        }
      >
        Email
      </Text>
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        autoCorrect={false}
        autoFocus={false}
        blurOnSubmit={false}
        keyboardType="email-address"
        multiline={false}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Email"
        placeholderTextColor="white"
        returnKeyType="next"
        selectionColor="#005A7F"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#52C5DC",
              "borderBottomWidth": 1,
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "letterSpacing": 0.25,
              "paddingVertical": 5,
            },
            Object {},
          ]
        }
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
    </View>
    <View
      style={
        Object {
          "paddingVertical": 30,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "color": "#52C5DC",
              "fontSize": 12,
            },
          ]
        }
      >
        Password
      </Text>
      <TextInput
        allowFontScaling={true}
        autoCorrect={false}
        autoFocus={false}
        blurOnSubmit={true}
        multiline={false}
        onChangeText={[Function]}
        placeholder="Password"
        placeholderTextColor="white"
        returnKeyType="next"
        secureTextEntry={true}
        selectionColor="#005A7F"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#52C5DC",
              "borderBottomWidth": 1,
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "letterSpacing": 0.25,
              "paddingVertical": 5,
            },
            Object {},
          ]
        }
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits="button"
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              null,
              Object {
                "width": 130,
              },
              null,
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "color": "#ffffff",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "letterSpacing": 1.5,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#52C5DC",
                    "fontSize": 16,
                    "fontWeight": "normal",
                    "letterSpacing": 0,
                    "paddingVertical": 10,
                    "textAlign": "left",
                  },
                ],
              ]
            }
          >
            Forgot Password?
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits="button"
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderRadius": 0,
              "borderWidth": 0,
              "height": 60,
              "justifyContent": "center",
              "margin": 0,
              "paddingHorizontal": 20,
              "paddingVertical": 10,
            },
            null,
            Object {
              "backgroundColor": "transparent",
              "borderColor": "#52C5DC",
              "borderWidth": 1,
              "height": 48,
              "margin": 8,
              "width": 670,
            },
            Object {
              "borderRadius": 50,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
              Object {
                "flexDirection": "row",
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {
                    "color": "#ffffff",
                  },
                  Object {
                    "fontSize": 21,
                  },
                  Object {
                    "marginRight": 10,
                  },
                ],
                Object {
                  "fontFamily": "icomoon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 1.5,
                  "paddingTop": 2,
                },
              ]
            }
          >
            LOG IN WITH FACEBOOK
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
