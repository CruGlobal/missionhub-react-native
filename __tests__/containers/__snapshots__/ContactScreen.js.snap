// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactScreen mapStateToProps should provide the necessary props with a contactAssignment 1`] = `
Object {
  "contactAssignment": Object {
    "id": 3,
    "pathway_stage_id": 5,
    "type": "reverse_contact_assignment",
  },
  "contactStage": Object {
    "id": 5,
    "type": "pathway_stage",
  },
  "isJean": true,
  "isMissionhubUser": false,
  "myId": 1,
  "orgPermission": Object {
    "_type": "organizational_permission",
    "id": "6",
    "permission_id": 2,
  },
  "organization": Object {
    "id": 1,
    "name": "Org from org selector",
    "type": "organization",
  },
  "person": Object {
    "first_name": "Test Fname",
    "id": "2",
    "type": "person",
  },
  "personIsCurrentUser": false,
  "stages": Array [
    Object {
      "id": 5,
      "type": "pathway_stage",
    },
  ],
}
`;

exports[`ContactScreen mapStateToProps should provide the necessary props with a user 1`] = `
Object {
  "contactAssignment": undefined,
  "contactStage": Object {
    "id": 5,
    "type": "pathway_stage",
  },
  "isJean": true,
  "isMissionhubUser": false,
  "myId": 1,
  "orgPermission": Object {
    "_type": "organizational_permission",
    "id": "6",
    "permission_id": 2,
  },
  "organization": Object {
    "id": 1,
    "type": "organization",
  },
  "person": Object {
    "first_name": "Test Fname",
    "id": "2",
    "type": "person",
    "user": Object {
      "pathway_stage_id": 5,
    },
  },
  "personIsCurrentUser": false,
  "stages": Array [
    Object {
      "id": 5,
      "type": "pathway_stage",
    },
  ],
}
`;

exports[`ContactScreen renders correctly as Casey 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(Header)
    left={
      <IconButton
        name="backIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    right={
      <IconButton
        name="moreIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    shadow={false}
  />
  <Flex
    align="center"
    justify="center"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
    value={1}
  >
    <Connect(ContactHeader)
      dispatch={[Function]}
      isMe={false}
      onChangeStage={[Function]}
      onOpenHeader={[Function]}
      onShrinkHeader={[Function]}
      person={
        Object {
          "first_name": "Test Fname",
          "id": "2",
          "type": "person",
        }
      }
      stage={
        Object {
          "id": 5,
          "type": "pathway_stage",
        }
      }
      type="casey"
    />
  </Flex>
</View>
`;

exports[`ContactScreen renders correctly as Jean 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(Header)
    left={
      <IconButton
        name="backIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    right={
      <IconButton
        name="moreIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    shadow={false}
  />
  <Flex
    align="center"
    justify="center"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
    value={1}
  >
    <Connect(ContactHeader)
      dispatch={[Function]}
      isMe={false}
      onChangeStage={[Function]}
      onOpenHeader={[Function]}
      onShrinkHeader={[Function]}
      organization={
        Object {
          "id": 1,
          "type": "organization",
        }
      }
      person={
        Object {
          "first_name": "Test Fname",
          "id": "2",
          "type": "person",
        }
      }
      stage={
        Object {
          "id": 5,
          "type": "pathway_stage",
        }
      }
      type="jean"
    />
  </Flex>
</View>
`;
