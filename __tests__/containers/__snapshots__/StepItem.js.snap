// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders me correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "marginTop": 1,
          "paddingLeft": 24,
          "paddingRight": 13,
          "paddingVertical": 16,
          "width": 750,
        },
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {},
          Object {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "color": "#007398",
              "fontSize": 16,
              "fontWeight": "bold",
            },
          ]
        }
      >
        
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "fontSize": 14,
            },
          ]
        }
      >
        Test Step
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders not me correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "marginTop": 1,
          "paddingLeft": 24,
          "paddingRight": 13,
          "paddingVertical": 16,
          "width": 750,
        },
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {},
          Object {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "color": "#007398",
              "fontSize": 16,
              "fontWeight": "bold",
            },
          ]
        }
      >
        
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "fontSize": 14,
            },
          ]
        }
      >
        Test Step
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders type action correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      Object {
        "backgroundColor": "#ffffff",
        "borderBottomColor": "#E6E8EC",
        "borderBottomWidth": 1,
      },
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "marginTop": 1,
          "paddingLeft": 24,
          "paddingRight": 13,
          "paddingVertical": 16,
          "width": 750,
        },
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {},
          Object {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "color": "#007398",
              "fontSize": 16,
              "fontWeight": "bold",
            },
          ]
        }
      >
        
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "fontSize": 14,
            },
          ]
        }
      >
        Test Step
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits="button"
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 12,
            },
            Array [
              Object {
                "color": "#ffffff",
              },
              Object {
                "fontSize": 18,
              },
              Array [
                Object {
                  "color": "#52C5DC",
                  "fontSize": 35,
                  "padding": 10,
                },
                undefined,
              ],
            ],
            Object {
              "fontFamily": "icomoon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        Ó§è
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders type contact correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      Object {
        "backgroundColor": "#ffffff",
        "borderBottomColor": "#E6E8EC",
        "borderBottomWidth": 1,
      },
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "marginTop": 1,
          "paddingLeft": 24,
          "paddingRight": 13,
          "paddingVertical": 16,
          "width": 750,
        },
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {},
          Object {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "fontSize": 14,
            },
          ]
        }
      >
        Test Step
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders type reminder correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  collapsable={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgb(183, 231, 240)",
      "borderBottomColor": "#E6E8EC",
      "borderBottomWidth": 1,
      "opacity": 1,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "marginTop": 1,
          "paddingLeft": 24,
          "paddingRight": 13,
          "paddingVertical": 16,
          "width": 750,
        },
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {},
          Object {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "color": "#007398",
              "fontSize": 16,
              "fontWeight": "bold",
            },
          ]
        }
      >
        
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "fontSize": 14,
            },
          ]
        }
      >
        Test Step
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders type swipeable correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      Object {
        "backgroundColor": "#ffffff",
        "borderBottomColor": "#E6E8EC",
        "borderBottomWidth": 1,
      },
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "marginTop": 1,
          "paddingLeft": 24,
          "paddingRight": 13,
          "paddingVertical": 16,
          "width": 750,
        },
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {},
          Object {
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "color": "#007398",
              "fontSize": 16,
              "fontWeight": "bold",
            },
          ]
        }
      >
        
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "fontSize": 14,
            },
          ]
        }
      >
        Test Step
      </Text>
    </View>
  </View>
</View>
`;
