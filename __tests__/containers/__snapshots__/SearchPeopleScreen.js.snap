// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Array [
          Object {
            "backgroundColor": "#007398",
            "height": 65,
            "paddingTop": 20,
          },
          Object {
            "elevation": 4,
          },
        ],
        Object {
          "flexDirection": "row",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "marginTop": 0,
            "paddingLeft": 5,
          },
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits="button"
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              null,
              Object {},
              null,
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {
                    "color": "#ffffff",
                  },
                  Object {
                    "fontSize": 18,
                  },
                  Array [
                    Object {
                      "margin": 10,
                    },
                    Object {},
                  ],
                ],
                Object {
                  "fontFamily": "icomoon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "marginTop": 0,
          },
          Object {
            "alignItems": "center",
            "flex": 5,
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#52C5DC",
              "borderBottomWidth": 1,
            },
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "flexDirection": "row",
            },
          ]
        }
      >
        <TextInput
          allowFontScaling={true}
          autoCorrect={false}
          autoFocus={true}
          blurOnSubmit={true}
          multiline={false}
          onChangeText={[Function]}
          placeholder="Search"
          placeholderTextColor="#ffffff"
          returnKeyType="done"
          selectionColor="white"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderBottomColor": "#52C5DC",
                "borderBottomWidth": 1,
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "letterSpacing": 0.25,
                "paddingVertical": 5,
              },
              Object {
                "borderBottomWidth": 0,
                "color": "#ffffff",
                "flex": 1,
                "fontSize": 16,
                "paddingVertical": 5,
              },
            ]
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          value=""
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "marginTop": 0,
            "paddingRight": 5,
          },
          Object {
            "alignItems": "flex-end",
            "flex": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits="button"
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              null,
              Object {},
              null,
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {
                    "color": "#ffffff",
                  },
                  Object {
                    "fontSize": 18,
                  },
                  Array [
                    Object {
                      "margin": 10,
                    },
                    Object {},
                  ],
                ],
                Object {
                  "fontFamily": "icomoon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "marginBottom": 40,
        },
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../assets/images/searchNull.png",
        }
      }
      style={undefined}
    />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#505256",
          },
          Object {
            "fontFamily": "AmaticSC-Bold",
          },
          Object {
            "color": "#007398",
            "fontSize": 84,
            "letterSpacing": 2,
          },
        ]
      }
    >
      search
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#505256",
          },
          Object {
            "fontFamily": "SourceSansPro-Regular",
          },
          Object {
            "fontSize": 16,
          },
        ]
      }
    >
      Search results will appear here.
    </Text>
  </View>
</View>
`;

exports[`renders with no results state 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <Connect(Header)
    center={
      <Flex
        align="center"
        direction="row"
        self="stretch"
        style={
          Object {
            "borderBottomColor": "#52C5DC",
            "borderBottomWidth": 1,
          }
        }
      >
        <Input
          autoFocus={true}
          blurOnSubmit={true}
          onChangeText={[Function]}
          placeholder="Search"
          placeholderTextColor="#ffffff"
          returnKeyType="done"
          selectionColor="white"
          style={
            Object {
              "borderBottomWidth": 0,
              "color": "#ffffff",
              "flex": 1,
              "fontSize": 16,
              "paddingVertical": 5,
            }
          }
          value=""
        />
      </Flex>
    }
    left={
      <IconButton
        name="backIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    right={
      <IconButton
        name="filterIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
  />
  <Flex
    align="center"
    justify="center"
    style={
      Object {
        "marginBottom": 40,
      }
    }
    value={1}
  >
    <Image
      source={
        Object {
          "testUri": "../../../assets/images/searchNull.png",
        }
      }
    />
    <MyText
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#007398",
          "fontSize": 84,
          "letterSpacing": 2,
        }
      }
      type="header"
    >
      Search
    </MyText>
    <MyText
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 16,
        }
      }
    >
      Search results will appear here.
    </MyText>
  </Flex>
</View>
`;

exports[`renders with results state 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <Connect(Header)
    center={
      <Flex
        align="center"
        direction="row"
        self="stretch"
        style={
          Object {
            "borderBottomColor": "#52C5DC",
            "borderBottomWidth": 1,
          }
        }
      >
        <Input
          autoFocus={true}
          blurOnSubmit={true}
          onChangeText={[Function]}
          placeholder="Search"
          placeholderTextColor="#ffffff"
          returnKeyType="done"
          selectionColor="white"
          style={
            Object {
              "borderBottomWidth": 0,
              "color": "#ffffff",
              "flex": 1,
              "fontSize": 16,
              "paddingVertical": 5,
            }
          }
          value=""
        />
      </Flex>
    }
    left={
      <IconButton
        name="backIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    right={
      <IconButton
        name="filterIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
  />
  <Flex
    align="center"
    justify="center"
    style={
      Object {
        "marginBottom": 40,
      }
    }
    value={1}
  >
    <Image
      source={
        Object {
          "testUri": "../../../assets/images/searchNull.png",
        }
      }
    />
    <MyText
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#007398",
          "fontSize": 84,
          "letterSpacing": 2,
        }
      }
      type="header"
    >
      Search
    </MyText>
    <MyText
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 16,
        }
      }
    >
      Search results will appear here.
    </MyText>
  </Flex>
</View>
`;

exports[`renders with searching state 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <Connect(Header)
    center={
      <Flex
        align="center"
        direction="row"
        self="stretch"
        style={
          Object {
            "borderBottomColor": "#52C5DC",
            "borderBottomWidth": 1,
          }
        }
      >
        <Input
          autoFocus={true}
          blurOnSubmit={true}
          onChangeText={[Function]}
          placeholder="Search"
          placeholderTextColor="#ffffff"
          returnKeyType="done"
          selectionColor="white"
          style={
            Object {
              "borderBottomWidth": 0,
              "color": "#ffffff",
              "flex": 1,
              "fontSize": 16,
              "paddingVertical": 5,
            }
          }
          value=""
        />
      </Flex>
    }
    left={
      <IconButton
        name="backIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    right={
      <IconButton
        name="filterIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
  />
  <Flex
    align="center"
    justify="center"
    style={
      Object {
        "marginBottom": 40,
      }
    }
    value={1}
  >
    <Image
      source={
        Object {
          "testUri": "../../../assets/images/searchNull.png",
        }
      }
    />
    <MyText
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#007398",
          "fontSize": 84,
          "letterSpacing": 2,
        }
      }
      type="header"
    >
      Search
    </MyText>
    <MyText
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 16,
        }
      }
    >
      Search results will appear here.
    </MyText>
  </Flex>
</View>
`;
