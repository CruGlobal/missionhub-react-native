// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactJourney renders loading screen correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Flex
    align="center"
    justify="center"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
    value={1}
  >
    <LoadingGuy />
  </Flex>
  <Flex
    justify="end"
  >
    <Button
      onPress={[Function]}
      text="SOMETHING COOL HAPPENED"
      type="secondary"
    />
  </Flex>
</View>
`;

exports[`ContactJourney renders null screen correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Flex
    align="center"
    justify="center"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
    value={1}
  >
    <Flex
      align="center"
      justify="center"
      value={1}
    >
      <Image
        resizeMode="contain"
        source={
          Object {
            "testUri": "../../../assets/images/ourJourney.png",
          }
        }
        style={
          Object {
            "flexShrink": 1,
          }
        }
      />
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#007398",
            "fontSize": 42,
            "paddingTop": 10,
          }
        }
        type="header"
      >
        OUR JOURNEY
      </MyText>
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#505256",
            "fontSize": 16,
            "paddingHorizontal": 70,
            "paddingVertical": 10,
            "textAlign": "center",
          }
        }
      >
        This is where MissionHub saves all of your completed steps and any notes you added along the way.
      </MyText>
    </Flex>
  </Flex>
  <Flex
    justify="end"
  >
    <Button
      onPress={[Function]}
      text="SOMETHING COOL HAPPENED"
      type="secondary"
    />
  </Flex>
</View>
`;

exports[`ContactJourney renders screen with steps correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Flex
    align="center"
    justify="center"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
    value={1}
  >
    <FlatList
      ItemSeparatorComponent={[Function]}
      bounces={true}
      data={
        Array [
          Object {
            "date": "2010-01-01 12:12:12",
            "id": 84472,
            "type": "step",
          },
        ]
      }
      disableVirtualization={false}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      renderItem={[Function]}
      scrollEventThrottle={100}
      showsVerticalScrollIndicator={false}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderBottomColor": "#E6E8EC",
          "borderBottomWidth": 1,
        }
      }
      updateCellsBatchingPeriod={50}
      windowSize={21}
    />
  </Flex>
  <Flex
    justify="end"
  >
    <Button
      onPress={[Function]}
      text="SOMETHING COOL HAPPENED"
      type="secondary"
    />
  </Flex>
</View>
`;

exports[`journey methods renders a journey row 1`] = `
<Translate(RowSwipeable)
  bump={false}
  onBumpComplete={undefined}
  onEdit={[Function]}
>
  <Translate(JourneyItem)
    item={
      Object {
        "id": "123",
        "text": "123",
      }
    }
    myId="123"
    type={undefined}
  />
</Translate(RowSwipeable)>
`;

exports[`journey methods renders a survey row 1`] = `
<Translate(JourneyItem)
  item={
    Object {
      "id": "124",
      "text": "124",
      "type": "survey",
    }
  }
  myId="123"
  type="survey"
/>
`;

exports[`journey methods renders a survey row 2`] = `
<Translate(JourneyItem)
  item={
    Object {
      "id": "124",
      "text": "124",
      "type": "stage",
    }
  }
  myId="123"
  type="stage"
/>
`;

exports[`renders with an organization correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
        },
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "alignItems": "center",
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
            Object {
              "flex": 2,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "flex": 10,
            },
          ]
        }
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "testUri": "../../../assets/gifs/HappyBlueLoop.gif",
            }
          }
          style={
            Object {
              "flex": 1,
              "width": 750,
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {},
            Object {
              "flex": 2,
            },
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#505256",
              },
              Object {
                "fontFamily": "AmaticSC-Bold",
              },
              Object {
                "color": "#007398",
                "fontSize": 64,
                "paddingVertical": 0,
              },
            ]
          }
        >
          loading
        </Text>
      </View>
      <View
        style={
          Array [
            Object {},
            Object {
              "flex": 2,
            },
          ]
        }
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {},
        Object {
          "justifyContent": "flex-end",
        },
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits="button"
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#52C5DC",
              "height": 60,
              "justifyContent": "center",
            },
            null,
            Object {},
            null,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#505256",
              },
              Object {
                "fontFamily": "SourceSansPro-Regular",
              },
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#ffffff",
                  "fontSize": 18,
                  "fontWeight": "500",
                  "letterSpacing": 1.5,
                  "textAlign": "center",
                },
                Object {},
              ],
            ]
          }
        >
          SOMETHING COOL HAPPENED
        </Text>
      </View>
    </View>
  </View>
</View>
`;
