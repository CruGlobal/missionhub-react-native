// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StepsScreen mapStateToProps should provide the necessary props 1`] = `
Object {
  "areNotificationsOff": true,
  "hasMoreSteps": true,
  "pushtoken": "",
  "reminders": Array [
    Object {
      "id": 1,
      "reminder": true,
    },
  ],
  "showNotificationReminder": true,
  "showStepBump": true,
  "showStepReminderBump": true,
  "steps": Array [
    Object {
      "id": 2,
    },
    Object {
      "id": 3,
    },
  ],
}
`;

exports[`StepsScreen renders empty screen correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(Header)
    left={
      <IconButton
        name="menuIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    title="STEPS OF FAITH"
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ScrollViewMock
      contentContainerStyle={
        Array [
          Object {
            "backgroundColor": "#ffffff",
          },
          Object {
            "flex": 1,
          },
        ]
      }
      onScroll={[Function]}
      refreshControl={
        <MyRefreshControl
          colors={
            Array [
              "#ffffff",
              "#52C5DC",
            ]
          }
          onRefresh={[Function]}
          progressBackgroundColor="#007398"
          refreshing={false}
          tintColor="#007398"
        />
      }
      scrollEventThrottle={16}
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "#ffffff",
          },
        ]
      }
    >
      <Flex
        align="center"
        style={
          Array [
            Object {
              "backgroundColor": "#66D9F0",
              "width": 750,
            },
            Object {},
          ]
        }
      >
        <Translate(RowSwipeable)
          bump={true}
          key="1"
          onBumpComplete={[Function]}
          onComplete={[Function]}
          onDelete={[Function]}
        >
          <Connect(Translate(StepItem))
            onAction={[Function]}
            onSelect={[Function]}
            step={
              Object {
                "id": 1,
                "reminder": true,
              }
            }
            type="reminder"
          />
        </Translate(RowSwipeable)>
      </Flex>
      <Flex
        align="center"
        justify="center"
        value={1}
      >
        <Image
          source={
            Object {
              "testUri": "../../../assets/images/footprints.png",
            }
          }
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#007398",
              "fontSize": 42,
              "paddingTop": 10,
            }
          }
          type="header"
        >
          STEPS OF FAITH
        </MyText>
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#505256",
              "fontSize": 16,
              "paddingHorizontal": 70,
              "paddingVertical": 10,
              "textAlign": "center",
            }
          }
        >
          Choose a person in People view and add some new steps.
        </MyText>
      </Flex>
    </ScrollViewMock>
  </View>
</View>
`;

exports[`StepsScreen renders loading screen correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(Header)
    left={
      <IconButton
        name="menuIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    title="STEPS OF FAITH"
  />
  <Flex
    align="center"
    justify="center"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Flex
      value={2}
    />
    <Flex
      value={10}
    >
      <Image
        resizeMode="contain"
        source={
          Object {
            "testUri": "../../../assets/gifs/HappyBlueLoop.gif",
          }
        }
        style={
          Object {
            "flex": 1,
            "width": 750,
          }
        }
      />
    </Flex>
    <Flex
      value={2}
    >
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#007398",
            "fontSize": 64,
            "paddingVertical": 0,
          }
        }
        type="header"
      >
        LOADING
      </MyText>
    </Flex>
    <Flex
      value={2}
    />
  </Flex>
</View>
`;

exports[`StepsScreen renders screen with steps correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(Header)
    left={
      <IconButton
        name="menuIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    title="STEPS OF FAITH"
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ScrollViewMock
      contentContainerStyle={
        Array [
          Object {
            "backgroundColor": "#ffffff",
          },
          Object {
            "flex": 1,
          },
        ]
      }
      onScroll={[Function]}
      refreshControl={
        <MyRefreshControl
          colors={
            Array [
              "#ffffff",
              "#52C5DC",
            ]
          }
          onRefresh={[Function]}
          progressBackgroundColor="#007398"
          refreshing={false}
          tintColor="#007398"
        />
      }
      scrollEventThrottle={16}
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "#ffffff",
          },
        ]
      }
    >
      <Flex
        align="center"
        style={
          Array [
            Object {
              "backgroundColor": "#66D9F0",
              "width": 750,
            },
            Object {},
          ]
        }
      >
        <Translate(RowSwipeable)
          bump={true}
          key="1"
          onBumpComplete={[Function]}
          onComplete={[Function]}
          onDelete={[Function]}
        >
          <Connect(Translate(StepItem))
            onAction={[Function]}
            onSelect={[Function]}
            step={
              Object {
                "id": 1,
                "reminder": true,
              }
            }
            type="reminder"
          />
        </Translate(RowSwipeable)>
      </Flex>
      <FlatList
        ListFooterComponent={null}
        bounces={false}
        data={
          Array [
            Object {
              "id": 2,
            },
            Object {
              "id": 3,
            },
          ]
        }
        disableVirtualization={false}
        extraData={
          Object {
            "hideStars": false,
          }
        }
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        showsVerticalScrollIndicator={false}
        style={
          Array [
            Object {
              "backgroundColor": "#ffffff",
              "overflow": "scroll",
              "paddingBottom": undefined,
            },
            Object {
              "paddingBottom": 40,
            },
          ]
        }
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
    </ScrollViewMock>
  </View>
</View>
`;
