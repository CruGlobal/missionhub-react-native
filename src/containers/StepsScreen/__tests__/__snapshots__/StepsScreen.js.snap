// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StepsScreen arrow functions should render item correctly 1`] = `
<Connect(StepItem)
  hideAction={true}
  onAction={[Function]}
  onPressName={[Function]}
  onSelect={[Function]}
  step={
    Object {
      "id": 0,
      "organization": Object {
        "id": "000",
      },
      "receiver": Object {
        "id": "00",
      },
    }
  }
  type="swipeable"
/>
`;

exports[`StepsScreen mapStateToProps should provide the necessary props 1`] = `
Object {
  "hasMoreSteps": true,
  "pushtoken": "",
  "reminders": Array [
    Object {
      "id": 1,
      "reminder": true,
    },
  ],
  "steps": Array [
    Object {
      "id": 2,
    },
    Object {
      "id": 3,
    },
  ],
}
`;

exports[`StepsScreen renders empty screen with one reminder correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <Component
    screen="StepsTab"
  />
  <Header
    left={
      <IconButton
        name="menuIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    title="STEPS OF FAITH"
  />
  <View
    style={
      Object {
        "backgroundColor": "#ECEEF2",
        "flex": 1,
      }
    }
  >
    <Connect(withI18nextTranslation(OnboardingCard))
      type="steps"
    />
    <View
      style={
        Object {
          "backgroundColor": "#007398",
          "flex": 1,
        }
      }
    >
      <ScrollViewMock
        contentContainerStyle={
          Array [
            Object {
              "backgroundColor": "#ECEEF2",
              "flex": 1,
            },
            Object {
              "flex": 1,
            },
          ]
        }
        onScroll={[Function]}
        refreshControl={
          <MyRefreshControl
            onRefresh={[Function]}
            refreshing={false}
          />
        }
        scrollEventThrottle={16}
        style={
          Array [
            Object {
              "backgroundColor": "#ECEEF2",
            },
          ]
        }
      >
        <Flex
          align="center"
          style={
            Array [
              Object {
                "backgroundColor": "#66D9F0",
                "width": 750,
              },
            ]
          }
        />
        <FlatList
          ListFooterComponent={null}
          bounces={false}
          data={Array []}
          disableVirtualization={false}
          extraData={
            Object {
              "hideStars": false,
            }
          }
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onEndReachedThreshold={2}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          showsVerticalScrollIndicator={false}
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "overflow": "scroll",
                "paddingBottom": undefined,
              },
              Object {
                "paddingBottom": 40,
              },
            ]
          }
          updateCellsBatchingPeriod={50}
          windowSize={21}
        />
      </ScrollViewMock>
    </View>
  </View>
</View>
`;

exports[`StepsScreen renders loading screen correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <Component
    screen="StepsTab"
  />
  <Header
    left={
      <IconButton
        name="menuIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    title="STEPS OF FAITH"
  />
  <View
    style={
      Object {
        "backgroundColor": "#ECEEF2",
        "flex": 1,
      }
    }
  >
    <LoadingGuy />
  </View>
</View>
`;

exports[`StepsScreen renders screen with some focused and unfocused steps correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <Component
    screen="StepsTab"
  />
  <Header
    left={
      <IconButton
        name="menuIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    title="STEPS OF FAITH"
  />
  <View
    style={
      Object {
        "backgroundColor": "#ECEEF2",
        "flex": 1,
      }
    }
  >
    <Connect(withI18nextTranslation(OnboardingCard))
      type="steps"
    />
    <View
      style={
        Object {
          "backgroundColor": "#007398",
          "flex": 1,
        }
      }
    >
      <ScrollViewMock
        contentContainerStyle={
          Array [
            Object {
              "backgroundColor": "#ECEEF2",
              "flex": 1,
            },
            Object {
              "flex": 1,
            },
          ]
        }
        onScroll={[Function]}
        refreshControl={
          <MyRefreshControl
            onRefresh={[Function]}
            refreshing={false}
          />
        }
        scrollEventThrottle={16}
        style={
          Array [
            Object {
              "backgroundColor": "#ECEEF2",
            },
          ]
        }
      >
        <Flex
          align="center"
          style={
            Array [
              Object {
                "backgroundColor": "#66D9F0",
                "width": 750,
              },
            ]
          }
        />
        <FlatList
          ListFooterComponent={null}
          bounces={false}
          data={
            Array [
              Object {
                "id": 0,
                "organization": Object {
                  "id": "000",
                },
                "receiver": Object {
                  "id": "00",
                },
              },
              Object {
                "id": 1,
                "organization": Object {
                  "id": "111",
                },
                "receiver": Object {
                  "id": "11",
                },
              },
              Object {
                "id": 2,
                "organization": Object {
                  "id": "222",
                },
                "receiver": Object {
                  "id": "22",
                },
              },
              Object {
                "id": 3,
                "organization": Object {
                  "id": "333",
                },
                "receiver": Object {
                  "id": "33",
                },
              },
            ]
          }
          disableVirtualization={false}
          extraData={
            Object {
              "hideStars": false,
            }
          }
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onEndReachedThreshold={2}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          showsVerticalScrollIndicator={false}
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "overflow": "scroll",
                "paddingBottom": undefined,
              },
              Object {
                "paddingBottom": 40,
              },
            ]
          }
          updateCellsBatchingPeriod={50}
          windowSize={21}
        />
      </ScrollViewMock>
    </View>
  </View>
</View>
`;

exports[`StepsScreen renders with max reminders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <Component
    screen="StepsTab"
  />
  <Header
    left={
      <IconButton
        name="menuIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    title="STEPS OF FAITH"
  />
  <View
    style={
      Object {
        "backgroundColor": "#ECEEF2",
        "flex": 1,
      }
    }
  >
    <Connect(withI18nextTranslation(OnboardingCard))
      type="steps"
    />
    <View
      style={
        Object {
          "backgroundColor": "#007398",
          "flex": 1,
        }
      }
    >
      <ScrollViewMock
        contentContainerStyle={
          Array [
            Object {
              "backgroundColor": "#ECEEF2",
              "flex": 1,
            },
            Object {
              "flex": 1,
            },
          ]
        }
        onScroll={[Function]}
        refreshControl={
          <MyRefreshControl
            onRefresh={[Function]}
            refreshing={false}
          />
        }
        scrollEventThrottle={16}
        style={
          Array [
            Object {
              "backgroundColor": "#ECEEF2",
            },
          ]
        }
      >
        <Flex
          align="center"
          style={
            Array [
              Object {
                "backgroundColor": "#66D9F0",
                "width": 750,
              },
            ]
          }
        >
          <Connect(StepItem)
            key="1"
            onAction={[Function]}
            onPressName={[Function]}
            onSelect={[Function]}
            step={
              Object {
                "id": 1,
                "reminder": true,
              }
            }
            type="reminder"
          />
          <Connect(StepItem)
            key="2"
            onAction={[Function]}
            onPressName={[Function]}
            onSelect={[Function]}
            step={
              Object {
                "id": 2,
                "reminder": true,
              }
            }
            type="reminder"
          />
        </Flex>
        <FlatList
          ListFooterComponent={null}
          bounces={false}
          data={
            Array [
              Object {
                "id": 0,
                "organization": Object {
                  "id": "000",
                },
                "receiver": Object {
                  "id": "00",
                },
              },
              Object {
                "id": 1,
                "organization": Object {
                  "id": "111",
                },
                "receiver": Object {
                  "id": "11",
                },
              },
              Object {
                "id": 2,
                "organization": Object {
                  "id": "222",
                },
                "receiver": Object {
                  "id": "22",
                },
              },
              Object {
                "id": 3,
                "organization": Object {
                  "id": "333",
                },
                "receiver": Object {
                  "id": "33",
                },
              },
            ]
          }
          disableVirtualization={false}
          extraData={
            Object {
              "hideStars": true,
            }
          }
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onEndReachedThreshold={2}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          showsVerticalScrollIndicator={false}
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "overflow": "scroll",
                "paddingBottom": undefined,
              },
              Object {
                "paddingBottom": 40,
              },
            ]
          }
          updateCellsBatchingPeriod={50}
          windowSize={21}
        />
      </ScrollViewMock>
    </View>
  </View>
</View>
`;

exports[`StepsScreen renders with no focused steps and less than 4 unfocused steps correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <Component
    screen="StepsTab"
  />
  <Header
    left={
      <IconButton
        name="menuIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    title="STEPS OF FAITH"
  />
  <View
    style={
      Object {
        "backgroundColor": "#ECEEF2",
        "flex": 1,
      }
    }
  >
    <Connect(withI18nextTranslation(OnboardingCard))
      type="steps"
    />
    <View
      style={
        Object {
          "backgroundColor": "#007398",
          "flex": 1,
        }
      }
    >
      <ScrollViewMock
        contentContainerStyle={
          Array [
            Object {
              "backgroundColor": "#ECEEF2",
              "flex": 1,
            },
            Object {
              "flex": 1,
            },
          ]
        }
        onScroll={[Function]}
        refreshControl={
          <MyRefreshControl
            onRefresh={[Function]}
            refreshing={false}
          />
        }
        scrollEventThrottle={16}
        style={
          Array [
            Object {
              "backgroundColor": "#ECEEF2",
            },
          ]
        }
      >
        <FlatList
          ListFooterComponent={null}
          bounces={false}
          data={
            Array [
              Object {
                "id": 0,
                "organization": Object {
                  "id": "000",
                },
                "receiver": Object {
                  "id": "00",
                },
              },
              Object {
                "id": 1,
                "organization": Object {
                  "id": "111",
                },
                "receiver": Object {
                  "id": "11",
                },
              },
              Object {
                "id": 2,
                "organization": Object {
                  "id": "222",
                },
                "receiver": Object {
                  "id": "22",
                },
              },
            ]
          }
          disableVirtualization={false}
          extraData={
            Object {
              "hideStars": true,
            }
          }
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onEndReachedThreshold={2}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          showsVerticalScrollIndicator={false}
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "overflow": "scroll",
                "paddingBottom": undefined,
              },
              Object {
                "paddingBottom": 40,
              },
            ]
          }
          updateCellsBatchingPeriod={50}
          windowSize={21}
        />
      </ScrollViewMock>
    </View>
  </View>
</View>
`;

exports[`StepsScreen renders with no focused steps correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <Component
    screen="StepsTab"
  />
  <Header
    left={
      <IconButton
        name="menuIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    title="STEPS OF FAITH"
  />
  <View
    style={
      Object {
        "backgroundColor": "#ECEEF2",
        "flex": 1,
      }
    }
  >
    <Connect(withI18nextTranslation(OnboardingCard))
      type="steps"
    />
    <View
      style={
        Object {
          "backgroundColor": "#007398",
          "flex": 1,
        }
      }
    >
      <ScrollViewMock
        contentContainerStyle={
          Array [
            Object {
              "backgroundColor": "#ECEEF2",
              "flex": 1,
            },
            Object {
              "flex": 1,
            },
          ]
        }
        onScroll={[Function]}
        refreshControl={
          <MyRefreshControl
            onRefresh={[Function]}
            refreshing={false}
          />
        }
        scrollEventThrottle={16}
        style={
          Array [
            Object {
              "backgroundColor": "#ECEEF2",
            },
          ]
        }
      >
        <FlatList
          ListFooterComponent={null}
          bounces={false}
          data={
            Array [
              Object {
                "id": 0,
                "organization": Object {
                  "id": "000",
                },
                "receiver": Object {
                  "id": "00",
                },
              },
              Object {
                "id": 1,
                "organization": Object {
                  "id": "111",
                },
                "receiver": Object {
                  "id": "11",
                },
              },
              Object {
                "id": 2,
                "organization": Object {
                  "id": "222",
                },
                "receiver": Object {
                  "id": "22",
                },
              },
              Object {
                "id": 3,
                "organization": Object {
                  "id": "333",
                },
                "receiver": Object {
                  "id": "33",
                },
              },
            ]
          }
          disableVirtualization={false}
          extraData={
            Object {
              "hideStars": false,
            }
          }
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onEndReachedThreshold={2}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          showsVerticalScrollIndicator={false}
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "overflow": "scroll",
                "paddingBottom": undefined,
              },
              Object {
                "paddingBottom": 40,
              },
            ]
          }
          updateCellsBatchingPeriod={50}
          windowSize={21}
        />
      </ScrollViewMock>
    </View>
  </View>
</View>
`;

exports[`StepsScreen renders with no steps (focused or unfocused) correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <Component
    screen="StepsTab"
  />
  <Header
    left={
      <IconButton
        name="menuIcon"
        onPress={[Function]}
        type="MissionHub"
      />
    }
    title="STEPS OF FAITH"
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ECEEF2",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../assets/images/footprints.png",
        }
      }
    />
    <MyText
      header={true}
      style={
        Object {
          "color": "#007398",
          "fontSize": 42,
          "paddingTop": 10,
        }
      }
    >
      STEPS OF FAITH
    </MyText>
    <View
      style={
        Object {
          "paddingHorizontal": 70,
          "paddingVertical": 10,
        }
      }
    >
      <MyText
        style={
          Object {
            "color": "#505256",
            "fontSize": 16,
            "textAlign": "center",
          }
        }
      >
        You don't have any Steps of Faith.
      </MyText>
      <MyText
        style={
          Object {
            "color": "#505256",
            "fontSize": 16,
            "textAlign": "center",
          }
        }
      >
        Choose a person and add some new steps.
      </MyText>
    </View>
    <BottomButton
      onPress={[Function]}
      text="Take a Step With Someone"
    />
  </View>
</View>
`;
