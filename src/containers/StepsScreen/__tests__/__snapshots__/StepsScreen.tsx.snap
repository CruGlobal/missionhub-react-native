// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`handleRefresh refetches steps and checks for unread comments 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -346,14 +346,14 @@
        onScrollBeginDrag={[Function anonymous]}
        onScrollEndDrag={[Function anonymous]}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function _callee]}
-           refreshing={false}
+           refreshing={true}
          />
        }
-       refreshing={false}
+       refreshing={true}
        removeClippedSubviews={false}
        renderItem={[Function anonymous]}
        scrollEventThrottle={50}
        showsVerticalScrollIndicator={false}
        stickyHeaderIndices={Array []}"
`;

exports[`renders empty screen correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderRadius": 0,
              "borderWidth": 0,
              "height": 60,
              "justifyContent": "center",
              "margin": 0,
              "opacity": 1,
              "paddingHorizontal": 20,
              "paddingVertical": 10,
            }
          }
          testID="menuButton"
        >
          <Image
            resizeMode="cover"
            source={
              Object {
                "uri": "quisquam recusandae alias",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 20,
                  "height": 42,
                  "width": 42,
                },
                Object {
                  "backgroundColor": "rgb(167, 154, 115)",
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flex": 4,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "lineHeight": 20,
                "textAlignVertical": "center",
                "textTransform": "none",
              },
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              },
            ]
          }
        >
          Steps of Faith
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "#ECEEF2",
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../assets/images/footprints.png",
          }
        }
      />
      <Text
        style={
          Object {
            "color": "#007398",
            "fontFamily": "AmaticSC-Bold",
            "fontSize": 42,
            "fontStyle": "normal",
            "letterSpacing": 2,
            "lineHeight": 42,
            "paddingTop": 10,
            "textAlignVertical": "center",
            "textTransform": "lowercase",
          }
        }
      >
        STEPS OF FAITH
      </Text>
      <Text
        style={
          Object {
            "color": "#505256",
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 16,
            "fontStyle": "normal",
            "lineHeight": 24,
            "textAlign": "center",
            "textAlignVertical": "center",
            "textTransform": "none",
          }
        }
      >
        You don't have any Steps of Faith.
      </Text>
      <Text
        style={
          Object {
            "color": "#505256",
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 16,
            "fontStyle": "normal",
            "lineHeight": 24,
            "textAlign": "center",
            "textAlignVertical": "center",
            "textTransform": "none",
          }
        }
      >
        Choose a person and add some new steps.
      </Text>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "bottom": 20,
            "left": 50,
            "position": "absolute",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderRadius": 50,
              "borderWidth": 0,
              "height": 48,
              "justifyContent": "center",
              "margin": 0,
              "opacity": 1,
              "paddingHorizontal": 20,
              "paddingVertical": 10,
              "width": 650,
            }
          }
          testID="bottomButton"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Bold",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Array [
                  undefined,
                ],
              ]
            }
          >
            TAKE A STEP WITH SOMEONE
          </Text>
        </View>
      </RCTSafeAreaView>
    </View>
  </View>
</View>
`;

exports[`renders loading screen correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderRadius": 0,
              "borderWidth": 0,
              "height": 60,
              "justifyContent": "center",
              "margin": 0,
              "opacity": 1,
              "paddingHorizontal": 20,
              "paddingVertical": 10,
            }
          }
          testID="menuButton"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                Array [
                  Object {
                    "borderRadius": 20,
                    "height": 42,
                    "width": 42,
                  },
                  Object {
                    "backgroundColor": "#B4B6BA",
                  },
                  undefined,
                ],
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "lineHeight": 16,
                    "textAlign": "center",
                    "textAlignVertical": "bottom",
                    "textTransform": "none",
                  },
                  Object {
                    "fontSize": 26,
                    "lineHeight": 20,
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flex": 4,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "lineHeight": 20,
                "textAlignVertical": "center",
                "textTransform": "none",
              },
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              },
            ]
          }
        >
          Steps of Faith
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "#ECEEF2",
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "alignItems": "center",
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
            Object {
              "flex": 2,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "flex": 10,
            },
          ]
        }
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "testUri": "../../../assets/gifs/HappyBlueLoop.gif",
            }
          }
          style={
            Object {
              "flex": 1,
              "width": 750,
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {},
            Object {
              "flex": 2,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "color": "#007398",
              "fontFamily": "AmaticSC-Bold",
              "fontSize": 64,
              "fontStyle": "normal",
              "letterSpacing": 2,
              "lineHeight": 48,
              "paddingVertical": 0,
              "textAlignVertical": "center",
              "textTransform": "lowercase",
            }
          }
        >
          LOADING
        </Text>
      </View>
      <View
        style={
          Array [
            Object {},
            Object {
              "flex": 2,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`renders screen with steps correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderRadius": 0,
              "borderWidth": 0,
              "height": 60,
              "justifyContent": "center",
              "margin": 0,
              "opacity": 1,
              "paddingHorizontal": 20,
              "paddingVertical": 10,
            }
          }
          testID="menuButton"
        >
          <Image
            resizeMode="cover"
            source={
              Object {
                "uri": "eos itaque velit",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 20,
                  "height": 42,
                  "width": 42,
                },
                Object {
                  "backgroundColor": "rgb(160, 123, 115)",
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flex": 4,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "lineHeight": 20,
                "textAlignVertical": "center",
                "textTransform": "none",
              },
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              },
            ]
          }
        >
          Steps of Faith
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "#ECEEF2",
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderRadius": 8,
            "elevation": 4,
            "flexDirection": "row",
            "marginHorizontal": 16,
            "marginVertical": 8,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.3,
            "shadowRadius": 2,
          },
          Object {
            "backgroundColor": "#ffffff",
            "borderRadius": 0,
            "marginBottom": 5,
            "marginHorizontal": 0,
            "marginVertical": 0,
            "position": "relative",
            "shadowColor": "#B4B6BA",
            "shadowOffset": Object {
              "height": 8,
              "width": 0,
            },
            "shadowOpacity": 0.3,
            "shadowRadius": 4,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "padding": 25,
              "paddingTop": 35,
            },
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "testUri": "../../../assets/images/footprints.png",
            }
          }
          style={
            Object {
              "height": 60,
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#007398",
              "fontFamily": "SourceSansPro-Light",
              "fontSize": 24,
              "fontStyle": "normal",
              "lineHeight": 30,
              "paddingTop": 5,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Steps of Faith
        </Text>
        <Text
          style={
            Object {
              "color": "#505256",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "fontStyle": "normal",
              "lineHeight": 24,
              "paddingHorizontal": 50,
              "paddingVertical": 5,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Choose a person in People view to add a new step
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "position": "absolute",
              "right": 10,
              "top": 10,
            },
            Object {},
          ]
        }
      >
        <SvgMock
          color="#B4B6BA"
          onPress={[Function]}
          testID="CloseIcon"
        />
      </View>
    </View>
    <RCTScrollView
      ListFooterComponent={null}
      contentContainerStyle={
        Object {
          "paddingVertical": 8,
        }
      }
      data={
        Array [
          Object {
            "__typename": "Step",
            "community": Object {
              "__typename": "Community",
              "id": "3",
            },
            "completedAt": "2014-08-26T07:39:14.970Z",
            "id": "1",
            "receiver": Object {
              "__typename": "Person",
              "fullName": "Heather Hahn",
              "id": "2",
            },
            "reminder": Object {
              "__typename": "StepReminder",
              "id": "4",
              "nextOccurrenceAt": "2015-08-09T09:31:34.869Z",
              "reminderType": "once",
            },
            "stepType": "relate",
            "title": "Repellat quisquam recusandae alias consequuntur corporis.",
          },
          Object {
            "__typename": "Step",
            "community": Object {
              "__typename": "Community",
              "id": "7",
            },
            "completedAt": "2011-04-05T20:54:44.943Z",
            "id": "5",
            "receiver": Object {
              "__typename": "Person",
              "fullName": "Alek Lesch",
              "id": "6",
            },
            "reminder": Object {
              "__typename": "StepReminder",
              "id": "8",
              "nextOccurrenceAt": "2015-06-20T04:51:30.834Z",
              "reminderType": "once",
            },
            "stepType": "bond",
            "title": "Ratione ut sunt qui amet iure ut libero qui recusandae.",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={Array []}
      testID="stepsList"
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <StepItem
            showCheckbox={false}
            step={
              Object {
                "__typename": "Step",
                "community": Object {
                  "__typename": "Community",
                  "id": "3",
                },
                "completedAt": "2014-08-26T07:39:14.970Z",
                "id": "1",
                "receiver": Object {
                  "__typename": "Person",
                  "fullName": "Heather Hahn",
                  "id": "2",
                },
                "reminder": Object {
                  "__typename": "StepReminder",
                  "id": "4",
                  "nextOccurrenceAt": "2015-08-09T09:31:34.869Z",
                  "reminderType": "once",
                },
                "stepType": "relate",
                "title": "Repellat quisquam recusandae alias consequuntur corporis.",
              }
            }
            testID="stepItem"
          />
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <StepItem
            showCheckbox={false}
            step={
              Object {
                "__typename": "Step",
                "community": Object {
                  "__typename": "Community",
                  "id": "7",
                },
                "completedAt": "2011-04-05T20:54:44.943Z",
                "id": "5",
                "receiver": Object {
                  "__typename": "Person",
                  "fullName": "Alek Lesch",
                  "id": "6",
                },
                "reminder": Object {
                  "__typename": "StepReminder",
                  "id": "8",
                  "nextOccurrenceAt": "2015-06-20T04:51:30.834Z",
                  "reminderType": "once",
                },
                "stepType": "bond",
                "title": "Ratione ut sunt qui amet iure ut libero qui recusandae.",
              }
            }
            testID="stepItem"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`stepsList onEndReached should paginate when the end of the scroll list is reached 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -325,10 +325,54 @@
                \\"reminderType\\": \\"once\\",
              },
              \\"stepType\\": \\"bond\\",
              \\"title\\": \\"Ratione ut sunt qui amet iure ut libero qui recusandae.\\",
            },
+           Object {
+             \\"__typename\\": \\"Step\\",
+             \\"community\\": Object {
+               \\"__typename\\": \\"Community\\",
+               \\"id\\": \\"13\\",
+             },
+             \\"completedAt\\": \\"2013-05-02T13:44:36.598Z\\",
+             \\"id\\": \\"11\\",
+             \\"receiver\\": Object {
+               \\"__typename\\": \\"Person\\",
+               \\"fullName\\": \\"Larue Johnston\\",
+               \\"id\\": \\"12\\",
+             },
+             \\"reminder\\": Object {
+               \\"__typename\\": \\"StepReminder\\",
+               \\"id\\": \\"14\\",
+               \\"nextOccurrenceAt\\": \\"2014-09-15T22:43:13.893Z\\",
+               \\"reminderType\\": \\"once\\",
+             },
+             \\"stepType\\": \\"affirm\\",
+             \\"title\\": \\"Et porro ut et ipsam explicabo eligendi occaecati debitis.\\",
+           },
+           Object {
+             \\"__typename\\": \\"Step\\",
+             \\"community\\": Object {
+               \\"__typename\\": \\"Community\\",
+               \\"id\\": \\"17\\",
+             },
+             \\"completedAt\\": \\"2018-01-22T22:32:29.415Z\\",
+             \\"id\\": \\"15\\",
+             \\"receiver\\": Object {
+               \\"__typename\\": \\"Person\\",
+               \\"fullName\\": \\"Edythe Haley\\",
+               \\"id\\": \\"16\\",
+             },
+             \\"reminder\\": Object {
+               \\"__typename\\": \\"StepReminder\\",
+               \\"id\\": \\"18\\",
+               \\"nextOccurrenceAt\\": \\"2011-09-11T14:47:27.446Z\\",
+               \\"reminderType\\": \\"once\\",
+             },
+             \\"stepType\\": \\"pray\\",
+             \\"title\\": \\"Saepe eum dicta eum eaque enim ipsum inventore debitis.\\",
+           },
          ]
        }
        disableVirtualization={false}
        getItem={[Function anonymous]}
        getItemCount={[Function anonymous]}
@@ -428,9 +472,82 @@
                }
              }
              testID=\\"stepItem\\"
            />
          </View>
+         <View
+           onLayout={[Function onLayout]}
+           style={null}
+         >
+           <StepItem
+             showCheckbox={false}
+             step={
+               Object {
+                 \\"__typename\\": \\"Step\\",
+                 \\"community\\": Object {
+                   \\"__typename\\": \\"Community\\",
+                   \\"id\\": \\"13\\",
+                 },
+                 \\"completedAt\\": \\"2013-05-02T13:44:36.598Z\\",
+                 \\"id\\": \\"11\\",
+                 \\"receiver\\": Object {
+                   \\"__typename\\": \\"Person\\",
+                   \\"fullName\\": \\"Larue Johnston\\",
+                   \\"id\\": \\"12\\",
+                 },
+                 \\"reminder\\": Object {
+                   \\"__typename\\": \\"StepReminder\\",
+                   \\"id\\": \\"14\\",
+                   \\"nextOccurrenceAt\\": \\"2014-09-15T22:43:13.893Z\\",
+                   \\"reminderType\\": \\"once\\",
+                 },
+                 \\"stepType\\": \\"affirm\\",
+                 \\"title\\": \\"Et porro ut et ipsam explicabo eligendi occaecati debitis.\\",
+               }
+             }
+             testID=\\"stepItem\\"
+           />
+         </View>
+         <View
+           onLayout={[Function onLayout]}
+           style={null}
+         >
+           <StepItem
+             showCheckbox={false}
+             step={
+               Object {
+                 \\"__typename\\": \\"Step\\",
+                 \\"community\\": Object {
+                   \\"__typename\\": \\"Community\\",
+                   \\"id\\": \\"17\\",
+                 },
+                 \\"completedAt\\": \\"2018-01-22T22:32:29.415Z\\",
+                 \\"id\\": \\"15\\",
+                 \\"receiver\\": Object {
+                   \\"__typename\\": \\"Person\\",
+                   \\"fullName\\": \\"Edythe Haley\\",
+                   \\"id\\": \\"16\\",
+                 },
+                 \\"reminder\\": Object {
+                   \\"__typename\\": \\"StepReminder\\",
+                   \\"id\\": \\"18\\",
+                   \\"nextOccurrenceAt\\": \\"2011-09-11T14:47:27.446Z\\",
+                   \\"reminderType\\": \\"once\\",
+                 },
+                 \\"stepType\\": \\"pray\\",
+                 \\"title\\": \\"Saepe eum dicta eum eaque enim ipsum inventore debitis.\\",
+               }
+             }
+             testID=\\"stepItem\\"
+           />
+         </View>
+         <View
+           style={
+             Object {
+               \\"height\\": 0,
+             }
+           }
+         />
        </View>
      </RCTScrollView>
    </View>
  </View>"
`;
