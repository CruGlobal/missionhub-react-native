// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renderForeground renders correctly 1`] = `
<View
  alignItems="center"
  flex={1}
>
  <Header
    shadow={false}
  />
  <Icon
    name="addStepIcon"
    style={
      Object {
        "color": "#52C5DC",
        "fontSize": 40,
      }
    }
    type="MissionHub"
  />
  <MyText
    header={true}
    style={
      Object {
        "color": "#52C5DC",
        "fontSize": 36,
        "letterSpacing": 2,
        "lineHeight": 48,
      }
    }
  >
    Add Steps of Faith
  </MyText>
  <MyText
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 16,
        "lineHeight": 24,
        "paddingBottom": 36,
        "paddingHorizontal": 50,
        "textAlign": "center",
      }
    }
  />
</View>
`;

exports[`renderStickyHeader renders correctly 1`] = `
<Header
  center={
    <MyText
      style={
        Object {
          "color": "#ffffff",
          "fontSize": 14,
        }
      }
    >
      ADD STEPS OF FAITH
    </MyText>
  }
  shadow={true}
/>
`;

exports[`with enableBackButton renders correctly 1`] = `
<View
  flex={1}
>
  <ParallaxScrollView
    backgroundColor="#007398"
    backgroundScrollSpeed={5}
    contentBackgroundColor="#ECEEF2"
    contentContainerStyle={null}
    fadeOutForeground={true}
    onChangeHeaderVisibility={[Function]}
    outputScaleValue={5}
    parallaxHeaderHeight={215}
    renderBackground={[Function]}
    renderContentBackground={[Function]}
    renderForeground={[Function]}
    renderParallaxHeader={[Function]}
    renderScrollComponent={[Function]}
    renderStickyHeader={[Function]}
    stickyHeaderHeight={65}
  >
    <Connect(withI18nextTranslation(StepsList))
      contactName="roger"
      contactStageId="3"
      next={[MockFunction]}
      organization={
        Object {
          "id": "4234234",
        }
      }
      receiverId="252342354234"
    />
  </ParallaxScrollView>
  <SafeAreaView>
    <BottomButton
      onPress={[Function]}
      text="CREATE YOUR OWN STEP"
    />
  </SafeAreaView>
  <Connect(BackButton)
    absolute={true}
    customNavigate={[Function]}
  />
</View>
`;

exports[`with enableSkipButton renders correctly 1`] = `
<View
  flex={1}
>
  <ParallaxScrollView
    backgroundColor="#007398"
    backgroundScrollSpeed={5}
    contentBackgroundColor="#ECEEF2"
    contentContainerStyle={null}
    fadeOutForeground={true}
    onChangeHeaderVisibility={[Function]}
    outputScaleValue={5}
    parallaxHeaderHeight={215}
    renderBackground={[Function]}
    renderContentBackground={[Function]}
    renderForeground={[Function]}
    renderParallaxHeader={[Function]}
    renderScrollComponent={[Function]}
    renderStickyHeader={[Function]}
    stickyHeaderHeight={65}
  >
    <Connect(withI18nextTranslation(StepsList))
      contactName="roger"
      contactStageId="3"
      next={[MockFunction]}
      organization={
        Object {
          "id": "4234234",
        }
      }
      receiverId="252342354234"
    />
  </ParallaxScrollView>
  <SafeAreaView>
    <BottomButton
      onPress={[Function]}
      text="CREATE YOUR OWN STEP"
    />
  </SafeAreaView>
  <AbsoluteSkip
    onSkip={[Function]}
  />
</View>
`;

exports[`without enableBackButton nor enableSkipButton renders correctly 1`] = `
<View
  flex={1}
>
  <ParallaxScrollView
    backgroundColor="#007398"
    backgroundScrollSpeed={5}
    contentBackgroundColor="#ECEEF2"
    contentContainerStyle={null}
    fadeOutForeground={true}
    onChangeHeaderVisibility={[Function]}
    outputScaleValue={5}
    parallaxHeaderHeight={215}
    renderBackground={[Function]}
    renderContentBackground={[Function]}
    renderForeground={[Function]}
    renderParallaxHeader={[Function]}
    renderScrollComponent={[Function]}
    renderStickyHeader={[Function]}
    stickyHeaderHeight={65}
  >
    <Connect(withI18nextTranslation(StepsList))
      contactName="roger"
      contactStageId="3"
      next={[MockFunction]}
      organization={
        Object {
          "id": "4234234",
        }
      }
      receiverId="252342354234"
    />
  </ParallaxScrollView>
  <SafeAreaView>
    <BottomButton
      onPress={[Function]}
      text="CREATE YOUR OWN STEP"
    />
  </SafeAreaView>
</View>
`;
