// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`in onboarding renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 18,
                    },
                    Array [
                      Object {
                        "margin": 10,
                      },
                      undefined,
                    ],
                  ],
                  Object {
                    "fontFamily": "icomoon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              î¤ƒ
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "opacity": 1,
                "padding": 15,
              }
            }
            testID="skipButton"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "bold",
                    "letterSpacing": 1,
                    "lineHeight": 18,
                    "textAlign": "center",
                    "textAlignVertical": "center",
                    "textTransform": "uppercase",
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "SourceSansPro-Regular",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                      "lineHeight": 20,
                      "textAlignVertical": "center",
                      "textTransform": "none",
                    },
                    undefined,
                  ],
                ]
              }
            >
              SKIP
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 0,
                "borderWidth": 0,
                "height": 60,
                "justifyContent": "center",
                "margin": 0,
                "opacity": 1,
                "paddingHorizontal": 20,
                "paddingVertical": 10,
              }
            }
            testID="SelectStepExplainerIconButton"
          >
            <SvgMock
              color="#ffffff"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  >
    <Text
      numberOfLines={2}
      style={
        Object {
          "color": "#ffffff",
          "fontFamily": "SourceSansPro-Light",
          "fontSize": 24,
          "fontStyle": "normal",
          "fontWeight": "300",
          "lineHeight": 30,
          "marginHorizontal": 30,
          "marginVertical": 35,
          "textAlign": "center",
          "textAlignVertical": "center",
          "textTransform": "none",
        }
      }
    >
      Choose a step to take with them this week...
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#ffffff"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#ffffff",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Relate
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomWidth": 9,
                  "borderLeftColor": "transparent",
                  "borderLeftWidth": 7,
                  "borderRightColor": "transparent",
                  "borderRightWidth": 7,
                  "borderStyle": "solid",
                  "height": 0,
                  "width": 0,
                },
                Object {
                  "borderBottomColor": "#ECEEF2",
                  "transform": Array [
                    Object {
                      "rotate": "0deg",
                    },
                  ],
                },
                Object {
                  "marginTop": 12,
                },
              ]
            }
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Pray
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Care
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Share
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListFooterComponent={
      <ForwardRef(SafeAreaView)>
        <FooterLoading />
      </ForwardRef(SafeAreaView)>
    }
    ListHeaderComponent={
      <ErrorNotice
        message="Error loading step suggestions"
        refetch={[Function]}
      />
    }
    contentContainerStyle={
      Object {
        "marginTop": 12,
        "paddingBottom": 24,
      }
    }
    data={
      Array [
        Object {
          "action": [Function],
          "icon": true,
          "key": "custom",
          "text": "Create your own Relate Step",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={true}
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    scrollIndicatorInsets={
      Object {
        "right": 1,
      }
    }
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "borderRadius": 8,
              "elevation": 4,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginHorizontal": 20,
              "marginVertical": 6,
              "opacity": 1,
              "padding": 20,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Create your own Relate Step
          </Text>
          <SvgMock />
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
        >
          <View
            style={
              Array [
                Object {
                  "padding": 10,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="rgba(0, 0, 0, 1)"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </RCTSafeAreaView>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`loading should hide tabs when locale is not en or es 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -251,307 +251,10 @@
          }
        }
      >
        Choose a step to take with them this week...
      </Text>
-     <View
-       style={
-         Object {
-           \\"flexDirection\\": \\"row\\",
-           \\"justifyContent\\": \\"space-around\\",
-         }
-       }
-     >
-       <View
-         accessible={true}
-         focusable={true}
-         onClick={[Function onClick]}
-         onResponderGrant={[Function onResponderGrant]}
-         onResponderMove={[Function onResponderMove]}
-         onResponderRelease={[Function onResponderRelease]}
-         onResponderTerminate={[Function onResponderTerminate]}
-         onResponderTerminationRequest={[Function onResponderTerminationRequest]}
-         onStartShouldSetResponder={[Function onStartShouldSetResponder]}
-         style={
-           Object {
-             \\"opacity\\": 1,
-           }
-         }
-       >
-         <View
-           style={
-             Object {
-               \\"alignItems\\": \\"center\\",
-             }
-           }
-         >
-           <View
-             style={
-               Array [
-                 Object {
-                   \\"alignItems\\": \\"center\\",
-                   \\"flexDirection\\": \\"column\\",
-                 },
-                 undefined,
-               ]
-             }
-           >
-             <SvgMock
-               color=\\"#ffffff\\"
-               height={32}
-             />
-             <Text
-               style={
-                 Array [
-                   Object {
-                     \\"color\\": \\"#505256\\",
-                     \\"fontFamily\\": \\"SourceSansPro-Regular\\",
-                     \\"fontSize\\": 14,
-                     \\"fontStyle\\": \\"normal\\",
-                     \\"fontWeight\\": \\"normal\\",
-                     \\"lineHeight\\": 20,
-                     \\"textAlignVertical\\": \\"center\\",
-                     \\"textTransform\\": \\"none\\",
-                   },
-                   Object {
-                     \\"color\\": \\"#ffffff\\",
-                     \\"marginTop\\": 7,
-                     \\"paddingLeft\\": 4,
-                   },
-                   undefined,
-                 ]
-               }
-             >
-               Relate
-             </Text>
-           </View>
-           <View
-             style={
-               Array [
-                 Object {
-                   \\"backgroundColor\\": \\"transparent\\",
-                   \\"borderBottomWidth\\": 9,
-                   \\"borderLeftColor\\": \\"transparent\\",
-                   \\"borderLeftWidth\\": 7,
-                   \\"borderRightColor\\": \\"transparent\\",
-                   \\"borderRightWidth\\": 7,
-                   \\"borderStyle\\": \\"solid\\",
-                   \\"height\\": 0,
-                   \\"width\\": 0,
-                 },
-                 Object {
-                   \\"borderBottomColor\\": \\"#ECEEF2\\",
-                   \\"transform\\": Array [
-                     Object {
-                       \\"rotate\\": \\"0deg\\",
-                     },
-                   ],
-                 },
-                 Object {
-                   \\"marginTop\\": 12,
-                 },
-               ]
-             }
-           />
-         </View>
-       </View>
-       <View
-         accessible={true}
-         focusable={true}
-         onClick={[Function onClick]}
-         onResponderGrant={[Function onResponderGrant]}
-         onResponderMove={[Function onResponderMove]}
-         onResponderRelease={[Function onResponderRelease]}
-         onResponderTerminate={[Function onResponderTerminate]}
-         onResponderTerminationRequest={[Function onResponderTerminationRequest]}
-         onStartShouldSetResponder={[Function onStartShouldSetResponder]}
-         style={
-           Object {
-             \\"opacity\\": 1,
-           }
-         }
-       >
-         <View
-           style={
-             Object {
-               \\"alignItems\\": \\"center\\",
-             }
-           }
-         >
-           <View
-             style={
-               Array [
-                 Object {
-                   \\"alignItems\\": \\"center\\",
-                   \\"flexDirection\\": \\"column\\",
-                 },
-                 undefined,
-               ]
-             }
-           >
-             <SvgMock
-               color=\\"#3CC8E6\\"
-               height={32}
-             />
-             <Text
-               style={
-                 Array [
-                   Object {
-                     \\"color\\": \\"#505256\\",
-                     \\"fontFamily\\": \\"SourceSansPro-Regular\\",
-                     \\"fontSize\\": 14,
-                     \\"fontStyle\\": \\"normal\\",
-                     \\"fontWeight\\": \\"normal\\",
-                     \\"lineHeight\\": 20,
-                     \\"textAlignVertical\\": \\"center\\",
-                     \\"textTransform\\": \\"none\\",
-                   },
-                   Object {
-                     \\"color\\": \\"#3CC8E6\\",
-                     \\"marginTop\\": 7,
-                     \\"paddingLeft\\": 4,
-                   },
-                   undefined,
-                 ]
-               }
-             >
-               Pray
-             </Text>
-           </View>
-         </View>
-       </View>
-       <View
-         accessible={true}
-         focusable={true}
-         onClick={[Function onClick]}
-         onResponderGrant={[Function onResponderGrant]}
-         onResponderMove={[Function onResponderMove]}
-         onResponderRelease={[Function onResponderRelease]}
-         onResponderTerminate={[Function onResponderTerminate]}
-         onResponderTerminationRequest={[Function onResponderTerminationRequest]}
-         onStartShouldSetResponder={[Function onStartShouldSetResponder]}
-         style={
-           Object {
-             \\"opacity\\": 1,
-           }
-         }
-       >
-         <View
-           style={
-             Object {
-               \\"alignItems\\": \\"center\\",
-             }
-           }
-         >
-           <View
-             style={
-               Array [
-                 Object {
-                   \\"alignItems\\": \\"center\\",
-                   \\"flexDirection\\": \\"column\\",
-                 },
-                 undefined,
-               ]
-             }
-           >
-             <SvgMock
-               color=\\"#3CC8E6\\"
-               height={32}
-             />
-             <Text
-               style={
-                 Array [
-                   Object {
-                     \\"color\\": \\"#505256\\",
-                     \\"fontFamily\\": \\"SourceSansPro-Regular\\",
-                     \\"fontSize\\": 14,
-                     \\"fontStyle\\": \\"normal\\",
-                     \\"fontWeight\\": \\"normal\\",
-                     \\"lineHeight\\": 20,
-                     \\"textAlignVertical\\": \\"center\\",
-                     \\"textTransform\\": \\"none\\",
-                   },
-                   Object {
-                     \\"color\\": \\"#3CC8E6\\",
-                     \\"marginTop\\": 7,
-                     \\"paddingLeft\\": 4,
-                   },
-                   undefined,
-                 ]
-               }
-             >
-               Care
-             </Text>
-           </View>
-         </View>
-       </View>
-       <View
-         accessible={true}
-         focusable={true}
-         onClick={[Function onClick]}
-         onResponderGrant={[Function onResponderGrant]}
-         onResponderMove={[Function onResponderMove]}
-         onResponderRelease={[Function onResponderRelease]}
-         onResponderTerminate={[Function onResponderTerminate]}
-         onResponderTerminationRequest={[Function onResponderTerminationRequest]}
-         onStartShouldSetResponder={[Function onStartShouldSetResponder]}
-         style={
-           Object {
-             \\"opacity\\": 1,
-           }
-         }
-       >
-         <View
-           style={
-             Object {
-               \\"alignItems\\": \\"center\\",
-             }
-           }
-         >
-           <View
-             style={
-               Array [
-                 Object {
-                   \\"alignItems\\": \\"center\\",
-                   \\"flexDirection\\": \\"column\\",
-                 },
-                 undefined,
-               ]
-             }
-           >
-             <SvgMock
-               color=\\"#3CC8E6\\"
-               height={32}
-             />
-             <Text
-               style={
-                 Array [
-                   Object {
-                     \\"color\\": \\"#505256\\",
-                     \\"fontFamily\\": \\"SourceSansPro-Regular\\",
-                     \\"fontSize\\": 14,
-                     \\"fontStyle\\": \\"normal\\",
-                     \\"fontWeight\\": \\"normal\\",
-                     \\"lineHeight\\": 20,
-                     \\"textAlignVertical\\": \\"center\\",
-                     \\"textTransform\\": \\"none\\",
-                   },
-                   Object {
-                     \\"color\\": \\"#3CC8E6\\",
-                     \\"marginTop\\": 7,
-                     \\"paddingLeft\\": 4,
-                   },
-                   undefined,
-                 ]
-               }
-             >
-               Share
-             </Text>
-           </View>
-         </View>
-       </View>
-     </View>
    </View>
    <RCTScrollView
      ListFooterComponent={
        <ForwardRef(SafeAreaView)>
          <FooterLoading />"
`;

exports[`loading should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 18,
                    },
                    Array [
                      Object {
                        "margin": 10,
                      },
                      undefined,
                    ],
                  ],
                  Object {
                    "fontFamily": "icomoon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              î¤ƒ
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 0,
                "borderWidth": 0,
                "height": 60,
                "justifyContent": "center",
                "margin": 0,
                "opacity": 1,
                "paddingHorizontal": 20,
                "paddingVertical": 10,
              }
            }
            testID="SelectStepExplainerIconButton"
          >
            <SvgMock
              color="#ffffff"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  >
    <Text
      numberOfLines={2}
      style={
        Object {
          "color": "#ffffff",
          "fontFamily": "SourceSansPro-Light",
          "fontSize": 24,
          "fontStyle": "normal",
          "fontWeight": "300",
          "lineHeight": 30,
          "marginHorizontal": 30,
          "marginVertical": 35,
          "textAlign": "center",
          "textAlignVertical": "center",
          "textTransform": "none",
        }
      }
    >
      Choose a step to take with them this week...
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#ffffff"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#ffffff",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Relate
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomWidth": 9,
                  "borderLeftColor": "transparent",
                  "borderLeftWidth": 7,
                  "borderRightColor": "transparent",
                  "borderRightWidth": 7,
                  "borderStyle": "solid",
                  "height": 0,
                  "width": 0,
                },
                Object {
                  "borderBottomColor": "#ECEEF2",
                  "transform": Array [
                    Object {
                      "rotate": "0deg",
                    },
                  ],
                },
                Object {
                  "marginTop": 12,
                },
              ]
            }
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Pray
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Care
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Share
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListFooterComponent={
      <ForwardRef(SafeAreaView)>
        <FooterLoading />
      </ForwardRef(SafeAreaView)>
    }
    ListHeaderComponent={
      <ErrorNotice
        message="Error loading step suggestions"
        refetch={[Function]}
      />
    }
    contentContainerStyle={
      Object {
        "marginTop": 12,
        "paddingBottom": 24,
      }
    }
    data={
      Array [
        Object {
          "action": [Function],
          "icon": true,
          "key": "custom",
          "text": "Create your own Relate Step",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={true}
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    scrollIndicatorInsets={
      Object {
        "right": 1,
      }
    }
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "borderRadius": 8,
              "elevation": 4,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginHorizontal": 20,
              "marginVertical": 6,
              "opacity": 1,
              "padding": 20,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Create your own Relate Step
          </Text>
          <SvgMock />
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
        >
          <View
            style={
              Array [
                Object {
                  "padding": 10,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="rgba(0, 0, 0, 1)"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </RCTSafeAreaView>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`loading should render for self steps correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 18,
                    },
                    Array [
                      Object {
                        "margin": 10,
                      },
                      undefined,
                    ],
                  ],
                  Object {
                    "fontFamily": "icomoon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              î¤ƒ
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        />
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  >
    <Text
      numberOfLines={2}
      style={
        Object {
          "color": "#ffffff",
          "fontFamily": "SourceSansPro-Light",
          "fontSize": 24,
          "fontStyle": "normal",
          "fontWeight": "300",
          "lineHeight": 30,
          "marginHorizontal": 30,
          "marginVertical": 35,
          "textAlign": "center",
          "textAlignVertical": "center",
          "textTransform": "none",
        }
      }
    >
      Choose a step of faith to take on your journey this week...
    </Text>
  </View>
  <RCTScrollView
    ListFooterComponent={
      <ForwardRef(SafeAreaView)>
        <FooterLoading />
      </ForwardRef(SafeAreaView)>
    }
    ListHeaderComponent={
      <ErrorNotice
        message="Error loading step suggestions"
        refetch={[Function]}
      />
    }
    contentContainerStyle={
      Object {
        "marginTop": 12,
        "paddingBottom": 24,
      }
    }
    data={
      Array [
        Object {
          "action": [Function],
          "icon": true,
          "key": "custom",
          "text": "Create your own  Step",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={true}
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    scrollIndicatorInsets={
      Object {
        "right": 1,
      }
    }
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "borderRadius": 8,
              "elevation": 4,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginHorizontal": 20,
              "marginVertical": 6,
              "opacity": 1,
              "padding": 20,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Create your own  Step
          </Text>
          <SvgMock />
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
        >
          <View
            style={
              Array [
                Object {
                  "padding": 10,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="rgba(0, 0, 0, 1)"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </RCTSafeAreaView>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`loading should show explainer modal if it's never been shown 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 18,
                    },
                    Array [
                      Object {
                        "margin": 10,
                      },
                      undefined,
                    ],
                  ],
                  Object {
                    "fontFamily": "icomoon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              î¤ƒ
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "opacity": 1,
                "padding": 15,
              }
            }
            testID="skipButton"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "bold",
                    "letterSpacing": 1,
                    "lineHeight": 18,
                    "textAlign": "center",
                    "textAlignVertical": "center",
                    "textTransform": "uppercase",
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "SourceSansPro-Regular",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                      "lineHeight": 20,
                      "textAlignVertical": "center",
                      "textTransform": "none",
                    },
                    undefined,
                  ],
                ]
              }
            >
              SKIP
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 0,
                "borderWidth": 0,
                "height": 60,
                "justifyContent": "center",
                "margin": 0,
                "opacity": 1,
                "paddingHorizontal": 20,
                "paddingVertical": 10,
              }
            }
            testID="SelectStepExplainerIconButton"
          >
            <SvgMock
              color="#ffffff"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  >
    <Text
      numberOfLines={2}
      style={
        Object {
          "color": "#ffffff",
          "fontFamily": "SourceSansPro-Light",
          "fontSize": 24,
          "fontStyle": "normal",
          "fontWeight": "300",
          "lineHeight": 30,
          "marginHorizontal": 30,
          "marginVertical": 35,
          "textAlign": "center",
          "textAlignVertical": "center",
          "textTransform": "none",
        }
      }
    >
      Choose a step to take with them this week...
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#ffffff"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#ffffff",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Relate
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomWidth": 9,
                  "borderLeftColor": "transparent",
                  "borderLeftWidth": 7,
                  "borderRightColor": "transparent",
                  "borderRightWidth": 7,
                  "borderStyle": "solid",
                  "height": 0,
                  "width": 0,
                },
                Object {
                  "borderBottomColor": "#ECEEF2",
                  "transform": Array [
                    Object {
                      "rotate": "0deg",
                    },
                  ],
                },
                Object {
                  "marginTop": 12,
                },
              ]
            }
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Pray
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Care
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Share
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListFooterComponent={
      <ForwardRef(SafeAreaView)>
        <FooterLoading />
      </ForwardRef(SafeAreaView)>
    }
    ListHeaderComponent={
      <ErrorNotice
        message="Error loading step suggestions"
        refetch={[Function]}
      />
    }
    contentContainerStyle={
      Object {
        "marginTop": 12,
        "paddingBottom": 24,
      }
    }
    data={
      Array [
        Object {
          "action": [Function],
          "icon": true,
          "key": "custom",
          "text": "Create your own Relate Step",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={true}
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    scrollIndicatorInsets={
      Object {
        "right": 1,
      }
    }
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "borderRadius": 8,
              "elevation": 4,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginHorizontal": 20,
              "marginVertical": 6,
              "opacity": 1,
              "padding": 20,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Create your own Relate Step
          </Text>
          <SvgMock />
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
        >
          <View
            style={
              Array [
                Object {
                  "padding": 10,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="rgba(0, 0, 0, 1)"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </RCTSafeAreaView>
      </View>
    </View>
  </RCTScrollView>
  <SelectStepExplainerModal
    onClose={[Function]}
  />
</View>
`;

exports[`loading should show tabs when locale is es 1`] = `
"Snapshot Diff:
Compared values have no visual difference."
`;

exports[`loading should show tabs when locale is pt 1`] = `
"Snapshot Diff:
Compared values have no visual difference."
`;

exports[`loading skip button should render skip button correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 18,
                    },
                    Array [
                      Object {
                        "margin": 10,
                      },
                      undefined,
                    ],
                  ],
                  Object {
                    "fontFamily": "icomoon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              î¤ƒ
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "opacity": 1,
                "padding": 15,
              }
            }
            testID="skipButton"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "bold",
                    "letterSpacing": 1,
                    "lineHeight": 18,
                    "textAlign": "center",
                    "textAlignVertical": "center",
                    "textTransform": "uppercase",
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "SourceSansPro-Regular",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                      "lineHeight": 20,
                      "textAlignVertical": "center",
                      "textTransform": "none",
                    },
                    undefined,
                  ],
                ]
              }
            >
              SKIP
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 0,
                "borderWidth": 0,
                "height": 60,
                "justifyContent": "center",
                "margin": 0,
                "opacity": 1,
                "paddingHorizontal": 20,
                "paddingVertical": 10,
              }
            }
            testID="SelectStepExplainerIconButton"
          >
            <SvgMock
              color="#ffffff"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  >
    <Text
      numberOfLines={2}
      style={
        Object {
          "color": "#ffffff",
          "fontFamily": "SourceSansPro-Light",
          "fontSize": 24,
          "fontStyle": "normal",
          "fontWeight": "300",
          "lineHeight": 30,
          "marginHorizontal": 30,
          "marginVertical": 35,
          "textAlign": "center",
          "textAlignVertical": "center",
          "textTransform": "none",
        }
      }
    >
      Choose a step to take with them this week...
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#ffffff"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#ffffff",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Relate
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomWidth": 9,
                  "borderLeftColor": "transparent",
                  "borderLeftWidth": 7,
                  "borderRightColor": "transparent",
                  "borderRightWidth": 7,
                  "borderStyle": "solid",
                  "height": 0,
                  "width": 0,
                },
                Object {
                  "borderBottomColor": "#ECEEF2",
                  "transform": Array [
                    Object {
                      "rotate": "0deg",
                    },
                  ],
                },
                Object {
                  "marginTop": 12,
                },
              ]
            }
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Pray
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Care
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Share
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListFooterComponent={
      <ForwardRef(SafeAreaView)>
        <FooterLoading />
      </ForwardRef(SafeAreaView)>
    }
    ListHeaderComponent={
      <ErrorNotice
        message="Error loading step suggestions"
        refetch={[Function]}
      />
    }
    contentContainerStyle={
      Object {
        "marginTop": 12,
        "paddingBottom": 24,
      }
    }
    data={
      Array [
        Object {
          "action": [Function],
          "icon": true,
          "key": "custom",
          "text": "Create your own Relate Step",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={true}
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    scrollIndicatorInsets={
      Object {
        "right": 1,
      }
    }
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "borderRadius": 8,
              "elevation": 4,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginHorizontal": 20,
              "marginVertical": 6,
              "opacity": 1,
              "padding": 20,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Create your own Relate Step
          </Text>
          <SvgMock />
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
        >
          <View
            style={
              Array [
                Object {
                  "padding": 10,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="rgba(0, 0, 0, 1)"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </RCTSafeAreaView>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`should hide step count badges when there are no completed steps 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 18,
                    },
                    Array [
                      Object {
                        "margin": 10,
                      },
                      undefined,
                    ],
                  ],
                  Object {
                    "fontFamily": "icomoon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              î¤ƒ
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 0,
                "borderWidth": 0,
                "height": 60,
                "justifyContent": "center",
                "margin": 0,
                "opacity": 1,
                "paddingHorizontal": 20,
                "paddingVertical": 10,
              }
            }
            testID="SelectStepExplainerIconButton"
          >
            <SvgMock
              color="#ffffff"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  >
    <Text
      numberOfLines={2}
      style={
        Object {
          "color": "#ffffff",
          "fontFamily": "SourceSansPro-Light",
          "fontSize": 24,
          "fontStyle": "normal",
          "fontWeight": "300",
          "lineHeight": 30,
          "marginHorizontal": 30,
          "marginVertical": 35,
          "textAlign": "center",
          "textAlignVertical": "center",
          "textTransform": "none",
        }
      }
    >
      Choose a step to take with Chyna this week...
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#ffffff"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#ffffff",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Relate
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomWidth": 9,
                  "borderLeftColor": "transparent",
                  "borderLeftWidth": 7,
                  "borderRightColor": "transparent",
                  "borderRightWidth": 7,
                  "borderStyle": "solid",
                  "height": 0,
                  "width": 0,
                },
                Object {
                  "borderBottomColor": "#ECEEF2",
                  "transform": Array [
                    Object {
                      "rotate": "0deg",
                    },
                  ],
                },
                Object {
                  "marginTop": 12,
                },
              ]
            }
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Pray
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Care
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Share
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListFooterComponent={<ForwardRef(SafeAreaView) />}
    ListHeaderComponent={
      <ErrorNotice
        message="Error loading step suggestions"
        refetch={[Function]}
      />
    }
    contentContainerStyle={
      Object {
        "marginTop": 12,
        "paddingBottom": 24,
      }
    }
    data={
      Array [
        Object {
          "action": [Function],
          "icon": true,
          "key": "custom",
          "text": "Create your own Relate Step",
        },
        Object {
          "action": [Function],
          "icon": false,
          "key": "5",
          "text": "ut libero qui",
        },
        Object {
          "action": [Function],
          "icon": false,
          "key": "6",
          "text": "recusandae ut nulla",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    scrollIndicatorInsets={
      Object {
        "right": 1,
      }
    }
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "borderRadius": 8,
              "elevation": 4,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginHorizontal": 20,
              "marginVertical": 6,
              "opacity": 1,
              "padding": 20,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Create your own Relate Step
          </Text>
          <SvgMock />
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "borderRadius": 8,
              "elevation": 4,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginHorizontal": 20,
              "marginVertical": 6,
              "opacity": 1,
              "padding": 20,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            ut libero qui
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "borderRadius": 8,
              "elevation": 4,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginHorizontal": 20,
              "marginVertical": 6,
              "opacity": 1,
              "padding": 20,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            recusandae ut nulla
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
      <View
        onLayout={[Function]}
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`should load step suggestions 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -196,11 +196,11 @@
            \\"textAlignVertical\\": \\"center\\",
            \\"textTransform\\": \\"none\\",
          }
        }
      >
-       Choose a step to take with them this week...
+       Choose a step to take with Chyna this week...
      </Text>
      <View
        style={
          Object {
            \\"flexDirection\\": \\"row\\",
@@ -268,10 +268,41 @@
                  ]
                }
              >
                Relate
              </Text>
+           </View>
+           <View
+             style={
+               Array [
+                 Object {
+                   \\"alignItems\\": \\"center\\",
+                   \\"borderRadius\\": 30,
+                   \\"flexDirection\\": \\"row\\",
+                   \\"marginTop\\": 20,
+                   \\"paddingHorizontal\\": 14,
+                   \\"paddingVertical\\": 3,
+                 },
+                 Object {
+                   \\"backgroundColor\\": \\"#ffffff\\",
+                 },
+               ]
+             }
+           >
+             <Text
+               style={
+                 Object {
+                   \\"color\\": \\"#007398\\",
+                   \\"marginRight\\": 4,
+                 }
+               }
+             >
+               0
+             </Text>
+             <SvgMock
+               color=\\"#007398\\"
+             />
            </View>
            <View
              style={
                Array [
                  Object {
@@ -362,12 +393,43 @@
                }
              >
                Pray
              </Text>
            </View>
+           <View
+             style={
+               Array [
+                 Object {
+                   \\"alignItems\\": \\"center\\",
+                   \\"borderRadius\\": 30,
+                   \\"flexDirection\\": \\"row\\",
+                   \\"marginTop\\": 20,
+                   \\"paddingHorizontal\\": 14,
+                   \\"paddingVertical\\": 3,
+                 },
+                 Object {
+                   \\"backgroundColor\\": \\"#3CC8E6\\",
+                 },
+               ]
+             }
+           >
+             <Text
+               style={
+                 Object {
+                   \\"color\\": \\"#007398\\",
+                   \\"marginRight\\": 4,
+                 }
+               }
+             >
+               0
+             </Text>
+             <SvgMock
+               color=\\"#007398\\"
+             />
            </View>
          </View>
+       </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function onClick]}
          onResponderGrant={[Function onResponderGrant]}
@@ -427,12 +489,43 @@
                }
              >
                Care
              </Text>
            </View>
+           <View
+             style={
+               Array [
+                 Object {
+                   \\"alignItems\\": \\"center\\",
+                   \\"borderRadius\\": 30,
+                   \\"flexDirection\\": \\"row\\",
+                   \\"marginTop\\": 20,
+                   \\"paddingHorizontal\\": 14,
+                   \\"paddingVertical\\": 3,
+                 },
+                 Object {
+                   \\"backgroundColor\\": \\"#3CC8E6\\",
+                 },
+               ]
+             }
+           >
+             <Text
+               style={
+                 Object {
+                   \\"color\\": \\"#007398\\",
+                   \\"marginRight\\": 4,
+                 }
+               }
+             >
+               41919
+             </Text>
+             <SvgMock
+               color=\\"#007398\\"
+             />
            </View>
          </View>
+       </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function onClick]}
          onResponderGrant={[Function onResponderGrant]}
@@ -492,20 +585,47 @@
                }
              >
                Share
              </Text>
            </View>
+           <View
+             style={
+               Array [
+                 Object {
+                   \\"alignItems\\": \\"center\\",
+                   \\"borderRadius\\": 30,
+                   \\"flexDirection\\": \\"row\\",
+                   \\"marginTop\\": 20,
+                   \\"paddingHorizontal\\": 14,
+                   \\"paddingVertical\\": 3,
+                 },
+                 Object {
+                   \\"backgroundColor\\": \\"#3CC8E6\\",
+                 },
+               ]
+             }
+           >
+             <Text
+               style={
+                 Object {
+                   \\"color\\": \\"#007398\\",
+                   \\"marginRight\\": 4,
+                 }
+               }
+             >
+               0
+             </Text>
+             <SvgMock
+               color=\\"#007398\\"
+             />
            </View>
          </View>
        </View>
      </View>
+   </View>
    <RCTScrollView
-     ListFooterComponent={
-       <ForwardRef(SafeAreaView)>
-         <FooterLoading />
-       </ForwardRef(SafeAreaView)>
-     }
+     ListFooterComponent={<ForwardRef(SafeAreaView) />}
      ListHeaderComponent={
        <ErrorNotice
          message=\\"Error loading step suggestions\\"
          refetch={[Function anonymous]}
        />
@@ -521,10 +641,22 @@
          Object {
            \\"action\\": [Function action],
            \\"icon\\": true,
            \\"key\\": \\"custom\\",
            \\"text\\": \\"Create your own Relate Step\\",
+         },
+         Object {
+           \\"action\\": [Function action],
+           \\"icon\\": false,
+           \\"key\\": \\"5\\",
+           \\"text\\": \\"ut libero qui\\",
+         },
+         Object {
+           \\"action\\": [Function action],
+           \\"icon\\": false,
+           \\"key\\": \\"6\\",
+           \\"text\\": \\"recusandae ut nulla\\",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function anonymous]}
@@ -542,11 +674,11 @@
      onScrollBeginDrag={[Function anonymous]}
      onScrollEndDrag={[Function anonymous]}
      refreshControl={
        <MyRefreshControl
          onRefresh={[Function anonymous]}
-         refreshing={true}
+         refreshing={false}
        />
      }
      removeClippedSubviews={false}
      renderItem={[Function anonymous]}
      scrollEventThrottle={50}
@@ -624,36 +756,130 @@
            </Text>
            <SvgMock />
          </View>
        </View>
        <View
-         onLayout={[Function anonymous]}
-       >
-         <RCTSafeAreaView
-           emulateUnlessSupported={true}
+         onLayout={[Function onLayout]}
+         style={null}
        >
          <View
+           accessible={true}
+           focusable={true}
+           onClick={[Function onClick]}
+           onResponderGrant={[Function onResponderGrant]}
+           onResponderMove={[Function onResponderMove]}
+           onResponderRelease={[Function onResponderRelease]}
+           onResponderTerminate={[Function onResponderTerminate]}
+           onResponderTerminationRequest={[Function onResponderTerminationRequest]}
+           onStartShouldSetResponder={[Function onStartShouldSetResponder]}
            style={
-               Array [
              Object {
-                   \\"padding\\": 10,
+               \\"alignItems\\": \\"center\\",
+               \\"backgroundColor\\": \\"#ffffff\\",
+               \\"borderRadius\\": 8,
+               \\"elevation\\": 4,
+               \\"flexDirection\\": \\"row\\",
+               \\"justifyContent\\": \\"space-between\\",
+               \\"marginHorizontal\\": 20,
+               \\"marginVertical\\": 6,
+               \\"opacity\\": 1,
+               \\"padding\\": 20,
+               \\"shadowColor\\": \\"#000000\\",
+               \\"shadowOffset\\": Object {
+                 \\"height\\": 2,
+                 \\"width\\": 0,
                },
+               \\"shadowOpacity\\": 0.3,
+               \\"shadowRadius\\": 2,
+             }
+           }
+         >
+           <Text
+             style={
+               Object {
+                 \\"color\\": \\"#505256\\",
+                 \\"fontFamily\\": \\"SourceSansPro-Regular\\",
+                 \\"fontSize\\": 16,
+                 \\"fontStyle\\": \\"normal\\",
+                 \\"fontWeight\\": \\"normal\\",
+                 \\"lineHeight\\": 24,
+                 \\"textAlignVertical\\": \\"center\\",
+                 \\"textTransform\\": \\"none\\",
+               }
+             }
+           >
+             ut libero qui
+           </Text>
+         </View>
+       </View>
+       <View
+         onLayout={[Function onLayout]}
+         style={null}
+       >
+         <View
+           accessible={true}
+           focusable={true}
+           onClick={[Function onClick]}
+           onResponderGrant={[Function onResponderGrant]}
+           onResponderMove={[Function onResponderMove]}
+           onResponderRelease={[Function onResponderRelease]}
+           onResponderTerminate={[Function onResponderTerminate]}
+           onResponderTerminationRequest={[Function onResponderTerminationRequest]}
+           onStartShouldSetResponder={[Function onStartShouldSetResponder]}
+           style={
              Object {
                \\"alignItems\\": \\"center\\",
-                   \\"justifyContent\\": \\"center\\",
+               \\"backgroundColor\\": \\"#ffffff\\",
+               \\"borderRadius\\": 8,
+               \\"elevation\\": 4,
+               \\"flexDirection\\": \\"row\\",
+               \\"justifyContent\\": \\"space-between\\",
+               \\"marginHorizontal\\": 20,
+               \\"marginVertical\\": 6,
+               \\"opacity\\": 1,
+               \\"padding\\": 20,
+               \\"shadowColor\\": \\"#000000\\",
+               \\"shadowOffset\\": Object {
+                 \\"height\\": 2,
+                 \\"width\\": 0,
                },
-               ]
+               \\"shadowOpacity\\": 0.3,
+               \\"shadowRadius\\": 2,
+             }
            }
          >
-             <ActivityIndicator
-               animating={true}
-               color=\\"rgba(0, 0, 0, 1)\\"
-               hidesWhenStopped={true}
-               size=\\"small\\"
-             />
+           <Text
+             style={
+               Object {
+                 \\"color\\": \\"#505256\\",
+                 \\"fontFamily\\": \\"SourceSansPro-Regular\\",
+                 \\"fontSize\\": 16,
+                 \\"fontStyle\\": \\"normal\\",
+                 \\"fontWeight\\": \\"normal\\",
+                 \\"lineHeight\\": 24,
+                 \\"textAlignVertical\\": \\"center\\",
+                 \\"textTransform\\": \\"none\\",
+               }
+             }
+           >
+             recusandae ut nulla
+           </Text>
          </View>
-         </RCTSafeAreaView>
+       </View>
+       <View
+         style={
+           Object {
+             \\"height\\": 0,
+           }
+         }
+       />
+       <View
+         onLayout={[Function anonymous]}
+       >
+         <RCTSafeAreaView
+           emulateUnlessSupported={true}
+         />
        </View>
      </View>
    </RCTScrollView>
    <SelectStepExplainerModal
      onClose={[Function onClose]}"
`;

exports[`should paginate 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -196,11 +196,11 @@
            \\"textAlignVertical\\": \\"center\\",
            \\"textTransform\\": \\"none\\",
          }
        }
      >
-       Choose a step to take with Chyna this week...
+       Choose a step to take with Connor this week...
      </Text>
      <View
        style={
          Object {
            \\"flexDirection\\": \\"row\\",
@@ -654,10 +654,22 @@
            \\"action\\": [Function action],
            \\"icon\\": false,
            \\"key\\": \\"6\\",
            \\"text\\": \\"recusandae ut nulla\\",
          },
+         Object {
+           \\"action\\": [Function action],
+           \\"icon\\": false,
+           \\"key\\": \\"8\\",
+           \\"text\\": \\"debitis incidunt accusantium\\",
+         },
+         Object {
+           \\"action\\": [Function action],
+           \\"icon\\": false,
+           \\"key\\": \\"9\\",
+           \\"text\\": \\"sed libero repudiandae\\",
+         },
        ]
      }
      disableVirtualization={false}
      getItem={[Function anonymous]}
      getItemCount={[Function anonymous]}
@@ -860,10 +872,118 @@
                  \\"textTransform\\": \\"none\\",
                }
              }
            >
              recusandae ut nulla
+           </Text>
+         </View>
+       </View>
+       <View
+         onLayout={[Function onLayout]}
+         style={null}
+       >
+         <View
+           accessible={true}
+           focusable={true}
+           onClick={[Function onClick]}
+           onResponderGrant={[Function onResponderGrant]}
+           onResponderMove={[Function onResponderMove]}
+           onResponderRelease={[Function onResponderRelease]}
+           onResponderTerminate={[Function onResponderTerminate]}
+           onResponderTerminationRequest={[Function onResponderTerminationRequest]}
+           onStartShouldSetResponder={[Function onStartShouldSetResponder]}
+           style={
+             Object {
+               \\"alignItems\\": \\"center\\",
+               \\"backgroundColor\\": \\"#ffffff\\",
+               \\"borderRadius\\": 8,
+               \\"elevation\\": 4,
+               \\"flexDirection\\": \\"row\\",
+               \\"justifyContent\\": \\"space-between\\",
+               \\"marginHorizontal\\": 20,
+               \\"marginVertical\\": 6,
+               \\"opacity\\": 1,
+               \\"padding\\": 20,
+               \\"shadowColor\\": \\"#000000\\",
+               \\"shadowOffset\\": Object {
+                 \\"height\\": 2,
+                 \\"width\\": 0,
+               },
+               \\"shadowOpacity\\": 0.3,
+               \\"shadowRadius\\": 2,
+             }
+           }
+         >
+           <Text
+             style={
+               Object {
+                 \\"color\\": \\"#505256\\",
+                 \\"fontFamily\\": \\"SourceSansPro-Regular\\",
+                 \\"fontSize\\": 16,
+                 \\"fontStyle\\": \\"normal\\",
+                 \\"fontWeight\\": \\"normal\\",
+                 \\"lineHeight\\": 24,
+                 \\"textAlignVertical\\": \\"center\\",
+                 \\"textTransform\\": \\"none\\",
+               }
+             }
+           >
+             debitis incidunt accusantium
+           </Text>
+         </View>
+       </View>
+       <View
+         onLayout={[Function onLayout]}
+         style={null}
+       >
+         <View
+           accessible={true}
+           focusable={true}
+           onClick={[Function onClick]}
+           onResponderGrant={[Function onResponderGrant]}
+           onResponderMove={[Function onResponderMove]}
+           onResponderRelease={[Function onResponderRelease]}
+           onResponderTerminate={[Function onResponderTerminate]}
+           onResponderTerminationRequest={[Function onResponderTerminationRequest]}
+           onStartShouldSetResponder={[Function onStartShouldSetResponder]}
+           style={
+             Object {
+               \\"alignItems\\": \\"center\\",
+               \\"backgroundColor\\": \\"#ffffff\\",
+               \\"borderRadius\\": 8,
+               \\"elevation\\": 4,
+               \\"flexDirection\\": \\"row\\",
+               \\"justifyContent\\": \\"space-between\\",
+               \\"marginHorizontal\\": 20,
+               \\"marginVertical\\": 6,
+               \\"opacity\\": 1,
+               \\"padding\\": 20,
+               \\"shadowColor\\": \\"#000000\\",
+               \\"shadowOffset\\": Object {
+                 \\"height\\": 2,
+                 \\"width\\": 0,
+               },
+               \\"shadowOpacity\\": 0.3,
+               \\"shadowRadius\\": 2,
+             }
+           }
+         >
+           <Text
+             style={
+               Object {
+                 \\"color\\": \\"#505256\\",
+                 \\"fontFamily\\": \\"SourceSansPro-Regular\\",
+                 \\"fontSize\\": 16,
+                 \\"fontStyle\\": \\"normal\\",
+                 \\"fontWeight\\": \\"normal\\",
+                 \\"lineHeight\\": 24,
+                 \\"textAlignVertical\\": \\"center\\",
+                 \\"textTransform\\": \\"none\\",
+               }
+             }
+           >
+             sed libero repudiandae
            </Text>
          </View>
        </View>
        <View
          style={"
`;

exports[`with explainer open opens explainer modal 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -879,6 +879,9 @@
            emulateUnlessSupported={true}
          />
        </View>
      </View>
    </RCTScrollView>
+   <SelectStepExplainerModal
+     onClose={[Function onClose]}
+   />
  </View>"
`;
