// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`in onboarding renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "fontSize": 18,
                      },
                      Array [
                        Object {
                          "margin": 10,
                        },
                        Object {},
                      ],
                    ],
                    Object {
                      "fontFamily": "icomoon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="skipButton"
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  null,
                  Array [
                    Object {
                      "padding": 15,
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "color": "#ffffff",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 1.5,
                        "textAlign": "center",
                      },
                      Array [
                        Object {
                          "color": "#ffffff",
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
              >
                SKIP
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="SelectStepExplainerIconButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "borderWidth": 0,
                    "height": 60,
                    "justifyContent": "center",
                    "margin": 0,
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <SvgMock
                color="#ffffff"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      ListFooterComponent={<FooterLoading />}
      ListHeaderComponent={
        <ErrorNotice
          message="Error loading step suggestions"
          refetch={[Function]}
        />
      }
      bounces={false}
      contentContainerStyle={
        Array [
          undefined,
          Object {
            "paddingTop": 203,
          },
        ]
      }
      data={
        Array [
          Object {
            "action": [Function],
            "icon": true,
            "key": "custom",
            "text": "Create your own Relate Step",
          },
        ]
      }
      disableHeaderMomentum={false}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      headerMomentumDuration={350}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.2}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      overScrollMode="never"
      refreshControl={
        <MyRefreshControl
          onRefresh={[Function]}
          refreshing={true}
        />
      }
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={1}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "paddingVertical": 12,
        }
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        />
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 8,
                "elevation": 4,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginHorizontal": 20,
                "marginVertical": 6,
                "opacity": 1,
                "padding": 20,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 2,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 16,
                    "lineHeight": 22,
                  },
                ]
              }
            >
              Create your own Relate Step
            </Text>
            <SvgMock />
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Array [
                Object {
                  "padding": 10,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="rgba(0, 0, 0, 1)"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "backgroundColor": "#ECEEF2",
          "height": 203,
          "left": 0,
          "paddingTop": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#007398",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "marginHorizontal": 30,
              "marginVertical": 35,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "fontWeight": "300",
                  "letterSpacing": 2,
                  "lineHeight": 30,
                  "textAlign": "center",
                },
              ]
            }
          >
            Choose a step to take with 
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "fontWeight": "300",
                  "letterSpacing": 2,
                  "lineHeight": 30,
                  "textAlign": "center",
                },
              ]
            }
          >
             this week...
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#ffffff"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Relate
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "marginTop": 20,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderBottomWidth": 9,
                        "borderLeftColor": "transparent",
                        "borderLeftWidth": 7,
                        "borderRightColor": "transparent",
                        "borderRightWidth": 7,
                        "borderStyle": "solid",
                        "height": 0,
                        "width": 0,
                      },
                      Object {
                        "borderBottomColor": "#ECEEF2",
                        "transform": Array [
                          Object {
                            "rotate": "0deg",
                          },
                        ],
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Pray
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Care
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Share
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`loading should hide tabs when locale is not en 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -285,11 +285,11 @@
        bounces={false}
        contentContainerStyle={
          Array [
            undefined,
            Object {
-             \\"paddingTop\\": 203,
+             \\"paddingTop\\": 130,
            },
          ]
        }
        data={
          Array [
@@ -431,11 +431,11 @@
      </RCTScrollView>
      <View
        style={
          Object {
            \\"backgroundColor\\": \\"#ECEEF2\\",
-           \\"height\\": 203,
+           \\"height\\": 130,
            \\"left\\": 0,
            \\"paddingTop\\": 0,
            \\"position\\": \\"absolute\\",
            \\"right\\": 0,
            \\"top\\": 0,
@@ -505,293 +505,10 @@
                ]
              }
            >
               this week...
            </Text>
-         </View>
-         <View
-           style={
-             Object {
-               \\"flexDirection\\": \\"row\\",
-               \\"justifyContent\\": \\"space-around\\",
-             }
-           }
-         >
-           <View
-             accessible={true}
-             focusable={true}
-             isTVSelectable={true}
-             onClick={[Function bound touchableHandlePress]}
-             onResponderGrant={[Function bound touchableHandleResponderGrant]}
-             onResponderMove={[Function bound touchableHandleResponderMove]}
-             onResponderRelease={[Function bound touchableHandleResponderRelease]}
-             onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
-             onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
-             onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
-             style={
-               Object {
-                 \\"opacity\\": 1,
-               }
-             }
-           >
-             <View>
-               <View
-                 style={
-                   Array [
-                     Object {
-                       \\"alignItems\\": \\"center\\",
-                       \\"flexDirection\\": \\"column\\",
-                     },
-                     undefined,
-                   ]
-                 }
-               >
-                 <SvgMock
-                   color=\\"#ffffff\\"
-                   height={24}
-                 />
-                 <Text
-                   style={
-                     Array [
-                       Object {
-                         \\"color\\": \\"#505256\\",
-                       },
-                       Object {
-                         \\"fontFamily\\": \\"SourceSansPro-Regular\\",
-                       },
-                       Array [
-                         Object {
-                           \\"color\\": \\"#ffffff\\",
-                           \\"fontSize\\": 16,
-                           \\"fontWeight\\": \\"bold\\",
-                           \\"letterSpacing\\": 1,
-                           \\"paddingLeft\\": 4,
-                         },
-                         undefined,
-                       ],
-                     ]
-                   }
-                 >
-                   Relate
-                 </Text>
-               </View>
-               <View
-                 style={
-                   Object {
-                     \\"alignItems\\": \\"center\\",
-                     \\"marginTop\\": 20,
-                   }
-                 }
-               >
-                 <View
-                   style={
-                     Array [
-                       Object {
-                         \\"backgroundColor\\": \\"transparent\\",
-                         \\"borderBottomWidth\\": 9,
-                         \\"borderLeftColor\\": \\"transparent\\",
-                         \\"borderLeftWidth\\": 7,
-                         \\"borderRightColor\\": \\"transparent\\",
-                         \\"borderRightWidth\\": 7,
-                         \\"borderStyle\\": \\"solid\\",
-                         \\"height\\": 0,
-                         \\"width\\": 0,
-                       },
-                       Object {
-                         \\"borderBottomColor\\": \\"#ECEEF2\\",
-                         \\"transform\\": Array [
-                           Object {
-                             \\"rotate\\": \\"0deg\\",
-                           },
-                         ],
-                       },
-                     ]
-                   }
-                 />
-               </View>
-             </View>
-           </View>
-           <View
-             accessible={true}
-             focusable={true}
-             isTVSelectable={true}
-             onClick={[Function bound touchableHandlePress]}
-             onResponderGrant={[Function bound touchableHandleResponderGrant]}
-             onResponderMove={[Function bound touchableHandleResponderMove]}
-             onResponderRelease={[Function bound touchableHandleResponderRelease]}
-             onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
-             onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
-             onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
-             style={
-               Object {
-                 \\"opacity\\": 1,
-               }
-             }
-           >
-             <View>
-               <View
-                 style={
-                   Array [
-                     Object {
-                       \\"alignItems\\": \\"center\\",
-                       \\"flexDirection\\": \\"column\\",
-                     },
-                     undefined,
-                   ]
-                 }
-               >
-                 <SvgMock
-                   color=\\"#52C5DC\\"
-                   height={24}
-                 />
-                 <Text
-                   style={
-                     Array [
-                       Object {
-                         \\"color\\": \\"#505256\\",
-                       },
-                       Object {
-                         \\"fontFamily\\": \\"SourceSansPro-Regular\\",
-                       },
-                       Array [
-                         Object {
-                           \\"color\\": \\"#52C5DC\\",
-                           \\"fontSize\\": 16,
-                           \\"fontWeight\\": \\"bold\\",
-                           \\"letterSpacing\\": 1,
-                           \\"paddingLeft\\": 4,
-                         },
-                         undefined,
-                       ],
-                     ]
-                   }
-                 >
-                   Pray
-                 </Text>
-               </View>
-             </View>
-           </View>
-           <View
-             accessible={true}
-             focusable={true}
-             isTVSelectable={true}
-             onClick={[Function bound touchableHandlePress]}
-             onResponderGrant={[Function bound touchableHandleResponderGrant]}
-             onResponderMove={[Function bound touchableHandleResponderMove]}
-             onResponderRelease={[Function bound touchableHandleResponderRelease]}
-             onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
-             onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
-             onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
-             style={
-               Object {
-                 \\"opacity\\": 1,
-               }
-             }
-           >
-             <View>
-               <View
-                 style={
-                   Array [
-                     Object {
-                       \\"alignItems\\": \\"center\\",
-                       \\"flexDirection\\": \\"column\\",
-                     },
-                     undefined,
-                   ]
-                 }
-               >
-                 <SvgMock
-                   color=\\"#52C5DC\\"
-                   height={24}
-                 />
-                 <Text
-                   style={
-                     Array [
-                       Object {
-                         \\"color\\": \\"#505256\\",
-                       },
-                       Object {
-                         \\"fontFamily\\": \\"SourceSansPro-Regular\\",
-                       },
-                       Array [
-                         Object {
-                           \\"color\\": \\"#52C5DC\\",
-                           \\"fontSize\\": 16,
-                           \\"fontWeight\\": \\"bold\\",
-                           \\"letterSpacing\\": 1,
-                           \\"paddingLeft\\": 4,
-                         },
-                         undefined,
-                       ],
-                     ]
-                   }
-                 >
-                   Care
-                 </Text>
-               </View>
-             </View>
-           </View>
-           <View
-             accessible={true}
-             focusable={true}
-             isTVSelectable={true}
-             onClick={[Function bound touchableHandlePress]}
-             onResponderGrant={[Function bound touchableHandleResponderGrant]}
-             onResponderMove={[Function bound touchableHandleResponderMove]}
-             onResponderRelease={[Function bound touchableHandleResponderRelease]}
-             onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
-             onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
-             onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
-             style={
-               Object {
-                 \\"opacity\\": 1,
-               }
-             }
-           >
-             <View>
-               <View
-                 style={
-                   Array [
-                     Object {
-                       \\"alignItems\\": \\"center\\",
-                       \\"flexDirection\\": \\"column\\",
-                     },
-                     undefined,
-                   ]
-                 }
-               >
-                 <SvgMock
-                   color=\\"#52C5DC\\"
-                   height={24}
-                 />
-                 <Text
-                   style={
-                     Array [
-                       Object {
-                         \\"color\\": \\"#505256\\",
-                       },
-                       Object {
-                         \\"fontFamily\\": \\"SourceSansPro-Regular\\",
-                       },
-                       Array [
-                         Object {
-                           \\"color\\": \\"#52C5DC\\",
-                           \\"fontSize\\": 16,
-                           \\"fontWeight\\": \\"bold\\",
-                           \\"letterSpacing\\": 1,
-                           \\"paddingLeft\\": 4,
-                         },
-                         undefined,
-                       ],
-                     ]
-                   }
-                 >
-                   Share
-                 </Text>
-               </View>
-             </View>
-           </View>
          </View>
        </View>
      </View>
    </View>
  </View>"
`;

exports[`loading should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "fontSize": 18,
                      },
                      Array [
                        Object {
                          "margin": 10,
                        },
                        Object {},
                      ],
                    ],
                    Object {
                      "fontFamily": "icomoon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="SelectStepExplainerIconButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "borderWidth": 0,
                    "height": 60,
                    "justifyContent": "center",
                    "margin": 0,
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <SvgMock
                color="#ffffff"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      ListFooterComponent={<FooterLoading />}
      ListHeaderComponent={
        <ErrorNotice
          message="Error loading step suggestions"
          refetch={[Function]}
        />
      }
      bounces={false}
      contentContainerStyle={
        Array [
          undefined,
          Object {
            "paddingTop": 203,
          },
        ]
      }
      data={
        Array [
          Object {
            "action": [Function],
            "icon": true,
            "key": "custom",
            "text": "Create your own Relate Step",
          },
        ]
      }
      disableHeaderMomentum={false}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      headerMomentumDuration={350}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.2}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      overScrollMode="never"
      refreshControl={
        <MyRefreshControl
          onRefresh={[Function]}
          refreshing={true}
        />
      }
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={1}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "paddingVertical": 12,
        }
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        />
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 8,
                "elevation": 4,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginHorizontal": 20,
                "marginVertical": 6,
                "opacity": 1,
                "padding": 20,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 2,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 16,
                    "lineHeight": 22,
                  },
                ]
              }
            >
              Create your own Relate Step
            </Text>
            <SvgMock />
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Array [
                Object {
                  "padding": 10,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="rgba(0, 0, 0, 1)"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "backgroundColor": "#ECEEF2",
          "height": 203,
          "left": 0,
          "paddingTop": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#007398",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "marginHorizontal": 30,
              "marginVertical": 35,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "fontWeight": "300",
                  "letterSpacing": 2,
                  "lineHeight": 30,
                  "textAlign": "center",
                },
              ]
            }
          >
            Choose a step to take with 
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "fontWeight": "300",
                  "letterSpacing": 2,
                  "lineHeight": 30,
                  "textAlign": "center",
                },
              ]
            }
          >
             this week...
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#ffffff"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Relate
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "marginTop": 20,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderBottomWidth": 9,
                        "borderLeftColor": "transparent",
                        "borderLeftWidth": 7,
                        "borderRightColor": "transparent",
                        "borderRightWidth": 7,
                        "borderStyle": "solid",
                        "height": 0,
                        "width": 0,
                      },
                      Object {
                        "borderBottomColor": "#ECEEF2",
                        "transform": Array [
                          Object {
                            "rotate": "0deg",
                          },
                        ],
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Pray
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Care
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Share
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`loading should render for self steps correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "fontSize": 18,
                      },
                      Array [
                        Object {
                          "margin": 10,
                        },
                        Object {},
                      ],
                    ],
                    Object {
                      "fontFamily": "icomoon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="SelectStepExplainerIconButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "borderWidth": 0,
                    "height": 60,
                    "justifyContent": "center",
                    "margin": 0,
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <SvgMock
                color="#ffffff"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      ListFooterComponent={<FooterLoading />}
      ListHeaderComponent={
        <ErrorNotice
          message="Error loading step suggestions"
          refetch={[Function]}
        />
      }
      bounces={false}
      contentContainerStyle={
        Array [
          undefined,
          Object {
            "paddingTop": 130,
          },
        ]
      }
      data={
        Array [
          Object {
            "action": [Function],
            "icon": true,
            "key": "custom",
            "text": "Create your own  Step",
          },
        ]
      }
      disableHeaderMomentum={false}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      headerMomentumDuration={350}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.2}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      overScrollMode="never"
      refreshControl={
        <MyRefreshControl
          onRefresh={[Function]}
          refreshing={true}
        />
      }
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={1}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "paddingVertical": 12,
        }
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        />
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 8,
                "elevation": 4,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginHorizontal": 20,
                "marginVertical": 6,
                "opacity": 1,
                "padding": 20,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 2,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 16,
                    "lineHeight": 22,
                  },
                ]
              }
            >
              Create your own  Step
            </Text>
            <SvgMock />
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Array [
                Object {
                  "padding": 10,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="rgba(0, 0, 0, 1)"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "backgroundColor": "#ECEEF2",
          "height": 130,
          "left": 0,
          "paddingTop": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#007398",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "marginHorizontal": 30,
              "marginVertical": 35,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "fontWeight": "300",
                  "letterSpacing": 2,
                  "lineHeight": 30,
                  "textAlign": "center",
                },
              ]
            }
          >
            Choose a step of faith to take
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "fontWeight": "300",
                  "letterSpacing": 2,
                  "lineHeight": 30,
                  "textAlign": "center",
                },
              ]
            }
          >
            on your journey this week...
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`loading skip button should render skip button correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "fontSize": 18,
                      },
                      Array [
                        Object {
                          "margin": 10,
                        },
                        Object {},
                      ],
                    ],
                    Object {
                      "fontFamily": "icomoon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="skipButton"
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  null,
                  Array [
                    Object {
                      "padding": 15,
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "color": "#ffffff",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 1.5,
                        "textAlign": "center",
                      },
                      Array [
                        Object {
                          "color": "#ffffff",
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
              >
                SKIP
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="SelectStepExplainerIconButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "borderWidth": 0,
                    "height": 60,
                    "justifyContent": "center",
                    "margin": 0,
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <SvgMock
                color="#ffffff"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      ListFooterComponent={<FooterLoading />}
      ListHeaderComponent={
        <ErrorNotice
          message="Error loading step suggestions"
          refetch={[Function]}
        />
      }
      bounces={false}
      contentContainerStyle={
        Array [
          undefined,
          Object {
            "paddingTop": 203,
          },
        ]
      }
      data={
        Array [
          Object {
            "action": [Function],
            "icon": true,
            "key": "custom",
            "text": "Create your own Relate Step",
          },
        ]
      }
      disableHeaderMomentum={false}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      headerMomentumDuration={350}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.2}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      overScrollMode="never"
      refreshControl={
        <MyRefreshControl
          onRefresh={[Function]}
          refreshing={true}
        />
      }
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={1}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "paddingVertical": 12,
        }
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        />
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 8,
                "elevation": 4,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginHorizontal": 20,
                "marginVertical": 6,
                "opacity": 1,
                "padding": 20,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 2,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 16,
                    "lineHeight": 22,
                  },
                ]
              }
            >
              Create your own Relate Step
            </Text>
            <SvgMock />
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Array [
                Object {
                  "padding": 10,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="rgba(0, 0, 0, 1)"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "backgroundColor": "#ECEEF2",
          "height": 203,
          "left": 0,
          "paddingTop": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#007398",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "marginHorizontal": 30,
              "marginVertical": 35,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "fontWeight": "300",
                  "letterSpacing": 2,
                  "lineHeight": 30,
                  "textAlign": "center",
                },
              ]
            }
          >
            Choose a step to take with 
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "fontWeight": "300",
                  "letterSpacing": 2,
                  "lineHeight": 30,
                  "textAlign": "center",
                },
              ]
            }
          >
             this week...
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#ffffff"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Relate
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "marginTop": 20,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderBottomWidth": 9,
                        "borderLeftColor": "transparent",
                        "borderLeftWidth": 7,
                        "borderRightColor": "transparent",
                        "borderRightWidth": 7,
                        "borderStyle": "solid",
                        "height": 0,
                        "width": 0,
                      },
                      Object {
                        "borderBottomColor": "#ECEEF2",
                        "transform": Array [
                          Object {
                            "rotate": "0deg",
                          },
                        ],
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Pray
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Care
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Share
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`should load step suggestions 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -206,11 +206,11 @@
          \\"overflow\\": \\"hidden\\",
        }
      }
    >
      <RCTScrollView
-       ListFooterComponent={<FooterLoading />}
+       ListFooterComponent={null}
        ListHeaderComponent={
          <ErrorNotice
            message=\\"Error loading step suggestions\\"
            refetch={[Function anonymous]}
          />
@@ -229,10 +229,22 @@
            Object {
              \\"action\\": [Function action],
              \\"icon\\": true,
              \\"key\\": \\"custom\\",
              \\"text\\": \\"Create your own Relate Step\\",
+           },
+           Object {
+             \\"action\\": [Function action],
+             \\"icon\\": false,
+             \\"key\\": \\"3\\",
+             \\"text\\": \\"sunt qui amet\\",
+           },
+           Object {
+             \\"action\\": [Function action],
+             \\"icon\\": false,
+             \\"key\\": \\"4\\",
+             \\"text\\": \\"iure ut libero\\",
            },
          ]
        }
        disableHeaderMomentum={false}
        disableVirtualization={false}
@@ -255,11 +267,11 @@
        onScrollEndDrag={[Function anonymous]}
        overScrollMode=\\"never\\"
        refreshControl={
          <MyRefreshControl
            onRefresh={[Function anonymous]}
-           refreshing={true}
+           refreshing={false}
          />
        }
        removeClippedSubviews={false}
        renderItem={[Function anonymous]}
        scrollEventThrottle={1}
@@ -335,33 +347,130 @@
              </Text>
              <SvgMock />
            </View>
          </View>
          <View
-           onLayout={[Function anonymous]}
+           onLayout={[Function onLayout]}
+           style={null}
          >
            <View
+             accessible={true}
+             focusable={true}
+             isTVSelectable={true}
+             onClick={[Function bound touchableHandlePress]}
+             onResponderGrant={[Function bound touchableHandleResponderGrant]}
+             onResponderMove={[Function bound touchableHandleResponderMove]}
+             onResponderRelease={[Function bound touchableHandleResponderRelease]}
+             onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
+             onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
+             onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
+             style={
+               Object {
+                 \\"alignItems\\": \\"center\\",
+                 \\"backgroundColor\\": \\"#ffffff\\",
+                 \\"borderRadius\\": 8,
+                 \\"elevation\\": 4,
+                 \\"flexDirection\\": \\"row\\",
+                 \\"justifyContent\\": \\"space-between\\",
+                 \\"marginHorizontal\\": 20,
+                 \\"marginVertical\\": 6,
+                 \\"opacity\\": 1,
+                 \\"padding\\": 20,
+                 \\"shadowColor\\": \\"#000000\\",
+                 \\"shadowOffset\\": Object {
+                   \\"height\\": 2,
+                   \\"width\\": 0,
+                 },
+                 \\"shadowOpacity\\": 0.3,
+                 \\"shadowRadius\\": 2,
+               }
+             }
+           >
+             <Text
                style={
                  Array [
                    Object {
-                   \\"padding\\": 10,
+                     \\"color\\": \\"#505256\\",
+                   },
+                   Object {
+                     \\"fontFamily\\": \\"SourceSansPro-Regular\\",
                    },
                    Object {
+                     \\"fontSize\\": 16,
+                     \\"lineHeight\\": 22,
+                   },
+                 ]
+               }
+             >
+               sunt qui amet
+             </Text>
+           </View>
+         </View>
+         <View
+           onLayout={[Function onLayout]}
+           style={null}
+         >
+           <View
+             accessible={true}
+             focusable={true}
+             isTVSelectable={true}
+             onClick={[Function bound touchableHandlePress]}
+             onResponderGrant={[Function bound touchableHandleResponderGrant]}
+             onResponderMove={[Function bound touchableHandleResponderMove]}
+             onResponderRelease={[Function bound touchableHandleResponderRelease]}
+             onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
+             onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
+             onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
+             style={
+               Object {
                  \\"alignItems\\": \\"center\\",
-                   \\"justifyContent\\": \\"center\\",
+                 \\"backgroundColor\\": \\"#ffffff\\",
+                 \\"borderRadius\\": 8,
+                 \\"elevation\\": 4,
+                 \\"flexDirection\\": \\"row\\",
+                 \\"justifyContent\\": \\"space-between\\",
+                 \\"marginHorizontal\\": 20,
+                 \\"marginVertical\\": 6,
+                 \\"opacity\\": 1,
+                 \\"padding\\": 20,
+                 \\"shadowColor\\": \\"#000000\\",
+                 \\"shadowOffset\\": Object {
+                   \\"height\\": 2,
+                   \\"width\\": 0,
+                 },
+                 \\"shadowOpacity\\": 0.3,
+                 \\"shadowRadius\\": 2,
+               }
+             }
+           >
+             <Text
+               style={
+                 Array [
+                   Object {
+                     \\"color\\": \\"#505256\\",
+                   },
+                   Object {
+                     \\"fontFamily\\": \\"SourceSansPro-Regular\\",
                    },
+                   Object {
+                     \\"fontSize\\": 16,
+                     \\"lineHeight\\": 22,
+                   },
                  ]
                }
              >
-             <ActivityIndicator
-               animating={true}
-               color=\\"rgba(0, 0, 0, 1)\\"
-               hidesWhenStopped={true}
-               size=\\"small\\"
-             />
+               iure ut libero
+             </Text>
            </View>
          </View>
+         <View
+           style={
+             Object {
+               \\"height\\": 0,
+             }
+           }
+         />
        </View>
      </RCTScrollView>
      <View
        style={
          Object {
@@ -436,11 +545,11 @@
                    \\"textAlign\\": \\"center\\",
                  },
                ]
              }
            >
-              this week...
+             Caesar this week...
            </Text>
          </View>
          <View
            style={
              Object {"
`;

exports[`should paginate 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -242,10 +242,22 @@
              \\"action\\": [Function action],
              \\"icon\\": false,
              \\"key\\": \\"4\\",
              \\"text\\": \\"iure ut libero\\",
            },
+           Object {
+             \\"action\\": [Function action],
+             \\"icon\\": false,
+             \\"key\\": \\"5\\",
+             \\"text\\": \\"ut nulla quam\\",
+           },
+           Object {
+             \\"action\\": [Function action],
+             \\"icon\\": false,
+             \\"key\\": \\"6\\",
+             \\"text\\": \\"ipsam nobis cupiditate\\",
+           },
          ]
        }
        disableHeaderMomentum={false}
        disableVirtualization={false}
        getItem={[Function anonymous]}
@@ -457,16 +469,130 @@
                    },
                  ]
                }
              >
                iure ut libero
+             </Text>
+           </View>
+         </View>
+         <View
+           onLayout={[Function onLayout]}
+           style={null}
+         >
+           <View
+             accessible={true}
+             focusable={true}
+             isTVSelectable={true}
+             onClick={[Function bound touchableHandlePress]}
+             onResponderGrant={[Function bound touchableHandleResponderGrant]}
+             onResponderMove={[Function bound touchableHandleResponderMove]}
+             onResponderRelease={[Function bound touchableHandleResponderRelease]}
+             onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
+             onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
+             onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
+             style={
+               Object {
+                 \\"alignItems\\": \\"center\\",
+                 \\"backgroundColor\\": \\"#ffffff\\",
+                 \\"borderRadius\\": 8,
+                 \\"elevation\\": 4,
+                 \\"flexDirection\\": \\"row\\",
+                 \\"justifyContent\\": \\"space-between\\",
+                 \\"marginHorizontal\\": 20,
+                 \\"marginVertical\\": 6,
+                 \\"opacity\\": 1,
+                 \\"padding\\": 20,
+                 \\"shadowColor\\": \\"#000000\\",
+                 \\"shadowOffset\\": Object {
+                   \\"height\\": 2,
+                   \\"width\\": 0,
+                 },
+                 \\"shadowOpacity\\": 0.3,
+                 \\"shadowRadius\\": 2,
+               }
+             }
+           >
+             <Text
+               style={
+                 Array [
+                   Object {
+                     \\"color\\": \\"#505256\\",
+                   },
+                   Object {
+                     \\"fontFamily\\": \\"SourceSansPro-Regular\\",
+                   },
+                   Object {
+                     \\"fontSize\\": 16,
+                     \\"lineHeight\\": 22,
+                   },
+                 ]
+               }
+             >
+               ut nulla quam
              </Text>
            </View>
          </View>
          <View
+           onLayout={[Function onLayout]}
+           style={null}
+         >
+           <View
+             accessible={true}
+             focusable={true}
+             isTVSelectable={true}
+             onClick={[Function bound touchableHandlePress]}
+             onResponderGrant={[Function bound touchableHandleResponderGrant]}
+             onResponderMove={[Function bound touchableHandleResponderMove]}
+             onResponderRelease={[Function bound touchableHandleResponderRelease]}
+             onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
+             onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
+             onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
              style={
                Object {
+                 \\"alignItems\\": \\"center\\",
+                 \\"backgroundColor\\": \\"#ffffff\\",
+                 \\"borderRadius\\": 8,
+                 \\"elevation\\": 4,
+                 \\"flexDirection\\": \\"row\\",
+                 \\"justifyContent\\": \\"space-between\\",
+                 \\"marginHorizontal\\": 20,
+                 \\"marginVertical\\": 6,
+                 \\"opacity\\": 1,
+                 \\"padding\\": 20,
+                 \\"shadowColor\\": \\"#000000\\",
+                 \\"shadowOffset\\": Object {
+                   \\"height\\": 2,
+                   \\"width\\": 0,
+                 },
+                 \\"shadowOpacity\\": 0.3,
+                 \\"shadowRadius\\": 2,
+               }
+             }
+           >
+             <Text
+               style={
+                 Array [
+                   Object {
+                     \\"color\\": \\"#505256\\",
+                   },
+                   Object {
+                     \\"fontFamily\\": \\"SourceSansPro-Regular\\",
+                   },
+                   Object {
+                     \\"fontSize\\": 16,
+                     \\"lineHeight\\": 22,
+                   },
+                 ]
+               }
+             >
+               ipsam nobis cupiditate
+             </Text>
+           </View>
+         </View>
+         <View
+           style={
+             Object {
                \\"height\\": 0,
              }
            }
          />
        </View>
@@ -545,11 +671,11 @@
                    \\"textAlign\\": \\"center\\",
                  },
                ]
              }
            >
-             Caesar this week...
+             Gracie this week...
            </Text>
          </View>
          <View
            style={
              Object {"
`;

exports[`with explainer open opens explainer modal 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "fontSize": 18,
                      },
                      Array [
                        Object {
                          "margin": 10,
                        },
                        Object {},
                      ],
                    ],
                    Object {
                      "fontFamily": "icomoon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="SelectStepExplainerIconButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "borderWidth": 0,
                    "height": 60,
                    "justifyContent": "center",
                    "margin": 0,
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <SvgMock
                color="#ffffff"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      ListFooterComponent={<FooterLoading />}
      ListHeaderComponent={
        <ErrorNotice
          message="Error loading step suggestions"
          refetch={[Function]}
        />
      }
      bounces={false}
      contentContainerStyle={
        Array [
          undefined,
          Object {
            "paddingTop": 203,
          },
        ]
      }
      data={
        Array [
          Object {
            "action": [Function],
            "icon": true,
            "key": "custom",
            "text": "Create your own Relate Step",
          },
        ]
      }
      disableHeaderMomentum={false}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      headerMomentumDuration={350}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.2}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      overScrollMode="never"
      refreshControl={
        <MyRefreshControl
          onRefresh={[Function]}
          refreshing={true}
        />
      }
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={1}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "paddingVertical": 12,
        }
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        />
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 8,
                "elevation": 4,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginHorizontal": 20,
                "marginVertical": 6,
                "opacity": 1,
                "padding": 20,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 2,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 16,
                    "lineHeight": 22,
                  },
                ]
              }
            >
              Create your own Relate Step
            </Text>
            <SvgMock />
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Array [
                Object {
                  "padding": 10,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="rgba(0, 0, 0, 1)"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "backgroundColor": "#ECEEF2",
          "height": 203,
          "left": 0,
          "paddingTop": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#007398",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "marginHorizontal": 30,
              "marginVertical": 35,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "fontWeight": "300",
                  "letterSpacing": 2,
                  "lineHeight": 30,
                  "textAlign": "center",
                },
              ]
            }
          >
            Choose a step to take with 
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "fontWeight": "300",
                  "letterSpacing": 2,
                  "lineHeight": 30,
                  "textAlign": "center",
                },
              ]
            }
          >
             this week...
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#ffffff"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Relate
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "marginTop": 20,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderBottomWidth": 9,
                        "borderLeftColor": "transparent",
                        "borderLeftWidth": 7,
                        "borderRightColor": "transparent",
                        "borderRightWidth": 7,
                        "borderStyle": "solid",
                        "height": 0,
                        "width": 0,
                      },
                      Object {
                        "borderBottomColor": "#ECEEF2",
                        "transform": Array [
                          Object {
                            "rotate": "0deg",
                          },
                        ],
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Pray
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Care
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <SvgMock
                  color="#52C5DC"
                  height={24}
                />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#52C5DC",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "letterSpacing": 1,
                          "paddingLeft": 4,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Share
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 0.5)",
        "bottom": 0,
        "height": 1334,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "borderRadius": 24,
          "height": 460,
          "overflow": "hidden",
          "position": "relative",
          "width": 710,
        }
      }
    >
      <RCTScrollView
        activeAnimationOptions={null}
        activeAnimationType="timing"
        activeSlideAlignment="center"
        activeSlideOffset={20}
        apparitionDelay={0}
        automaticallyAdjustContentInsets={false}
        autoplay={false}
        autoplayDelay={1000}
        autoplayInterval={3000}
        bounces={false}
        callbackOffsetMargin={5}
        containerCustomStyle={Object {}}
        contentContainerCustomStyle={Object {}}
        contentContainerStyle={
          Array [
            Object {
              "paddingLeft": 0,
              "paddingRight": 0,
            },
            Object {},
          ]
        }
        data={
          Array [
            Object {
              "source": Object {
                "testUri": "../../../assets/images/explainerModal1.png",
              },
              "text": "MissionHub suggests four ways to draw someone closer to God.",
            },
            Object {
              "source": Object {
                "testUri": "../../../assets/images/explainerModal2.png",
              },
              "stepType": "relate",
              "text": "Ideas to help you deepen this relationship and build trust.",
            },
            Object {
              "source": Object {
                "testUri": "../../../assets/images/explainerModal3.png",
              },
              "stepType": "pray",
              "text": "Ways to invite God into your relationship with this person.",
            },
            Object {
              "source": Object {
                "testUri": "../../../assets/images/explainerModal4.png",
              },
              "stepType": "care",
              "text": "Ideas to help you demonstrate that you care about this person.",
            },
            Object {
              "source": Object {
                "testUri": "../../../assets/images/explainerModal5.png",
              },
              "stepType": "share",
              "text": "Talk about what this person believes and ways you can help them know the truth about God.",
            },
          ]
        }
        decelerationRate="fast"
        directionalLockEnabled={true}
        disableVirtualization={false}
        enableMomentum={false}
        enableSnap={true}
        firstItem={0}
        getItem={[Function]}
        getItemCount={[Function]}
        hasParallaxImages={false}
        horizontal={true}
        inactiveSlideOpacity={1}
        inactiveSlideScale={1}
        inactiveSlideShift={0}
        initialNumToRender={6}
        invertStickyHeaders={false}
        inverted={false}
        itemHeight={460}
        itemWidth={710}
        keyExtractor={[Function]}
        layout="default"
        lockScrollTimeoutDuration={1000}
        lockScrollWhileSnapping={false}
        loop={false}
        loopClonesPerSide={3}
        maxToRenderPerBatch={13}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onResponderRelease={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onSnapToItem={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        overScrollMode="never"
        pinchGestureEnabled={false}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEnabled={true}
        scrollEventThrottle={1}
        scrollsToTop={false}
        shouldOptimizeUpdates={true}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        slideStyle={Object {}}
        sliderHeight={460}
        sliderWidth={710}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flexDirection": "row",
            "opacity": 0,
            "width": 710,
          }
        }
        swipeThreshold={20}
        updateCellsBatchingPeriod={50}
        useScrollView={false}
        vertical={false}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={13}
      >
        <View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 710,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Image
                  resizeMode="cover"
                  source={
                    Object {
                      "testUri": "../../../assets/images/explainerModal1.png",
                    }
                  }
                  style={
                    Object {
                      "height": "100%",
                      "width": "100%",
                    }
                  }
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flex": 0.9,
                    },
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginHorizontal": 24,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#505256",
                          "fontSize": 24,
                          "fontWeight": "300",
                          "lineHeight": 30,
                          "textAlign": "center",
                        },
                        Object {
                          "marginHorizontal": 15,
                        },
                      ],
                    ]
                  }
                >
                  MissionHub suggests four ways to draw someone closer to God.
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 710,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Image
                  resizeMode="cover"
                  source={
                    Object {
                      "testUri": "../../../assets/images/explainerModal2.png",
                    }
                  }
                  style={
                    Object {
                      "height": "100%",
                      "width": "100%",
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 0,
                    "justifyContent": "center",
                    "overflow": "visible",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#ffffff",
                        "borderRadius": 48,
                        "elevation": 5,
                        "height": 96,
                        "justifyContent": "center",
                        "position": "absolute",
                        "shadowColor": "#505256",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.3,
                        "shadowRadius": 8,
                        "top": -48,
                        "width": 96,
                      },
                    ]
                  }
                >
                  <SvgMock
                    color="#3EB1C8"
                    height={56}
                    width={56}
                  />
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flex": 0.9,
                    },
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginHorizontal": 24,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#505256",
                        },
                        Object {
                          "fontFamily": "SourceSansPro-Regular",
                        },
                        Array [
                          Object {
                            "color": "#B4B6BA",
                            "fontSize": 16,
                            "fontWeight": "bold",
                            "letterSpacing": 1,
                            "paddingLeft": 0,
                          },
                          Array [
                            Object {
                              "color": "#505256",
                              "fontSize": 24,
                              "fontWeight": "300",
                              "lineHeight": 30,
                              "textAlign": "center",
                            },
                            Object {
                              "fontSize": 32,
                              "lineHeight": 38,
                              "marginHorizontal": 20,
                              "marginTop": 20,
                            },
                          ],
                        ],
                      ]
                    }
                  >
                    Relate
                  </Text>
                </View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#505256",
                          "fontSize": 24,
                          "fontWeight": "300",
                          "lineHeight": 30,
                          "textAlign": "center",
                        },
                        Object {
                          "fontSize": 14,
                          "lineHeight": 20,
                          "marginHorizontal": 20,
                          "marginTop": 5,
                        },
                      ],
                    ]
                  }
                >
                  Ideas to help you deepen this relationship and build trust.
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 710,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Image
                  resizeMode="cover"
                  source={
                    Object {
                      "testUri": "../../../assets/images/explainerModal3.png",
                    }
                  }
                  style={
                    Object {
                      "height": "100%",
                      "width": "100%",
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 0,
                    "justifyContent": "center",
                    "overflow": "visible",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#ffffff",
                        "borderRadius": 48,
                        "elevation": 5,
                        "height": 96,
                        "justifyContent": "center",
                        "position": "absolute",
                        "shadowColor": "#505256",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.3,
                        "shadowRadius": 8,
                        "top": -48,
                        "width": 96,
                      },
                    ]
                  }
                >
                  <SvgMock
                    color="#3EB1C8"
                    height={56}
                    width={56}
                  />
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flex": 0.9,
                    },
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginHorizontal": 24,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#505256",
                        },
                        Object {
                          "fontFamily": "SourceSansPro-Regular",
                        },
                        Array [
                          Object {
                            "color": "#B4B6BA",
                            "fontSize": 16,
                            "fontWeight": "bold",
                            "letterSpacing": 1,
                            "paddingLeft": 0,
                          },
                          Array [
                            Object {
                              "color": "#505256",
                              "fontSize": 24,
                              "fontWeight": "300",
                              "lineHeight": 30,
                              "textAlign": "center",
                            },
                            Object {
                              "fontSize": 32,
                              "lineHeight": 38,
                              "marginHorizontal": 20,
                              "marginTop": 20,
                            },
                          ],
                        ],
                      ]
                    }
                  >
                    Pray
                  </Text>
                </View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#505256",
                          "fontSize": 24,
                          "fontWeight": "300",
                          "lineHeight": 30,
                          "textAlign": "center",
                        },
                        Object {
                          "fontSize": 14,
                          "lineHeight": 20,
                          "marginHorizontal": 20,
                          "marginTop": 5,
                        },
                      ],
                    ]
                  }
                >
                  Ways to invite God into your relationship with this person.
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 710,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Image
                  resizeMode="cover"
                  source={
                    Object {
                      "testUri": "../../../assets/images/explainerModal4.png",
                    }
                  }
                  style={
                    Object {
                      "height": "100%",
                      "width": "100%",
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 0,
                    "justifyContent": "center",
                    "overflow": "visible",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#ffffff",
                        "borderRadius": 48,
                        "elevation": 5,
                        "height": 96,
                        "justifyContent": "center",
                        "position": "absolute",
                        "shadowColor": "#505256",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.3,
                        "shadowRadius": 8,
                        "top": -48,
                        "width": 96,
                      },
                    ]
                  }
                >
                  <SvgMock
                    color="#3EB1C8"
                    height={56}
                    width={56}
                  />
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flex": 0.9,
                    },
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginHorizontal": 24,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#505256",
                        },
                        Object {
                          "fontFamily": "SourceSansPro-Regular",
                        },
                        Array [
                          Object {
                            "color": "#B4B6BA",
                            "fontSize": 16,
                            "fontWeight": "bold",
                            "letterSpacing": 1,
                            "paddingLeft": 0,
                          },
                          Array [
                            Object {
                              "color": "#505256",
                              "fontSize": 24,
                              "fontWeight": "300",
                              "lineHeight": 30,
                              "textAlign": "center",
                            },
                            Object {
                              "fontSize": 32,
                              "lineHeight": 38,
                              "marginHorizontal": 20,
                              "marginTop": 20,
                            },
                          ],
                        ],
                      ]
                    }
                  >
                    Care
                  </Text>
                </View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#505256",
                          "fontSize": 24,
                          "fontWeight": "300",
                          "lineHeight": 30,
                          "textAlign": "center",
                        },
                        Object {
                          "fontSize": 14,
                          "lineHeight": 20,
                          "marginHorizontal": 20,
                          "marginTop": 5,
                        },
                      ],
                    ]
                  }
                >
                  Ideas to help you demonstrate that you care about this person.
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 710,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Image
                  resizeMode="cover"
                  source={
                    Object {
                      "testUri": "../../../assets/images/explainerModal5.png",
                    }
                  }
                  style={
                    Object {
                      "height": "100%",
                      "width": "100%",
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 0,
                    "justifyContent": "center",
                    "overflow": "visible",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#ffffff",
                        "borderRadius": 48,
                        "elevation": 5,
                        "height": 96,
                        "justifyContent": "center",
                        "position": "absolute",
                        "shadowColor": "#505256",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.3,
                        "shadowRadius": 8,
                        "top": -48,
                        "width": 96,
                      },
                    ]
                  }
                >
                  <SvgMock
                    color="#3EB1C8"
                    height={56}
                    width={56}
                  />
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flex": 0.9,
                    },
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginHorizontal": 24,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#505256",
                        },
                        Object {
                          "fontFamily": "SourceSansPro-Regular",
                        },
                        Array [
                          Object {
                            "color": "#B4B6BA",
                            "fontSize": 16,
                            "fontWeight": "bold",
                            "letterSpacing": 1,
                            "paddingLeft": 0,
                          },
                          Array [
                            Object {
                              "color": "#505256",
                              "fontSize": 24,
                              "fontWeight": "300",
                              "lineHeight": 30,
                              "textAlign": "center",
                            },
                            Object {
                              "fontSize": 32,
                              "lineHeight": 38,
                              "marginHorizontal": 20,
                              "marginTop": 20,
                            },
                          ],
                        ],
                      ]
                    }
                  >
                    Share
                  </Text>
                </View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#505256",
                          "fontSize": 24,
                          "fontWeight": "300",
                          "lineHeight": 30,
                          "textAlign": "center",
                        },
                        Object {
                          "fontSize": 14,
                          "lineHeight": 20,
                          "marginHorizontal": 20,
                          "marginTop": 5,
                        },
                      ],
                    ]
                  }
                >
                  Talk about what this person believes and ways you can help them know the truth about God.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
      <View
        accessible={false}
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "paddingHorizontal": 20,
              "paddingVertical": 30,
            },
            Object {
              "flexDirection": "row",
            },
            Object {
              "marginBottom": 10,
            },
          ]
        }
      >
        <View
          accessible={false}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginHorizontal": 4,
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgba(197, 199, 203, 1)",
                "borderRadius": 4,
                "height": 8,
                "opacity": 0.5,
                "transform": Array [
                  Object {
                    "scale": 0.9000132621729346,
                  },
                ],
                "width": 8,
              }
            }
          />
        </View>
        <View
          accessible={false}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginHorizontal": 4,
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgba(197, 199, 203, 1)",
                "borderRadius": 4,
                "height": 8,
                "opacity": 0.5,
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 8,
              }
            }
          />
        </View>
        <View
          accessible={false}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginHorizontal": 4,
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgba(197, 199, 203, 1)",
                "borderRadius": 4,
                "height": 8,
                "opacity": 0.5,
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 8,
              }
            }
          />
        </View>
        <View
          accessible={false}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginHorizontal": 4,
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgba(197, 199, 203, 1)",
                "borderRadius": 4,
                "height": 8,
                "opacity": 0.5,
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 8,
              }
            }
          />
        </View>
        <View
          accessible={false}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "marginHorizontal": 4,
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgba(197, 199, 203, 1)",
                "borderRadius": 4,
                "height": 8,
                "opacity": 0.5,
                "transform": Array [
                  Object {
                    "scale": 0.9,
                  },
                ],
                "width": 8,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "position": "absolute",
            "right": 5,
            "top": 5,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="IconButton"
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                null,
                Object {},
                null,
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 32,
                    },
                    Array [
                      Object {
                        "margin": 10,
                      },
                      Object {
                        "color": "#ffffff",
                      },
                    ],
                  ],
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
