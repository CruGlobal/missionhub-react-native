// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with back button 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#66D9F0",
        "flex": 1,
      },
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../assets/images/landscapeStagesImage.png",
      }
    }
    style={
      Array [
        Object {
          "bottom": -100,
          "height": 275,
          "position": "absolute",
        },
        Object {
          "left": -150,
          "width": 1050,
        },
      ]
    }
  />
  <Text
    style={
      Array [
        Object {
          "color": "#505256",
        },
        Object {
          "fontFamily": "SourceSansPro-Regular",
        },
        Object {
          "color": "#007398",
          "fontFamily": "SourceSansPro-Regular",
          "fontSize": 18,
          "fontWeight": "500",
          "paddingBottom": 25,
          "paddingHorizontal": 30,
          "paddingTop": 45,
          "textAlign": "center",
          "width": 650,
        },
      ]
    }
  >
    Roger, which stage best describes where you are on your journey?
  </Text>
  <RCTScrollView
    activeAnimationOptions={null}
    activeAnimationType="timing"
    activeSlideAlignment="center"
    activeSlideOffset={20}
    apparitionDelay={0}
    automaticallyAdjustContentInsets={false}
    autoplay={false}
    autoplayDelay={1000}
    autoplayInterval={3000}
    callbackOffsetMargin={5}
    containerCustomStyle={
      Object {
        "flex": 0,
        "flexGrow": 0,
        "height": 400,
      }
    }
    contentContainerCustomStyle={Object {}}
    contentContainerStyle={
      Array [
        Object {
          "paddingLeft": 72.5,
          "paddingRight": 72.5,
        },
        Object {},
      ]
    }
    data={
      Array [
        Object {
          "id": "0",
          "name": "uninterested",
        },
      ]
    }
    decelerationRate="fast"
    directionalLockEnabled={true}
    disableVirtualization={false}
    enableMomentum={false}
    enableSnap={true}
    firstItem={0}
    getItem={[Function]}
    getItemCount={[Function]}
    hasParallaxImages={false}
    horizontal={true}
    inactiveSlideOpacity={1}
    inactiveSlideScale={1}
    inactiveSlideShift={0}
    initialNumToRender={7}
    invertStickyHeaders={false}
    inverted={false}
    itemWidth={680}
    keyExtractor={[Function]}
    layout="default"
    lockScrollTimeoutDuration={1000}
    lockScrollWhileSnapping={false}
    loop={false}
    loopClonesPerSide={3}
    maxToRenderPerBatch={15}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onResponderRelease={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    onSnapToItem={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    overScrollMode="never"
    pinchGestureEnabled={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollsToTop={false}
    shouldOptimizeUpdates={true}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
    slideStyle={Object {}}
    sliderWidth={825}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 0,
        "flexDirection": "row",
        "flexGrow": 0,
        "height": 400,
        "opacity": 0,
        "width": 825,
      }
    }
    swipeThreshold={20}
    updateCellsBatchingPeriod={50}
    useScrollView={false}
    vertical={false}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={15}
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "width": 680,
              },
              Object {},
              Object {},
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "height": 320,
                "justifyContent": "space-between",
                "marginHorizontal": 25,
                "width": 630,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "paddingLeft": 15,
                  "paddingRight": 15,
                  "paddingTop": 30,
                }
              }
            >
              <Image
                source={
                  Object {
                    "testUri": "../../../assets/images/uninterestedIcon.png",
                  }
                }
              />
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "AmaticSC-Bold",
                    },
                    Object {
                      "color": "#007398",
                      "fontSize": 42,
                      "padding": 5,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                uninterested
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Object {
                      "color": "#505256",
                      "fontSize": 16,
                      "padding": 5,
                      "textAlign": "center",
                    },
                  ]
                }
              />
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="StageButton0"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#007398",
                      "height": 60,
                      "justifyContent": "center",
                    },
                    null,
                    Object {},
                    null,
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "color": "#ffffff",
                          "fontSize": 18,
                          "fontWeight": "500",
                          "letterSpacing": 1.5,
                          "textAlign": "center",
                        },
                        Object {},
                      ],
                    ]
                  }
                >
                  I AM HERE
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders correctly without back button 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#66D9F0",
        "flex": 1,
      },
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../assets/images/landscapeStagesImage.png",
      }
    }
    style={
      Array [
        Object {
          "bottom": -100,
          "height": 275,
          "position": "absolute",
        },
        Object {
          "left": -150,
          "width": 1050,
        },
      ]
    }
  />
  <Text
    style={
      Array [
        Object {
          "color": "#505256",
        },
        Object {
          "fontFamily": "SourceSansPro-Regular",
        },
        Object {
          "color": "#007398",
          "fontFamily": "SourceSansPro-Regular",
          "fontSize": 18,
          "fontWeight": "500",
          "paddingBottom": 25,
          "paddingHorizontal": 30,
          "paddingTop": 45,
          "textAlign": "center",
          "width": 650,
        },
      ]
    }
  >
    Roger, which stage best describes where you are on your journey?
  </Text>
  <RCTScrollView
    activeAnimationOptions={null}
    activeAnimationType="timing"
    activeSlideAlignment="center"
    activeSlideOffset={20}
    apparitionDelay={0}
    automaticallyAdjustContentInsets={false}
    autoplay={false}
    autoplayDelay={1000}
    autoplayInterval={3000}
    callbackOffsetMargin={5}
    containerCustomStyle={
      Object {
        "flex": 0,
        "flexGrow": 0,
        "height": 400,
      }
    }
    contentContainerCustomStyle={Object {}}
    contentContainerStyle={
      Array [
        Object {
          "paddingLeft": 72.5,
          "paddingRight": 72.5,
        },
        Object {},
      ]
    }
    data={
      Array [
        Object {
          "id": "0",
          "name": "uninterested",
        },
      ]
    }
    decelerationRate="fast"
    directionalLockEnabled={true}
    disableVirtualization={false}
    enableMomentum={false}
    enableSnap={true}
    firstItem={0}
    getItem={[Function]}
    getItemCount={[Function]}
    hasParallaxImages={false}
    horizontal={true}
    inactiveSlideOpacity={1}
    inactiveSlideScale={1}
    inactiveSlideShift={0}
    initialNumToRender={7}
    invertStickyHeaders={false}
    inverted={false}
    itemWidth={680}
    keyExtractor={[Function]}
    layout="default"
    lockScrollTimeoutDuration={1000}
    lockScrollWhileSnapping={false}
    loop={false}
    loopClonesPerSide={3}
    maxToRenderPerBatch={15}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onResponderRelease={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    onSnapToItem={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    overScrollMode="never"
    pinchGestureEnabled={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollsToTop={false}
    shouldOptimizeUpdates={true}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
    slideStyle={Object {}}
    sliderWidth={825}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 0,
        "flexDirection": "row",
        "flexGrow": 0,
        "height": 400,
        "opacity": 0,
        "width": 825,
      }
    }
    swipeThreshold={20}
    updateCellsBatchingPeriod={50}
    useScrollView={false}
    vertical={false}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={15}
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "width": 680,
              },
              Object {},
              Object {},
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "height": 320,
                "justifyContent": "space-between",
                "marginHorizontal": 25,
                "width": 630,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "paddingLeft": 15,
                  "paddingRight": 15,
                  "paddingTop": 30,
                }
              }
            >
              <Image
                source={
                  Object {
                    "testUri": "../../../assets/images/uninterestedIcon.png",
                  }
                }
              />
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "AmaticSC-Bold",
                    },
                    Object {
                      "color": "#007398",
                      "fontSize": 42,
                      "padding": 5,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                uninterested
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Object {
                      "color": "#505256",
                      "fontSize": 16,
                      "padding": 5,
                      "textAlign": "center",
                    },
                  ]
                }
              />
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="StageButton0"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#007398",
                      "height": 60,
                      "justifyContent": "center",
                    },
                    null,
                    Object {},
                    null,
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "color": "#ffffff",
                          "fontSize": 18,
                          "fontWeight": "500",
                          "letterSpacing": 1.5,
                          "textAlign": "center",
                        },
                        Object {},
                      ],
                    ]
                  }
                >
                  I AM HERE
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
