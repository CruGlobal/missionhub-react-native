// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`handleUpdateData should update the state 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flex": 4,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
            ]
          }
        >
          Edit Person
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="CloseButton"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                },
                null,
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "justifyContent": "center",
                  },
                  undefined,
                ],
                null,
              ]
            }
          >
            <SvgMock
              color="#ECEEF2"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "paddingHorizontal": 25,
            "paddingVertical": 50,
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "alignItems": "center",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              First Name
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={true}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="First Name (Required)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="next"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="firstNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value="GreatGuy"
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            />
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={false}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Last Name (optional)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="done"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="lastNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              Stage
            </Text>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 1,
                  "borderColor": "#ECEEF2",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "flex-start",
                    "color": "#3CC8E6",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "marginVertical": 10,
                    "width": "100%",
                  }
                }
                testID="stageSelectButton"
              >
                Forgiven
              </Text>
            </View>
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              How do you know each other?
            </Text>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="popupMenuButton"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#ECEEF2",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "color": "#3CC8E6",
                      "fontFamily": "SourceSansPro-Regular",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                      "lineHeight": 24,
                      "marginVertical": 10,
                      "width": "100%",
                    }
                  }
                >
                  Choose a category
                </Text>
                <SvgMock
                  color="#B4B6BA"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bottomButton"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#3CC8E6",
              "height": 60,
              "justifyContent": "center",
            },
            null,
            Array [
              Object {
                "alignItems": "center",
                "height": 48,
                "width": 650,
              },
              null,
            ],
            Object {
              "borderRadius": 50,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "bold",
                "letterSpacing": 1,
                "lineHeight": 18,
                "textAlign": "center",
                "textTransform": "uppercase",
              },
              Array [
                null,
              ],
            ]
          }
        >
          DONE
        </Text>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`renders correctly | No Person 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="BackButton"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                },
                null,
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "justifyContent": "center",
                  },
                  undefined,
                ],
                null,
              ]
            }
          >
            <SvgMock
              color="#ffffff"
            />
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
    </View>
  </RCTSafeAreaView>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "paddingHorizontal": 25,
            "paddingVertical": 50,
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "alignItems": "center",
                    "flex": 2,
                    "justifyContent": "flex-end",
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "marginBottom": 30,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "SourceSansPro-Regular",
                      "fontSize": 24,
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                      "lineHeight": 30,
                      "maxWidth": 230,
                      "textAlign": "center",
                    }
                  }
                >
                  Who would you like to take steps of faith with this week?
                </Text>
              </View>
            </View>
            <Text
              style={
                Object {
                  "color": "#3CC8E6",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            />
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={true}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="First Name (Required)"
              placeholderTextColor="#ffffff"
              rejectResponderTermination={true}
              returnKeyType="next"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#3CC8E6",
                    "color": "#ffffff",
                  },
                ]
              }
              testID="firstNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#3CC8E6",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            />
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={false}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Last Name (optional)"
              placeholderTextColor="#ffffff"
              rejectResponderTermination={true}
              returnKeyType="done"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#3CC8E6",
                    "color": "#ffffff",
                  },
                ]
              }
              testID="lastNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
            />
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bottomButton"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#3CC8E6",
              "height": 60,
              "justifyContent": "center",
            },
            Object {
              "opacity": 0.6,
            },
            Array [
              Object {
                "alignItems": "center",
                "height": 48,
                "width": 650,
              },
              Object {
                "backgroundColor": "#005A7F",
                "color": "#ffffff",
                "opacity": 1,
              },
            ],
            Object {
              "borderRadius": 50,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "bold",
                "letterSpacing": 1,
                "lineHeight": 18,
                "textAlign": "center",
                "textTransform": "uppercase",
              },
              Array [
                Object {
                  "backgroundColor": "#005A7F",
                  "color": "#ffffff",
                  "opacity": 1,
                },
              ],
            ]
          }
        >
          CONTINUE
        </Text>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`renders correctly | With Person 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flex": 4,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
            ]
          }
        >
          Edit Person
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="CloseButton"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                },
                null,
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "justifyContent": "center",
                  },
                  undefined,
                ],
                null,
              ]
            }
          >
            <SvgMock
              color="#ECEEF2"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "paddingHorizontal": 25,
            "paddingVertical": 50,
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "alignItems": "center",
                    "flex": 2,
                    "justifyContent": "flex-end",
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "marginBottom": 30,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "SourceSansPro-Regular",
                      "fontSize": 24,
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                      "lineHeight": 30,
                      "maxWidth": 230,
                      "textAlign": "center",
                    }
                  }
                >
                  Who would you like to take steps of faith with this week?
                </Text>
              </View>
            </View>
            <Text
              style={
                Object {
                  "color": "#3CC8E6",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            />
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={true}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="First Name (Required)"
              placeholderTextColor="#ffffff"
              rejectResponderTermination={true}
              returnKeyType="next"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#3CC8E6",
                    "color": "#ffffff",
                  },
                ]
              }
              testID="firstNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#3CC8E6",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            />
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={false}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Last Name (optional)"
              placeholderTextColor="#ffffff"
              rejectResponderTermination={true}
              returnKeyType="done"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#3CC8E6",
                    "color": "#ffffff",
                  },
                ]
              }
              testID="lastNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
            />
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bottomButton"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#3CC8E6",
              "height": 60,
              "justifyContent": "center",
            },
            Object {
              "opacity": 0.6,
            },
            Array [
              Object {
                "alignItems": "center",
                "height": 48,
                "width": 650,
              },
              Object {
                "backgroundColor": "#005A7F",
                "color": "#ffffff",
                "opacity": 1,
              },
            ],
            Object {
              "borderRadius": 50,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "bold",
                "letterSpacing": 1,
                "lineHeight": 18,
                "textAlign": "center",
                "textTransform": "uppercase",
              },
              Array [
                Object {
                  "backgroundColor": "#005A7F",
                  "color": "#ffffff",
                  "opacity": 1,
                },
              ],
            ]
          }
        >
          DONE
        </Text>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`savePerson add new person with org should add a new person 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="BackButton"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                },
                null,
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "justifyContent": "center",
                  },
                  undefined,
                ],
                null,
              ]
            }
          >
            <SvgMock
              color="#ffffff"
            />
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
    </View>
  </RCTSafeAreaView>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "paddingHorizontal": 25,
            "paddingVertical": 50,
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "alignItems": "center",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              First Name
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={true}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="First Name (Required)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="next"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="firstNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value="new name"
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            />
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={false}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Last Name (optional)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="done"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="lastNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              Stage
            </Text>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 1,
                  "borderColor": "#ECEEF2",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "flex-start",
                    "color": "#3CC8E6",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "marginVertical": 10,
                    "width": "100%",
                  }
                }
                testID="stageSelectButton"
              >
                Choose a stage
              </Text>
            </View>
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              How do you know each other?
            </Text>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="popupMenuButton"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#ECEEF2",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "color": "#3CC8E6",
                      "fontFamily": "SourceSansPro-Regular",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                      "lineHeight": 24,
                      "marginVertical": 10,
                      "width": "100%",
                    }
                  }
                >
                  Choose a category
                </Text>
                <SvgMock
                  color="#B4B6BA"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bottomButton"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#3CC8E6",
              "height": 60,
              "justifyContent": "center",
            },
            null,
            Array [
              Object {
                "alignItems": "center",
                "height": 48,
                "width": 650,
              },
              null,
            ],
            Object {
              "borderRadius": 50,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "bold",
                "letterSpacing": 1,
                "lineHeight": 18,
                "textAlign": "center",
                "textTransform": "uppercase",
              },
              Array [
                null,
              ],
            ]
          }
        >
          CONTINUE
        </Text>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`savePerson add new person without org should add a new person 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -145,55 +145,29 @@
                style={
                  Array [
                    Object {},
                    Object {
                      \\"alignItems\\": \\"center\\",
-                     \\"flex\\": 2,
-                     \\"justifyContent\\": \\"flex-end\\",
                    },
                  ]
                }
-             >
-               <View
-                 style={
-                   Object {
-                     \\"alignItems\\": \\"center\\",
-                     \\"marginBottom\\": 30,
-                   }
-                 }
-               >
+             />
              <Text
                style={
                  Object {
-                       \\"color\\": \\"#ffffff\\",
-                       \\"fontFamily\\": \\"SourceSansPro-Regular\\",
-                       \\"fontSize\\": 24,
-                       \\"fontStyle\\": \\"normal\\",
-                       \\"fontWeight\\": \\"normal\\",
-                       \\"lineHeight\\": 30,
-                       \\"maxWidth\\": 230,
-                       \\"textAlign\\": \\"center\\",
-                     }
-                   }
-                 >
-                   Who would you like to take steps of faith with this week?
-                 </Text>
-               </View>
-             </View>
-             <Text
-               style={
-                 Object {
-                   \\"color\\": \\"#3CC8E6\\",
+                   \\"color\\": \\"#B4B6BA\\",
                    \\"fontFamily\\": \\"SourceSansPro-Regular\\",
                    \\"fontSize\\": 12,
                    \\"fontStyle\\": \\"normal\\",
                    \\"fontWeight\\": \\"normal\\",
                    \\"lineHeight\\": 16,
                    \\"marginTop\\": 15,
                  }
                }
-             />
+             >
+               First Name
+             </Text>
              <TextInput
                allowFontScaling={true}
                autoCorrect={false}
                autoFocus={true}
                blurOnSubmit={false}
@@ -202,11 +176,11 @@
                onBlur={[Function onBlur]}
                onChangeText={[Function onChangeText]}
                onFocus={[Function onFocus]}
                onSubmitEditing={[Function lastNameFocus]}
                placeholder=\\"First Name (Required)\\"
-               placeholderTextColor=\\"#ffffff\\"
+               placeholderTextColor=\\"#3CC8E6\\"
                rejectResponderTermination={true}
                returnKeyType=\\"next\\"
                selectionColor=\\"#3CC8E6\\"
                style={
                  Array [
@@ -222,18 +196,18 @@
                      \\"letterSpacing\\": 0.25,
                      \\"lineHeight\\": 24,
                      \\"paddingVertical\\": 5,
                    },
                    Object {
-                     \\"borderBottomColor\\": \\"#3CC8E6\\",
-                     \\"color\\": \\"#ffffff\\",
+                     \\"borderBottomColor\\": \\"#ECEEF2\\",
+                     \\"color\\": \\"#3CC8E6\\",
                    },
                  ]
                }
                testID=\\"firstNameInput\\"
                underlineColorAndroid=\\"rgba(0,0,0,0)\\"
-               value=\\"\\"
+               value=\\"new name\\"
              />
            </View>
            <View
              style={
                Array [
@@ -245,11 +219,11 @@
              }
            >
              <Text
                style={
                  Object {
-                   \\"color\\": \\"#3CC8E6\\",
+                   \\"color\\": \\"#B4B6BA\\",
                    \\"fontFamily\\": \\"SourceSansPro-Regular\\",
                    \\"fontSize\\": 12,
                    \\"fontStyle\\": \\"normal\\",
                    \\"fontWeight\\": \\"normal\\",
                    \\"lineHeight\\": 16,
@@ -266,11 +240,11 @@
                multiline={false}
                onBlur={[Function onBlur]}
                onChangeText={[Function onChangeText]}
                onFocus={[Function onFocus]}
                placeholder=\\"Last Name (optional)\\"
-               placeholderTextColor=\\"#ffffff\\"
+               placeholderTextColor=\\"#3CC8E6\\"
                rejectResponderTermination={true}
                returnKeyType=\\"done\\"
                selectionColor=\\"#3CC8E6\\"
                style={
                  Array [
@@ -286,23 +260,158 @@
                      \\"letterSpacing\\": 0.25,
                      \\"lineHeight\\": 24,
                      \\"paddingVertical\\": 5,
                    },
                    Object {
-                     \\"borderBottomColor\\": \\"#3CC8E6\\",
-                     \\"color\\": \\"#ffffff\\",
+                     \\"borderBottomColor\\": \\"#ECEEF2\\",
+                     \\"color\\": \\"#3CC8E6\\",
                    },
                  ]
                }
                testID=\\"lastNameInput\\"
                underlineColorAndroid=\\"rgba(0,0,0,0)\\"
                value=\\"\\"
              />
            </View>
+           <View
+             style={
+               Array [
+                 Object {},
+                 Object {
+                   \\"flexDirection\\": \\"column\\",
+                 },
+               ]
+             }
+           >
+             <Text
+               style={
+                 Object {
+                   \\"color\\": \\"#B4B6BA\\",
+                   \\"fontFamily\\": \\"SourceSansPro-Regular\\",
+                   \\"fontSize\\": 12,
+                   \\"fontStyle\\": \\"normal\\",
+                   \\"fontWeight\\": \\"normal\\",
+                   \\"lineHeight\\": 16,
+                   \\"marginTop\\": 15,
+                 }
+               }
+             >
+               Stage
+             </Text>
+             <View
+               style={
+                 Object {
+                   \\"alignItems\\": \\"center\\",
+                   \\"borderBottomWidth\\": 1,
+                   \\"borderColor\\": \\"#ECEEF2\\",
+                   \\"flex\\": 1,
+                   \\"flexDirection\\": \\"row\\",
+                   \\"justifyContent\\": \\"space-between\\",
+                 }
+               }
+             >
+               <Text
+                 onPress={[Function onPress]}
+                 style={
+                   Object {
+                     \\"alignItems\\": \\"flex-start\\",
+                     \\"color\\": \\"#3CC8E6\\",
+                     \\"fontFamily\\": \\"SourceSansPro-Regular\\",
+                     \\"fontSize\\": 16,
+                     \\"fontStyle\\": \\"normal\\",
+                     \\"fontWeight\\": \\"normal\\",
+                     \\"lineHeight\\": 24,
+                     \\"marginVertical\\": 10,
+                     \\"width\\": \\"100%\\",
+                   }
+                 }
+                 testID=\\"stageSelectButton\\"
+               >
+                 Choose a stage
+               </Text>
              </View>
            </View>
+           <View
+             style={
+               Array [
+                 Object {},
+                 Object {
+                   \\"flexDirection\\": \\"column\\",
+                 },
+               ]
+             }
+           >
+             <Text
+               style={
+                 Object {
+                   \\"color\\": \\"#B4B6BA\\",
+                   \\"fontFamily\\": \\"SourceSansPro-Regular\\",
+                   \\"fontSize\\": 12,
+                   \\"fontStyle\\": \\"normal\\",
+                   \\"fontWeight\\": \\"normal\\",
+                   \\"lineHeight\\": 16,
+                   \\"marginTop\\": 15,
+                 }
+               }
+             >
+               How do you know each other?
+             </Text>
+             <View
+               accessible={true}
+               focusable={true}
+               onClick={[Function onClick]}
+               onResponderGrant={[Function onResponderGrant]}
+               onResponderMove={[Function onResponderMove]}
+               onResponderRelease={[Function onResponderRelease]}
+               onResponderTerminate={[Function onResponderTerminate]}
+               onResponderTerminationRequest={[Function onResponderTerminationRequest]}
+               onStartShouldSetResponder={[Function onStartShouldSetResponder]}
+               style={
+                 Object {
+                   \\"opacity\\": 1,
+                 }
+               }
+               testID=\\"popupMenuButton\\"
+             >
+               <View
+                 style={
+                   Object {
+                     \\"alignItems\\": \\"center\\",
+                     \\"borderBottomWidth\\": 1,
+                     \\"borderColor\\": \\"#ECEEF2\\",
+                     \\"flex\\": 1,
+                     \\"flexDirection\\": \\"row\\",
+                     \\"justifyContent\\": \\"space-between\\",
+                   }
+                 }
+               >
+                 <Text
+                   style={
+                     Object {
+                       \\"alignItems\\": \\"flex-start\\",
+                       \\"color\\": \\"#3CC8E6\\",
+                       \\"fontFamily\\": \\"SourceSansPro-Regular\\",
+                       \\"fontSize\\": 16,
+                       \\"fontStyle\\": \\"normal\\",
+                       \\"fontWeight\\": \\"normal\\",
+                       \\"lineHeight\\": 24,
+                       \\"marginVertical\\": 10,
+                       \\"width\\": \\"100%\\",
+                     }
+                   }
+                 >
+                   Choose a category
+                 </Text>
+                 <SvgMock
+                   color=\\"#B4B6BA\\"
+                 />
+               </View>
+             </View>
+           </View>
+         </View>
        </View>
+     </View>
    </RCTScrollView>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
@@ -336,24 +445,18 @@
                \\"alignItems\\": \\"center\\",
                \\"backgroundColor\\": \\"#3CC8E6\\",
                \\"height\\": 60,
                \\"justifyContent\\": \\"center\\",
              },
-             Object {
-               \\"opacity\\": 0.6,
-             },
+             null,
              Array [
                Object {
                  \\"alignItems\\": \\"center\\",
                  \\"height\\": 48,
                  \\"width\\": 650,
-               },
-               Object {
-                 \\"backgroundColor\\": \\"#005A7F\\",
-                 \\"color\\": \\"#ffffff\\",
-                 \\"opacity\\": 1,
                },
+               null,
              ],
              Object {
                \\"borderRadius\\": 50,
              },
            ]
@@ -372,15 +475,11 @@
                  \\"lineHeight\\": 18,
                  \\"textAlign\\": \\"center\\",
                  \\"textTransform\\": \\"uppercase\\",
                },
                Array [
-                 Object {
-                   \\"backgroundColor\\": \\"#005A7F\\",
-                   \\"color\\": \\"#ffffff\\",
-                   \\"opacity\\": 1,
-                 },
+                 null,
                ],
              ]
            }
          >
            CONTINUE"
`;

exports[`savePerson update existing person set last name to null should update person and navigate back 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flex": 4,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
            ]
          }
        >
          Edit Person
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="CloseButton"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                },
                null,
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "justifyContent": "center",
                  },
                  undefined,
                ],
                null,
              ]
            }
          >
            <SvgMock
              color="#ECEEF2"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "paddingHorizontal": 25,
            "paddingVertical": 50,
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "alignItems": "center",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              First Name
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={true}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="First Name (Required)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="next"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="firstNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value="new name"
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            />
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={false}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Last Name (optional)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="done"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="lastNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              Stage
            </Text>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 1,
                  "borderColor": "#ECEEF2",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "flex-start",
                    "color": "#3CC8E6",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "marginVertical": 10,
                    "width": "100%",
                  }
                }
                testID="stageSelectButton"
              >
                Forgiven
              </Text>
            </View>
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              How do you know each other?
            </Text>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="popupMenuButton"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#ECEEF2",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "color": "#3CC8E6",
                      "fontFamily": "SourceSansPro-Regular",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                      "lineHeight": 24,
                      "marginVertical": 10,
                      "width": "100%",
                    }
                  }
                >
                  Choose a category
                </Text>
                <SvgMock
                  color="#B4B6BA"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bottomButton"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#3CC8E6",
              "height": 60,
              "justifyContent": "center",
            },
            null,
            Array [
              Object {
                "alignItems": "center",
                "height": 48,
                "width": 650,
              },
              null,
            ],
            Object {
              "borderRadius": 50,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "bold",
                "letterSpacing": 1,
                "lineHeight": 18,
                "textAlign": "center",
                "textTransform": "uppercase",
              },
              Array [
                null,
              ],
            ]
          }
        >
          DONE
        </Text>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`savePerson update existing person with org should update person and navigate back 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flex": 4,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
            ]
          }
        >
          Edit Person
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="CloseButton"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                },
                null,
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "justifyContent": "center",
                  },
                  undefined,
                ],
                null,
              ]
            }
          >
            <SvgMock
              color="#ECEEF2"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "paddingHorizontal": 25,
            "paddingVertical": 50,
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "alignItems": "center",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              First Name
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={true}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="First Name (Required)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="next"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="firstNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value="new name"
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            />
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={false}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Last Name (optional)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="done"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="lastNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              Stage
            </Text>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 1,
                  "borderColor": "#ECEEF2",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "flex-start",
                    "color": "#3CC8E6",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "marginVertical": 10,
                    "width": "100%",
                  }
                }
                testID="stageSelectButton"
              >
                Forgiven
              </Text>
            </View>
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              How do you know each other?
            </Text>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="popupMenuButton"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#ECEEF2",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "color": "#3CC8E6",
                      "fontFamily": "SourceSansPro-Regular",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                      "lineHeight": 24,
                      "marginVertical": 10,
                      "width": "100%",
                    }
                  }
                >
                  Choose a category
                </Text>
                <SvgMock
                  color="#B4B6BA"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bottomButton"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#3CC8E6",
              "height": 60,
              "justifyContent": "center",
            },
            null,
            Array [
              Object {
                "alignItems": "center",
                "height": 48,
                "width": 650,
              },
              null,
            ],
            Object {
              "borderRadius": 50,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "bold",
                "letterSpacing": 1,
                "lineHeight": 18,
                "textAlign": "center",
                "textTransform": "uppercase",
              },
              Array [
                null,
              ],
            ]
          }
        >
          DONE
        </Text>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`savePerson update existing person without org should update person and navigate back 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flex": 4,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
            ]
          }
        >
          Edit Person
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="CloseButton"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                },
                null,
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "justifyContent": "center",
                  },
                  undefined,
                ],
                null,
              ]
            }
          >
            <SvgMock
              color="#ECEEF2"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "paddingHorizontal": 25,
            "paddingVertical": 50,
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "alignItems": "center",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              First Name
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={true}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="First Name (Required)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="next"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="firstNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value="new name"
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            />
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={false}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Last Name (optional)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="done"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="lastNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              Stage
            </Text>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 1,
                  "borderColor": "#ECEEF2",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "flex-start",
                    "color": "#3CC8E6",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "marginVertical": 10,
                    "width": "100%",
                  }
                }
                testID="stageSelectButton"
              >
                Forgiven
              </Text>
            </View>
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              How do you know each other?
            </Text>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="popupMenuButton"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#ECEEF2",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "color": "#3CC8E6",
                      "fontFamily": "SourceSansPro-Regular",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                      "lineHeight": 24,
                      "marginVertical": 10,
                      "width": "100%",
                    }
                  }
                >
                  Friend
                </Text>
                <SvgMock
                  color="#B4B6BA"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bottomButton"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#3CC8E6",
              "height": 60,
              "justifyContent": "center",
            },
            null,
            Array [
              Object {
                "alignItems": "center",
                "height": 48,
                "width": 650,
              },
              null,
            ],
            Object {
              "borderRadius": 50,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "bold",
                "letterSpacing": 1,
                "lineHeight": 18,
                "textAlign": "center",
                "textTransform": "uppercase",
              },
              Array [
                null,
              ],
            ]
          }
        >
          DONE
        </Text>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`savePerson update existing person without org updates users profile picture 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flex": 4,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
            ]
          }
        >
          Edit Profile
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="CloseButton"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                },
                null,
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "justifyContent": "center",
                  },
                  undefined,
                ],
                null,
              ]
            }
          >
            <SvgMock
              color="#ECEEF2"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "paddingHorizontal": 25,
            "paddingVertical": 50,
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "alignItems": "center",
                  },
                ]
              }
            >
              <ImagePicker
                circleOverlay={true}
                onSelectImage={[Function]}
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Array [
                        Object {
                          "borderRadius": 48,
                          "height": 96,
                          "width": 96,
                        },
                        Object {
                          "backgroundColor": "rgb(155, 101, 11)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                        },
                        Object {
                          "fontSize": 64,
                          "fontWeight": "300",
                        },
                      ]
                    }
                  >
                    e
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#3CC8E6",
                      "borderRadius": 50,
                      "height": 32,
                      "justifyContent": "center",
                      "left": 65,
                      "position": "absolute",
                      "top": 60,
                      "width": 32,
                    }
                  }
                >
                  <SvgMock
                    color="#ffffff"
                  />
                </View>
              </ImagePicker>
            </View>
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              First Name
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={true}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="First Name (Required)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="next"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="firstNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value="new name"
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            />
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              autoFocus={false}
              blurOnSubmit={false}
              editable={true}
              multiline={false}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Last Name (optional)"
              placeholderTextColor="#3CC8E6"
              rejectResponderTermination={true}
              returnKeyType="done"
              selectionColor="#3CC8E6"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#3CC8E6",
                    "borderBottomWidth": 1,
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "letterSpacing": 0.25,
                    "lineHeight": 24,
                    "paddingVertical": 5,
                  },
                  Object {
                    "borderBottomColor": "#ECEEF2",
                    "color": "#3CC8E6",
                  },
                ]
              }
              testID="lastNameInput"
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
            />
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                  "marginTop": 15,
                }
              }
            >
              Stage
            </Text>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 1,
                  "borderColor": "#ECEEF2",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Object {
                    "alignItems": "flex-start",
                    "color": "#3CC8E6",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "marginVertical": 10,
                    "width": "100%",
                  }
                }
                testID="stageSelectButton"
              >
                Forgiven
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bottomButton"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#3CC8E6",
              "height": 60,
              "justifyContent": "center",
            },
            null,
            Array [
              Object {
                "alignItems": "center",
                "height": 48,
                "width": 650,
              },
              null,
            ],
            Object {
              "borderRadius": 50,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "bold",
                "letterSpacing": 1,
                "lineHeight": 18,
                "textAlign": "center",
                "textTransform": "uppercase",
              },
              Array [
                null,
              ],
            ]
          }
        >
          DONE
        </Text>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;
