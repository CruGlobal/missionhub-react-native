// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly when me and no steps 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={
      <NullStateComponent
        content={null}
        descriptionText="Your Steps of Faith will appear here."
        headerText="STEPS OF FAITH"
        imageSource={
          Object {
            "testUri": "../../../assets/images/footprints.png",
          }
        }
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
      />
    }
    ListHeaderComponent={
      <React.Fragment>
        <ErrorNotice
          message="Error loading steps for this person"
          refetch={[Function]}
        />
        <ErrorNotice
          message="errorLoadingCompletedStepsForThisPerson"
        />
      </React.Fragment>
    }
    contentInset={
      Object {
        "bottom": 90,
      }
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
        "paddingTop": 16,
      }
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        style={
          Array [
            Array [
              Object {
                "backgroundColor": "#ffffff",
              },
              Object {
                "backgroundColor": undefined,
              },
            ],
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "testUri": "../../../assets/images/footprints.png",
            }
          }
          style={
            Object {
              "flexShrink": 1,
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#007398",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "normal",
              "lineHeight": 24,
              "paddingTop": 10,
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          STEPS OF FAITH
        </Text>
        <Text
          style={
            Object {
              "color": "#505256",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "normal",
              "lineHeight": 24,
              "paddingHorizontal": 80,
              "paddingVertical": 10,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Your Steps of Faith will appear here.
        </Text>
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#3CC8E6",
          "borderRadius": 50,
          "height": 48,
          "justifyContent": "center",
          "opacity": 1,
          "width": 650,
        }
      }
      testID="bottomButton"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "bold",
              "letterSpacing": 1,
              "lineHeight": 18,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "uppercase",
            },
            Array [
              undefined,
            ],
          ]
        }
      >
        ADD A STEP OF FAITH
      </Text>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`renders correctly when no steps 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={
      <NullStateComponent
        content={null}
        descriptionText="Your Steps of Faith with ben appear here."
        headerText="STEPS OF FAITH"
        imageSource={
          Object {
            "testUri": "../../../assets/images/footprints.png",
          }
        }
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
      />
    }
    ListHeaderComponent={
      <React.Fragment>
        <ErrorNotice
          message="Error loading steps for this person"
          refetch={[Function]}
        />
        <ErrorNotice
          message="errorLoadingCompletedStepsForThisPerson"
        />
      </React.Fragment>
    }
    contentInset={
      Object {
        "bottom": 90,
      }
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
        "paddingTop": 16,
      }
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        style={
          Array [
            Array [
              Object {
                "backgroundColor": "#ffffff",
              },
              Object {
                "backgroundColor": undefined,
              },
            ],
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "testUri": "../../../assets/images/footprints.png",
            }
          }
          style={
            Object {
              "flexShrink": 1,
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#007398",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "normal",
              "lineHeight": 24,
              "paddingTop": 10,
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          STEPS OF FAITH
        </Text>
        <Text
          style={
            Object {
              "color": "#505256",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "normal",
              "lineHeight": 24,
              "paddingHorizontal": 80,
              "paddingVertical": 10,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Your Steps of Faith with ben appear here.
        </Text>
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#3CC8E6",
          "borderRadius": 50,
          "height": 48,
          "justifyContent": "center",
          "opacity": 1,
          "width": 650,
        }
      }
      testID="bottomButton"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "bold",
              "letterSpacing": 1,
              "lineHeight": 18,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "uppercase",
            },
            Array [
              undefined,
            ],
          ]
        }
      >
        ADD A STEP OF FAITH
      </Text>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`renders correctly with completed steps 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={
      <NullStateComponent
        content={
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          >
            <Button
              onPress={[Function]}
              pill={true}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#B4B6BA",
                  "borderWidth": 1,
                  "height": 36,
                  "marginHorizontal": 20,
                  "marginVertical": 15,
                  "minWidth": 250,
                }
              }
              testID="completedStepsButton"
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "bold",
                    "letterSpacing": 1,
                    "lineHeight": 18,
                    "textAlign": "center",
                    "textAlignVertical": "center",
                    "textTransform": "uppercase",
                  }
                }
              >
                HIDE COMPLETED STEPS
              </Text>
            </Button>
          </View>
        }
        descriptionText="Your Steps of Faith with ben appear here."
        headerText="STEPS OF FAITH"
        imageSource={
          Object {
            "testUri": "../../../assets/images/footprints.png",
          }
        }
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
      />
    }
    ListHeaderComponent={
      <React.Fragment>
        <ErrorNotice
          message="Error loading steps for this person"
          refetch={[Function]}
        />
        <ErrorNotice
          message="errorLoadingCompletedStepsForThisPerson"
          refetch={[Function]}
        />
      </React.Fragment>
    }
    contentInset={
      Object {
        "bottom": 90,
      }
    }
    data={
      Array [
        Object {
          "data": Array [
            Object {
              "__typename": "Step",
              "community": Object {
                "__typename": "Community",
                "id": "7",
              },
              "completedAt": null,
              "id": "5",
              "receiver": Object {
                "__typename": "Person",
                "fullName": "Connor Kihn",
                "id": "6",
              },
              "reminder": Object {
                "__typename": "StepReminder",
                "id": "8",
                "nextOccurrenceAt": "2014-09-11T09:20:29.756Z",
                "reminderType": "once",
              },
              "stepType": "learn",
              "title": "Recusandae ut nulla quam ipsam nobis.",
            },
          ],
          "key": "active",
        },
        Object {
          "data": Array [
            Object {
              "__typename": "Step",
              "community": Object {
                "__typename": "Community",
                "id": "12",
              },
              "completedAt": null,
              "id": "10",
              "receiver": Object {
                "__typename": "Person",
                "fullName": "Precious Rau",
                "id": "11",
              },
              "reminder": Object {
                "__typename": "StepReminder",
                "id": "13",
                "nextOccurrenceAt": "2019-02-09T06:38:55.578Z",
                "reminderType": "once",
              },
              "stepType": "relate",
              "title": "Blanditiis natus et eos itaque velit.",
            },
          ],
          "key": "completed",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={
      Array [
        1,
        4,
      ]
    }
    style={
      Object {
        "flex": 1,
        "paddingTop": 16,
      }
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <StepItem
          showName={false}
          step={
            Object {
              "__typename": "Step",
              "community": Object {
                "__typename": "Community",
                "id": "7",
              },
              "completedAt": null,
              "id": "5",
              "receiver": Object {
                "__typename": "Person",
                "fullName": "Connor Kihn",
                "id": "6",
              },
              "reminder": Object {
                "__typename": "StepReminder",
                "id": "8",
                "nextOccurrenceAt": "2014-09-11T09:20:29.756Z",
                "reminderType": "once",
              },
              "stepType": "learn",
              "title": "Recusandae ut nulla quam ipsam nobis.",
            }
          }
          testID="stepItem"
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#B4B6BA",
                "borderRadius": 50,
                "borderWidth": 1,
                "height": 36,
                "justifyContent": "center",
                "margin": 0,
                "marginHorizontal": 20,
                "marginVertical": 15,
                "minWidth": 250,
                "opacity": 1,
                "paddingHorizontal": 20,
                "paddingVertical": 10,
              }
            }
            testID="completedStepsButton"
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                }
              }
            >
              HIDE COMPLETED STEPS
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <StepItem
          showName={false}
          step={
            Object {
              "__typename": "Step",
              "community": Object {
                "__typename": "Community",
                "id": "12",
              },
              "completedAt": null,
              "id": "10",
              "receiver": Object {
                "__typename": "Person",
                "fullName": "Precious Rau",
                "id": "11",
              },
              "reminder": Object {
                "__typename": "StepReminder",
                "id": "13",
                "nextOccurrenceAt": "2019-02-09T06:38:55.578Z",
                "reminderType": "once",
              },
              "stepType": "relate",
              "title": "Blanditiis natus et eos itaque velit.",
            }
          }
          testID="stepItem"
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#3CC8E6",
          "borderRadius": 50,
          "height": 48,
          "justifyContent": "center",
          "opacity": 1,
          "width": 650,
        }
      }
      testID="bottomButton"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "bold",
              "letterSpacing": 1,
              "lineHeight": 18,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "uppercase",
            },
            Array [
              undefined,
            ],
          ]
        }
      >
        ADD A STEP OF FAITH
      </Text>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`renders correctly with steps 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={
      <NullStateComponent
        content={null}
        descriptionText="Your Steps of Faith with ben appear here."
        headerText="STEPS OF FAITH"
        imageSource={
          Object {
            "testUri": "../../../assets/images/footprints.png",
          }
        }
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
      />
    }
    ListHeaderComponent={
      <React.Fragment>
        <ErrorNotice
          message="Error loading steps for this person"
          refetch={[Function]}
        />
        <ErrorNotice
          message="errorLoadingCompletedStepsForThisPerson"
        />
      </React.Fragment>
    }
    contentInset={
      Object {
        "bottom": 90,
      }
    }
    data={
      Array [
        Object {
          "data": Array [
            Object {
              "__typename": "Step",
              "community": Object {
                "__typename": "Community",
                "id": "7",
              },
              "completedAt": null,
              "id": "5",
              "receiver": Object {
                "__typename": "Person",
                "fullName": "Connor Kihn",
                "id": "6",
              },
              "reminder": Object {
                "__typename": "StepReminder",
                "id": "8",
                "nextOccurrenceAt": "2014-09-11T09:20:29.756Z",
                "reminderType": "once",
              },
              "stepType": "learn",
              "title": "Recusandae ut nulla quam ipsam nobis.",
            },
          ],
          "key": "active",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={
      Array [
        1,
      ]
    }
    style={
      Object {
        "flex": 1,
        "paddingTop": 16,
      }
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <StepItem
          showName={false}
          step={
            Object {
              "__typename": "Step",
              "community": Object {
                "__typename": "Community",
                "id": "7",
              },
              "completedAt": null,
              "id": "5",
              "receiver": Object {
                "__typename": "Person",
                "fullName": "Connor Kihn",
                "id": "6",
              },
              "reminder": Object {
                "__typename": "StepReminder",
                "id": "8",
                "nextOccurrenceAt": "2014-09-11T09:20:29.756Z",
                "reminderType": "once",
              },
              "stepType": "learn",
              "title": "Recusandae ut nulla quam ipsam nobis.",
            }
          }
          testID="stepItem"
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#3CC8E6",
          "borderRadius": 50,
          "height": 48,
          "justifyContent": "center",
          "opacity": 1,
          "width": 650,
        }
      }
      testID="bottomButton"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "bold",
              "letterSpacing": 1,
              "lineHeight": 18,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "uppercase",
            },
            Array [
              undefined,
            ],
          ]
        }
      >
        ADD A STEP OF FAITH
      </Text>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`should paginate 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -64,10 +64,32 @@
                  \\"reminderType\\": \\"once\\",
                },
                \\"stepType\\": \\"learn\\",
                \\"title\\": \\"Recusandae ut nulla quam ipsam nobis.\\",
              },
+             Object {
+               \\"__typename\\": \\"Step\\",
+               \\"community\\": Object {
+                 \\"__typename\\": \\"Community\\",
+                 \\"id\\": \\"12\\",
+               },
+               \\"completedAt\\": null,
+               \\"id\\": \\"10\\",
+               \\"receiver\\": Object {
+                 \\"__typename\\": \\"Person\\",
+                 \\"fullName\\": \\"Precious Rau\\",
+                 \\"id\\": \\"11\\",
+               },
+               \\"reminder\\": Object {
+                 \\"__typename\\": \\"StepReminder\\",
+                 \\"id\\": \\"13\\",
+                 \\"nextOccurrenceAt\\": \\"2019-02-09T06:38:55.578Z\\",
+                 \\"reminderType\\": \\"once\\",
+               },
+               \\"stepType\\": \\"relate\\",
+               \\"title\\": \\"Blanditiis natus et eos itaque velit.\\",
+             },
            ],
            \\"key\\": \\"active\\",
          },
        ]
      }
@@ -143,10 +165,43 @@
                  \\"nextOccurrenceAt\\": \\"2014-09-11T09:20:29.756Z\\",
                  \\"reminderType\\": \\"once\\",
                },
                \\"stepType\\": \\"learn\\",
                \\"title\\": \\"Recusandae ut nulla quam ipsam nobis.\\",
+             }
+           }
+           testID=\\"stepItem\\"
+         />
+       </View>
+       <View
+         onLayout={[Function onLayout]}
+         style={null}
+       >
+         <StepItem
+           showName={false}
+           step={
+             Object {
+               \\"__typename\\": \\"Step\\",
+               \\"community\\": Object {
+                 \\"__typename\\": \\"Community\\",
+                 \\"id\\": \\"12\\",
+               },
+               \\"completedAt\\": null,
+               \\"id\\": \\"10\\",
+               \\"receiver\\": Object {
+                 \\"__typename\\": \\"Person\\",
+                 \\"fullName\\": \\"Precious Rau\\",
+                 \\"id\\": \\"11\\",
+               },
+               \\"reminder\\": Object {
+                 \\"__typename\\": \\"StepReminder\\",
+                 \\"id\\": \\"13\\",
+                 \\"nextOccurrenceAt\\": \\"2019-02-09T06:38:55.578Z\\",
+                 \\"reminderType\\": \\"once\\",
+               },
+               \\"stepType\\": \\"relate\\",
+               \\"title\\": \\"Blanditiis natus et eos itaque velit.\\",
              }
            }
            testID=\\"stepItem\\"
          />
        </View>"
`;
