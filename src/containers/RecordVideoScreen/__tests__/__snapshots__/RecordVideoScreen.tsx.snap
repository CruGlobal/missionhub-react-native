// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`flips camera on pressing flip camera button 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -30,11 +30,11 @@
        Object {
          \\"alignItems\\": \\"center\\",
          \\"flex\\": 1,
        }
      }
-     type=\\"front\\"
+     type=\\"back\\"
    >
      <View
        style={
          Object {
            \\"flex\\": 1,"
`;

exports[`renders pre-recording correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#000000",
      "flex": 1,
    }
  }
>
  <RNCamera
    androidCameraPermissionOptions={
      Object {
        "buttonNegative": "Cancel",
        "buttonPositive": "Ok",
        "message": "We need your permission to use your camera",
        "title": "Permission to use camera",
      }
    }
    androidRecordAudioPermissionOptions={
      Object {
        "buttonNegative": "Cancel",
        "buttonPositive": "Ok",
        "message": "We need your permission to use your audio",
        "title": "Permission to use audio recording",
      }
    }
    flashMode="auto"
    onRecordingStart={[Function]}
    ratio="16:9"
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
      }
    }
    type="front"
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "space-between",
        }
      }
    >
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "alignItems": "flex-end",
            "justifyContent": "flex-end",
            "width": 750,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#00000066",
              "borderRadius": 18,
              "margin": 18,
              "opacity": 1,
            }
          }
          testID="CloseButton"
        >
          <SvgMock
            color="#ffffff"
            height={36}
            width={36}
          />
        </View>
      </RCTSafeAreaView>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "backgroundColor": "#00000066",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 32,
              "paddingVertical": 24,
              "width": 750,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "flex-start",
                "width": 40,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "color": "#ffffff",
                    "fontSize": 24,
                    "fontWeight": "300",
                    "lineHeight": 30,
                    "textAlign": "center",
                  },
                ]
              }
            >
              :15
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#ffffff",
                "borderRadius": 24,
                "borderWidth": 2,
                "height": 48,
                "justifyContent": "center",
                "opacity": 1,
                "width": 48,
              }
            }
            testID="RecordButton"
          >
            <View
              style={
                Object {
                  "backgroundColor": "#FF5532",
                  "borderRadius": 12,
                  "height": 24,
                  "opacity": 1,
                  "width": 24,
                }
              }
            />
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="FlipCameraButton"
          >
            <SvgMock />
          </View>
        </View>
      </RCTSafeAreaView>
    </View>
  </RNCamera>
</View>
`;

exports[`renders recording correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#000000",
      "flex": 1,
    }
  }
>
  <RNCamera
    androidCameraPermissionOptions={
      Object {
        "buttonNegative": "Cancel",
        "buttonPositive": "Ok",
        "message": "We need your permission to use your camera",
        "title": "Permission to use camera",
      }
    }
    androidRecordAudioPermissionOptions={
      Object {
        "buttonNegative": "Cancel",
        "buttonPositive": "Ok",
        "message": "We need your permission to use your audio",
        "title": "Permission to use audio recording",
      }
    }
    flashMode="auto"
    onRecordingStart={[Function]}
    ratio="16:9"
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
      }
    }
    type="front"
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "space-between",
        }
      }
    >
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "alignItems": "flex-end",
            "justifyContent": "flex-end",
            "width": 750,
          }
        }
      />
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "backgroundColor": "#00000066",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 32,
              "paddingVertical": 24,
              "width": 750,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "flex-start",
                "width": 40,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "color": "#ffffff",
                    "fontSize": 24,
                    "fontWeight": "300",
                    "lineHeight": 30,
                    "textAlign": "center",
                  },
                ]
              }
            >
              :15
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#ffffff",
                "borderRadius": 24,
                "borderWidth": 2,
                "height": 48,
                "justifyContent": "center",
                "opacity": 1,
                "width": 48,
              }
            }
            testID="RecordButton"
          >
            <View
              style={
                Object {
                  "backgroundColor": "#FF5532",
                  "borderRadius": 2,
                  "height": 20,
                  "opacity": 1,
                  "width": 20,
                }
              }
            />
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="FlipCameraButton"
          >
            <SvgMock />
          </View>
        </View>
      </RCTSafeAreaView>
    </View>
  </RNCamera>
</View>
`;
