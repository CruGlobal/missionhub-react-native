// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`handleChangeDate date passed in renders correctly 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <Header
    center={
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "fontSize": 16,
            "lineHeight": 24,
          }
        }
      >
        Set a Reminder
      </MyText>
    }
    left={
      <Connect(BackButton)
        iconStyle={
          Object {
            "color": "#B4B6BA",
          }
        }
      />
    }
    shadow={false}
    style={
      Object {
        "backgroundColor": "#ffffff",
      }
    }
  />
  <Component
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Component
      style={
        Object {
          "paddingBottom": 36,
          "paddingHorizontal": 48,
        }
      }
    >
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 12,
              "lineHeight": 16,
              "textAlignVertical": "center",
            },
            Object {
              "color": "#B4B6BA",
            },
          ]
        }
      >
        End Date
      </MyText>
      <Translate(MyDatePickerIOS)
        customStyles={Object {}}
        date="2018-09-01"
        disabled={false}
        duration={300}
        height={259}
        minDate={2018-09-01T00:00:00.000Z}
        mode="datetime"
        onDateChange={[Function]}
      >
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "borderBottomColor": "#B4B6BA",
                "borderBottomWidth": 1,
                "fontSize": 16,
                "lineHeight": 24,
                "paddingBottom": 6,
                "textAlignVertical": "center",
              },
              Object {
                "color": "#007398",
              },
            ]
          }
        >
          2018-09-01 00:00
        </MyText>
      </Translate(MyDatePickerIOS)>
    </Component>
    <Translate(ReminderRepeatButtons)
      onRecurrenceChange={[Function]}
    />
  </Component>
  <BottomButton
    disabled={false}
    onPress={[Function]}
    text="Done"
  />
</Component>
`;

exports[`render date in props renders correctly 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <Header
    center={
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "fontSize": 16,
            "lineHeight": 24,
          }
        }
      >
        Set a Reminder
      </MyText>
    }
    left={
      <Connect(BackButton)
        iconStyle={
          Object {
            "color": "#B4B6BA",
          }
        }
      />
    }
    shadow={false}
    style={
      Object {
        "backgroundColor": "#ffffff",
      }
    }
  />
  <Component
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Component
      style={
        Object {
          "paddingBottom": 36,
          "paddingHorizontal": 48,
        }
      }
    >
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 12,
              "lineHeight": 16,
              "textAlignVertical": "center",
            },
            Object {
              "color": "#B4B6BA",
            },
          ]
        }
      >
        End Date
      </MyText>
      <Translate(MyDatePickerIOS)
        customStyles={Object {}}
        date="2018-09-01"
        disabled={false}
        duration={300}
        height={259}
        minDate={2018-09-01T00:00:00.000Z}
        mode="datetime"
        onDateChange={[Function]}
      >
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "borderBottomColor": "#B4B6BA",
                "borderBottomWidth": 1,
                "fontSize": 16,
                "lineHeight": 24,
                "paddingBottom": 6,
                "textAlignVertical": "center",
              },
              Object {
                "color": "#007398",
              },
            ]
          }
        >
          2018-09-01 00:00
        </MyText>
      </Translate(MyDatePickerIOS)>
    </Component>
    <Translate(ReminderRepeatButtons)
      onRecurrenceChange={[Function]}
    />
  </Component>
  <BottomButton
    disabled={true}
    onPress={[Function]}
    text="Done"
  />
</Component>
`;

exports[`render no date in props renders correctly 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <Header
    center={
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "fontSize": 16,
            "lineHeight": 24,
          }
        }
      >
        Set a Reminder
      </MyText>
    }
    left={
      <Connect(BackButton)
        iconStyle={
          Object {
            "color": "#B4B6BA",
          }
        }
      />
    }
    shadow={false}
    style={
      Object {
        "backgroundColor": "#ffffff",
      }
    }
  />
  <Component
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Component
      style={
        Object {
          "paddingBottom": 36,
          "paddingHorizontal": 48,
        }
      }
    >
      <MyText
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 12,
              "lineHeight": 16,
              "textAlignVertical": "center",
            },
            null,
          ]
        }
      >
        End Date
      </MyText>
      <Translate(MyDatePickerIOS)
        customStyles={Object {}}
        date={null}
        disabled={false}
        duration={300}
        height={259}
        minDate={2018-09-01T00:00:00.000Z}
        mode="datetime"
        onDateChange={[Function]}
      >
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "borderBottomColor": "#B4B6BA",
                "borderBottomWidth": 1,
                "fontSize": 16,
                "lineHeight": 24,
                "paddingBottom": 6,
                "textAlignVertical": "center",
              },
              Object {
                "color": "#B4B6BA",
              },
            ]
          }
        >
          End Date (Required)
        </MyText>
      </Translate(MyDatePickerIOS)>
    </Component>
    <Translate(ReminderRepeatButtons)
      onRecurrenceChange={[Function]}
    />
  </Component>
  <BottomButton
    disabled={true}
    onPress={[Function]}
    text="Done"
  />
</Component>
`;
