// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mounts with custom props passes in custom flatlist props 1`] = `
<RCTScrollView
  bounces={false}
  contentContainerStyle={
    Object {
      "paddingBottom": 15,
    }
  }
  data={
    Array [
      Object {
        "content": "esse repellat quisquam",
        "contentUpdatedAt": "2020-01-13T13:58:47.783Z",
        "createdAt": "2010-09-19T03:58:30.504Z",
        "id": "1",
        "person": Object {
          "fullName": "Branson Gutkowski",
          "id": "2",
          "picture": "repellat ratione ut",
        },
      },
      Object {
        "content": "sunt qui amet",
        "contentUpdatedAt": "2016-07-31T16:52:49.085Z",
        "createdAt": "2016-02-28T03:01:08.353Z",
        "id": "3",
        "person": Object {
          "fullName": "Marcellus Hyatt",
          "id": "4",
          "picture": "recusandae ut nulla",
        },
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  listHeaderComponent={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flex": 1,
    }
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "paddingHorizontal": 30,
            "paddingVertical": 8,
          }
        }
      >
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "repellat ratione ut",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 18,
                "height": 36,
                "width": 36,
              },
              Object {
                "backgroundColor": "rgb(161, 161, 152)",
              },
              undefined,
            ]
          }
        />
        <View
          style={
            Object {
              "paddingLeft": 10,
              "paddingRight": 25,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "flex-end",
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="NameButton"
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    null,
                    Object {},
                    null,
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "paddingRight": 6,
                    }
                  }
                >
                  Branson Gutkowski
                </Text>
              </View>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {},
                ]
              }
              testID="Text"
            >
              September 19, 2010 @ 3:58 AM
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {
                    "paddingHorizontal": 2,
                  },
                ]
              }
            >
               • 
            </Text>
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                }
              }
            >
              Edited
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="popupMenuButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "backgroundColor": "#ECEEF2",
                    "borderRadius": 8,
                    "marginVertical": 5,
                    "paddingHorizontal": 13,
                    "paddingVertical": 8,
                  },
                  false,
                ]
              }
            >
              <Text>
                esse repellat quisquam
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "paddingHorizontal": 30,
            "paddingVertical": 8,
          }
        }
      >
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "recusandae ut nulla",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 18,
                "height": 36,
                "width": 36,
              },
              Object {
                "backgroundColor": "rgb(161, 105, 130)",
              },
              undefined,
            ]
          }
        />
        <View
          style={
            Object {
              "paddingLeft": 10,
              "paddingRight": 25,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "flex-end",
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="NameButton"
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    null,
                    Object {},
                    null,
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "paddingRight": 6,
                    }
                  }
                >
                  Marcellus Hyatt
                </Text>
              </View>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {},
                ]
              }
              testID="Text"
            >
              February 28, 2016 @ 3:01 AM
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {
                    "paddingHorizontal": 2,
                  },
                ]
              }
            >
               • 
            </Text>
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                }
              }
            >
              Edited
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="popupMenuButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "backgroundColor": "#ECEEF2",
                    "borderRadius": 8,
                    "marginVertical": 5,
                    "paddingHorizontal": 13,
                    "paddingVertical": 8,
                  },
                  false,
                ]
              }
            >
              <Text>
                sunt qui amet
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`with comments with next page renders correctly 1`] = `
<RCTScrollView
  bounces={false}
  contentContainerStyle={
    Object {
      "paddingBottom": 15,
    }
  }
  data={
    Array [
      Object {
        "content": "esse repellat quisquam",
        "contentUpdatedAt": "2020-01-13T13:58:47.783Z",
        "createdAt": "2010-09-19T03:58:30.504Z",
        "id": "1",
        "person": Object {
          "fullName": "Branson Gutkowski",
          "id": "2",
          "picture": "repellat ratione ut",
        },
      },
      Object {
        "content": "sunt qui amet",
        "contentUpdatedAt": "2016-07-31T16:52:49.085Z",
        "createdAt": "2016-02-28T03:01:08.353Z",
        "id": "3",
        "person": Object {
          "fullName": "Marcellus Hyatt",
          "id": "4",
          "picture": "recusandae ut nulla",
        },
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flex": 1,
    }
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "paddingHorizontal": 30,
            "paddingVertical": 8,
          }
        }
      >
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "repellat ratione ut",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 18,
                "height": 36,
                "width": 36,
              },
              Object {
                "backgroundColor": "rgb(161, 161, 152)",
              },
              undefined,
            ]
          }
        />
        <View
          style={
            Object {
              "paddingLeft": 10,
              "paddingRight": 25,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "flex-end",
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="NameButton"
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    null,
                    Object {},
                    null,
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "paddingRight": 6,
                    }
                  }
                >
                  Branson Gutkowski
                </Text>
              </View>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {},
                ]
              }
              testID="Text"
            >
              September 19, 2010 @ 3:58 AM
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {
                    "paddingHorizontal": 2,
                  },
                ]
              }
            >
               • 
            </Text>
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                }
              }
            >
              Edited
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="popupMenuButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "backgroundColor": "#ECEEF2",
                    "borderRadius": 8,
                    "marginVertical": 5,
                    "paddingHorizontal": 13,
                    "paddingVertical": 8,
                  },
                  false,
                ]
              }
            >
              <Text>
                esse repellat quisquam
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "paddingHorizontal": 30,
            "paddingVertical": 8,
          }
        }
      >
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "recusandae ut nulla",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 18,
                "height": 36,
                "width": 36,
              },
              Object {
                "backgroundColor": "rgb(161, 105, 130)",
              },
              undefined,
            ]
          }
        />
        <View
          style={
            Object {
              "paddingLeft": 10,
              "paddingRight": 25,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "flex-end",
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="NameButton"
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    null,
                    Object {},
                    null,
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "paddingRight": 6,
                    }
                  }
                >
                  Marcellus Hyatt
                </Text>
              </View>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {},
                ]
              }
              testID="Text"
            >
              February 28, 2016 @ 3:01 AM
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {
                    "paddingHorizontal": 2,
                  },
                ]
              }
            >
               • 
            </Text>
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                }
              }
            >
              Edited
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="popupMenuButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "backgroundColor": "#ECEEF2",
                    "borderRadius": 8,
                    "marginVertical": 5,
                    "paddingHorizontal": 13,
                    "paddingVertical": 8,
                  },
                  false,
                ]
              }
            >
              <Text>
                sunt qui amet
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`with comments with next page without next page renders correctly 1`] = `
<RCTScrollView
  bounces={false}
  contentContainerStyle={
    Object {
      "paddingBottom": 15,
    }
  }
  data={
    Array [
      Object {
        "content": "esse repellat quisquam",
        "contentUpdatedAt": "2020-01-13T13:58:47.783Z",
        "createdAt": "2010-09-19T03:58:30.504Z",
        "id": "1",
        "person": Object {
          "fullName": "Branson Gutkowski",
          "id": "2",
          "picture": "repellat ratione ut",
        },
      },
      Object {
        "content": "sunt qui amet",
        "contentUpdatedAt": "2016-07-31T16:52:49.085Z",
        "createdAt": "2016-02-28T03:01:08.353Z",
        "id": "3",
        "person": Object {
          "fullName": "Marcellus Hyatt",
          "id": "4",
          "picture": "recusandae ut nulla",
        },
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flex": 1,
    }
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "paddingHorizontal": 30,
            "paddingVertical": 8,
          }
        }
      >
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "repellat ratione ut",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 18,
                "height": 36,
                "width": 36,
              },
              Object {
                "backgroundColor": "rgb(161, 161, 152)",
              },
              undefined,
            ]
          }
        />
        <View
          style={
            Object {
              "paddingLeft": 10,
              "paddingRight": 25,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "flex-end",
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="NameButton"
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    null,
                    Object {},
                    null,
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "paddingRight": 6,
                    }
                  }
                >
                  Branson Gutkowski
                </Text>
              </View>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {},
                ]
              }
              testID="Text"
            >
              September 19, 2010 @ 3:58 AM
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {
                    "paddingHorizontal": 2,
                  },
                ]
              }
            >
               • 
            </Text>
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                }
              }
            >
              Edited
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="popupMenuButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "backgroundColor": "#ECEEF2",
                    "borderRadius": 8,
                    "marginVertical": 5,
                    "paddingHorizontal": 13,
                    "paddingVertical": 8,
                  },
                  false,
                ]
              }
            >
              <Text>
                esse repellat quisquam
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "paddingHorizontal": 30,
            "paddingVertical": 8,
          }
        }
      >
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "recusandae ut nulla",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 18,
                "height": 36,
                "width": 36,
              },
              Object {
                "backgroundColor": "rgb(161, 105, 130)",
              },
              undefined,
            ]
          }
        />
        <View
          style={
            Object {
              "paddingLeft": 10,
              "paddingRight": 25,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "flex-end",
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="NameButton"
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    null,
                    Object {},
                    null,
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "paddingRight": 6,
                    }
                  }
                >
                  Marcellus Hyatt
                </Text>
              </View>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {},
                ]
              }
              testID="Text"
            >
              February 28, 2016 @ 3:01 AM
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#B4B6BA",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 12,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 16,
                  },
                  Object {
                    "paddingHorizontal": 2,
                  },
                ]
              }
            >
               • 
            </Text>
            <Text
              style={
                Object {
                  "color": "#B4B6BA",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 16,
                }
              }
            >
              Edited
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="popupMenuButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "backgroundColor": "#ECEEF2",
                    "borderRadius": 8,
                    "marginVertical": 5,
                    "paddingHorizontal": 13,
                    "paddingVertical": 8,
                  },
                  false,
                ]
              }
            >
              <Text>
                sunt qui amet
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`with no comments renders correctly 1`] = `
<RCTScrollView
  bounces={false}
  contentContainerStyle={
    Object {
      "paddingBottom": 15,
    }
  }
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flex": 1,
    }
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View />
</RCTScrollView>
`;
