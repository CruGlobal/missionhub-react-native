// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders for me renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#66D9F0",
      "flex": 1,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../assets/images/landscapeStagesImage.png",
      }
    }
    style={
      Array [
        Object {
          "bottom": -100,
          "height": 275,
          "position": "absolute",
        },
        Object {
          "left": -150,
          "width": 2360,
        },
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Header
      left={<DeprecatedBackButton />}
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#007398",
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 18,
            "fontWeight": "500",
            "paddingBottom": 25,
            "paddingHorizontal": 30,
            "paddingTop": 45,
            "textAlign": "center",
            "width": 650,
          }
        }
      >
        Me, which stage best describes where you are on your journey?
      </Text>
      <RCTScrollView
        activeAnimationOptions={null}
        activeAnimationType="timing"
        activeSlideAlignment="center"
        activeSlideOffset={20}
        apparitionDelay={0}
        automaticallyAdjustContentInsets={false}
        autoplay={false}
        autoplayDelay={1000}
        autoplayInterval={3000}
        callbackOffsetMargin={5}
        containerCustomStyle={
          Object {
            "flex": 0,
            "flexGrow": 0,
            "height": 400,
          }
        }
        contentContainerCustomStyle={Object {}}
        contentContainerStyle={
          Array [
            Object {
              "paddingLeft": 72.5,
              "paddingRight": 72.5,
            },
            Object {},
          ]
        }
        data={
          Array [
            Object {
              "description": "Stage 1 description",
              "icon_url": "https://misisonhub.com",
              "id": "1",
              "localized_pathway_stages": Array [],
              "name": "Stage 1",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 2 description",
              "icon_url": "https://misisonhub.com",
              "id": "2",
              "localized_pathway_stages": Array [],
              "name": "Stage 2",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 3 description",
              "icon_url": "https://misisonhub.com",
              "id": "3",
              "localized_pathway_stages": Array [],
              "name": "Stage 3",
              "position": 1,
              "self_followup_description": "description",
            },
          ]
        }
        decelerationRate="fast"
        directionalLockEnabled={true}
        disableVirtualization={false}
        enableMomentum={false}
        enableSnap={true}
        firstItem={0}
        getItem={[Function]}
        getItemCount={[Function]}
        hasParallaxImages={false}
        horizontal={true}
        inactiveSlideOpacity={1}
        inactiveSlideScale={1}
        inactiveSlideShift={0}
        initialNumToRender={7}
        invertStickyHeaders={false}
        inverted={false}
        itemWidth={680}
        keyExtractor={[Function]}
        layout="default"
        lockScrollTimeoutDuration={1000}
        lockScrollWhileSnapping={false}
        loop={false}
        loopClonesPerSide={3}
        maxToRenderPerBatch={15}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onResponderRelease={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onSnapToItem={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        overScrollMode="never"
        pinchGestureEnabled={false}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEnabled={true}
        scrollEventThrottle={1}
        scrollsToTop={false}
        shouldOptimizeUpdates={true}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        slideStyle={Object {}}
        sliderWidth={825}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flex": 0,
            "flexDirection": "row",
            "flexGrow": 0,
            "height": 400,
            "opacity": 0,
            "width": 825,
          }
        }
        swipeThreshold={20}
        updateCellsBatchingPeriod={50}
        useScrollView={false}
        vertical={false}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={15}
      >
        <View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/uninterestedIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 1
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 1 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="I AM HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/curiousIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 2
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 2 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="I AM HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/forgivenIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 3
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 3 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="I AM HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`renders for me renders firstItem correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#66D9F0",
      "flex": 1,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../assets/images/landscapeStagesImage.png",
      }
    }
    style={
      Array [
        Object {
          "bottom": -100,
          "height": 275,
          "position": "absolute",
        },
        Object {
          "left": -150,
          "width": 2360,
        },
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Header
      left={<DeprecatedBackButton />}
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#007398",
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 18,
            "fontWeight": "500",
            "paddingBottom": 25,
            "paddingHorizontal": 30,
            "paddingTop": 45,
            "textAlign": "center",
            "width": 650,
          }
        }
      >
        Me, which stage best describes where you are on your journey?
      </Text>
      <RCTScrollView
        activeAnimationOptions={null}
        activeAnimationType="timing"
        activeSlideAlignment="center"
        activeSlideOffset={20}
        apparitionDelay={0}
        automaticallyAdjustContentInsets={false}
        autoplay={false}
        autoplayDelay={1000}
        autoplayInterval={3000}
        callbackOffsetMargin={5}
        containerCustomStyle={
          Object {
            "flex": 0,
            "flexGrow": 0,
            "height": 400,
          }
        }
        contentContainerCustomStyle={Object {}}
        contentContainerStyle={
          Array [
            Object {
              "paddingLeft": 72.5,
              "paddingRight": 72.5,
            },
            Object {},
          ]
        }
        data={
          Array [
            Object {
              "description": "Stage 1 description",
              "icon_url": "https://misisonhub.com",
              "id": "1",
              "localized_pathway_stages": Array [],
              "name": "Stage 1",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 2 description",
              "icon_url": "https://misisonhub.com",
              "id": "2",
              "localized_pathway_stages": Array [],
              "name": "Stage 2",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 3 description",
              "icon_url": "https://misisonhub.com",
              "id": "3",
              "localized_pathway_stages": Array [],
              "name": "Stage 3",
              "position": 1,
              "self_followup_description": "description",
            },
          ]
        }
        decelerationRate="fast"
        directionalLockEnabled={true}
        disableVirtualization={false}
        enableMomentum={false}
        enableSnap={true}
        firstItem={1}
        getItem={[Function]}
        getItemCount={[Function]}
        hasParallaxImages={false}
        horizontal={true}
        inactiveSlideOpacity={1}
        inactiveSlideScale={1}
        inactiveSlideShift={0}
        initialNumToRender={7}
        invertStickyHeaders={false}
        inverted={false}
        itemWidth={680}
        keyExtractor={[Function]}
        layout="default"
        lockScrollTimeoutDuration={1000}
        lockScrollWhileSnapping={false}
        loop={false}
        loopClonesPerSide={3}
        maxToRenderPerBatch={15}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onResponderRelease={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onSnapToItem={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        overScrollMode="never"
        pinchGestureEnabled={false}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEnabled={true}
        scrollEventThrottle={1}
        scrollsToTop={false}
        shouldOptimizeUpdates={true}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        slideStyle={Object {}}
        sliderWidth={825}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flex": 0,
            "flexDirection": "row",
            "flexGrow": 0,
            "height": 400,
            "opacity": 0,
            "width": 825,
          }
        }
        swipeThreshold={20}
        updateCellsBatchingPeriod={50}
        useScrollView={false}
        vertical={false}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={15}
      >
        <View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/uninterestedIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 1
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 1 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="I AM HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/curiousIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 2
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 2 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="STILL HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/forgivenIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 3
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 3 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="I AM HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`renders for other renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#66D9F0",
      "flex": 1,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../assets/images/landscapeStagesImage.png",
      }
    }
    style={
      Array [
        Object {
          "bottom": -100,
          "height": 275,
          "position": "absolute",
        },
        Object {
          "left": -150,
          "width": 2360,
        },
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Header
      left={<DeprecatedBackButton />}
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#007398",
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 18,
            "fontWeight": "500",
            "paddingBottom": 25,
            "paddingHorizontal": 30,
            "paddingTop": 45,
            "textAlign": "center",
            "width": 650,
          }
        }
      >
        Which stage best describes where Person is on their journey?
      </Text>
      <RCTScrollView
        activeAnimationOptions={null}
        activeAnimationType="timing"
        activeSlideAlignment="center"
        activeSlideOffset={20}
        apparitionDelay={0}
        automaticallyAdjustContentInsets={false}
        autoplay={false}
        autoplayDelay={1000}
        autoplayInterval={3000}
        callbackOffsetMargin={5}
        containerCustomStyle={
          Object {
            "flex": 0,
            "flexGrow": 0,
            "height": 400,
          }
        }
        contentContainerCustomStyle={Object {}}
        contentContainerStyle={
          Array [
            Object {
              "paddingLeft": 72.5,
              "paddingRight": 72.5,
            },
            Object {},
          ]
        }
        data={
          Array [
            Object {
              "description": "Stage 1 description",
              "icon_url": "https://misisonhub.com",
              "id": "1",
              "localized_pathway_stages": Array [],
              "name": "Stage 1",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 2 description",
              "icon_url": "https://misisonhub.com",
              "id": "2",
              "localized_pathway_stages": Array [],
              "name": "Stage 2",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 3 description",
              "icon_url": "https://misisonhub.com",
              "id": "3",
              "localized_pathway_stages": Array [],
              "name": "Stage 3",
              "position": 1,
              "self_followup_description": "description",
            },
          ]
        }
        decelerationRate="fast"
        directionalLockEnabled={true}
        disableVirtualization={false}
        enableMomentum={false}
        enableSnap={true}
        firstItem={0}
        getItem={[Function]}
        getItemCount={[Function]}
        hasParallaxImages={false}
        horizontal={true}
        inactiveSlideOpacity={1}
        inactiveSlideScale={1}
        inactiveSlideShift={0}
        initialNumToRender={7}
        invertStickyHeaders={false}
        inverted={false}
        itemWidth={680}
        keyExtractor={[Function]}
        layout="default"
        lockScrollTimeoutDuration={1000}
        lockScrollWhileSnapping={false}
        loop={false}
        loopClonesPerSide={3}
        maxToRenderPerBatch={15}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onResponderRelease={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onSnapToItem={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        overScrollMode="never"
        pinchGestureEnabled={false}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEnabled={true}
        scrollEventThrottle={1}
        scrollsToTop={false}
        shouldOptimizeUpdates={true}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        slideStyle={Object {}}
        sliderWidth={825}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flex": 0,
            "flexDirection": "row",
            "flexGrow": 0,
            "height": 400,
            "opacity": 0,
            "width": 825,
          }
        }
        swipeThreshold={20}
        updateCellsBatchingPeriod={50}
        useScrollView={false}
        vertical={false}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={15}
      >
        <View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/uninterestedIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 1
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 1 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/curiousIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 2
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 2 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/forgivenIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 3
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 3 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`renders for other renders firstItem correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#66D9F0",
      "flex": 1,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../assets/images/landscapeStagesImage.png",
      }
    }
    style={
      Array [
        Object {
          "bottom": -100,
          "height": 275,
          "position": "absolute",
        },
        Object {
          "left": -150,
          "width": 2360,
        },
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Header
      left={<DeprecatedBackButton />}
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#007398",
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 18,
            "fontWeight": "500",
            "paddingBottom": 25,
            "paddingHorizontal": 30,
            "paddingTop": 45,
            "textAlign": "center",
            "width": 650,
          }
        }
      >
        Which stage best describes where Person is on their journey?
      </Text>
      <RCTScrollView
        activeAnimationOptions={null}
        activeAnimationType="timing"
        activeSlideAlignment="center"
        activeSlideOffset={20}
        apparitionDelay={0}
        automaticallyAdjustContentInsets={false}
        autoplay={false}
        autoplayDelay={1000}
        autoplayInterval={3000}
        callbackOffsetMargin={5}
        containerCustomStyle={
          Object {
            "flex": 0,
            "flexGrow": 0,
            "height": 400,
          }
        }
        contentContainerCustomStyle={Object {}}
        contentContainerStyle={
          Array [
            Object {
              "paddingLeft": 72.5,
              "paddingRight": 72.5,
            },
            Object {},
          ]
        }
        data={
          Array [
            Object {
              "description": "Stage 1 description",
              "icon_url": "https://misisonhub.com",
              "id": "1",
              "localized_pathway_stages": Array [],
              "name": "Stage 1",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 2 description",
              "icon_url": "https://misisonhub.com",
              "id": "2",
              "localized_pathway_stages": Array [],
              "name": "Stage 2",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 3 description",
              "icon_url": "https://misisonhub.com",
              "id": "3",
              "localized_pathway_stages": Array [],
              "name": "Stage 3",
              "position": 1,
              "self_followup_description": "description",
            },
          ]
        }
        decelerationRate="fast"
        directionalLockEnabled={true}
        disableVirtualization={false}
        enableMomentum={false}
        enableSnap={true}
        firstItem={1}
        getItem={[Function]}
        getItemCount={[Function]}
        hasParallaxImages={false}
        horizontal={true}
        inactiveSlideOpacity={1}
        inactiveSlideScale={1}
        inactiveSlideShift={0}
        initialNumToRender={7}
        invertStickyHeaders={false}
        inverted={false}
        itemWidth={680}
        keyExtractor={[Function]}
        layout="default"
        lockScrollTimeoutDuration={1000}
        lockScrollWhileSnapping={false}
        loop={false}
        loopClonesPerSide={3}
        maxToRenderPerBatch={15}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onResponderRelease={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onSnapToItem={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        overScrollMode="never"
        pinchGestureEnabled={false}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEnabled={true}
        scrollEventThrottle={1}
        scrollsToTop={false}
        shouldOptimizeUpdates={true}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        slideStyle={Object {}}
        sliderWidth={825}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flex": 0,
            "flexDirection": "row",
            "flexGrow": 0,
            "height": 400,
            "opacity": 0,
            "width": 825,
          }
        }
        swipeThreshold={20}
        updateCellsBatchingPeriod={50}
        useScrollView={false}
        vertical={false}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={15}
      >
        <View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/uninterestedIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 1
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 1 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/curiousIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 2
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 2 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="STILL HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/forgivenIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 3
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 3 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`renders renders correctly with question text 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#66D9F0",
      "flex": 1,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../assets/images/landscapeStagesImage.png",
      }
    }
    style={
      Array [
        Object {
          "bottom": -100,
          "height": 275,
          "position": "absolute",
        },
        Object {
          "left": -150,
          "width": 2360,
        },
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Header
      left={<DeprecatedBackButton />}
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#007398",
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 18,
            "fontWeight": "500",
            "paddingBottom": 25,
            "paddingHorizontal": 30,
            "paddingTop": 45,
            "textAlign": "center",
            "width": 650,
          }
        }
      >
        Question?
      </Text>
      <RCTScrollView
        activeAnimationOptions={null}
        activeAnimationType="timing"
        activeSlideAlignment="center"
        activeSlideOffset={20}
        apparitionDelay={0}
        automaticallyAdjustContentInsets={false}
        autoplay={false}
        autoplayDelay={1000}
        autoplayInterval={3000}
        callbackOffsetMargin={5}
        containerCustomStyle={
          Object {
            "flex": 0,
            "flexGrow": 0,
            "height": 400,
          }
        }
        contentContainerCustomStyle={Object {}}
        contentContainerStyle={
          Array [
            Object {
              "paddingLeft": 72.5,
              "paddingRight": 72.5,
            },
            Object {},
          ]
        }
        data={
          Array [
            Object {
              "description": "Stage 1 description",
              "icon_url": "https://misisonhub.com",
              "id": "1",
              "localized_pathway_stages": Array [],
              "name": "Stage 1",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 2 description",
              "icon_url": "https://misisonhub.com",
              "id": "2",
              "localized_pathway_stages": Array [],
              "name": "Stage 2",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 3 description",
              "icon_url": "https://misisonhub.com",
              "id": "3",
              "localized_pathway_stages": Array [],
              "name": "Stage 3",
              "position": 1,
              "self_followup_description": "description",
            },
          ]
        }
        decelerationRate="fast"
        directionalLockEnabled={true}
        disableVirtualization={false}
        enableMomentum={false}
        enableSnap={true}
        firstItem={0}
        getItem={[Function]}
        getItemCount={[Function]}
        hasParallaxImages={false}
        horizontal={true}
        inactiveSlideOpacity={1}
        inactiveSlideScale={1}
        inactiveSlideShift={0}
        initialNumToRender={7}
        invertStickyHeaders={false}
        inverted={false}
        itemWidth={680}
        keyExtractor={[Function]}
        layout="default"
        lockScrollTimeoutDuration={1000}
        lockScrollWhileSnapping={false}
        loop={false}
        loopClonesPerSide={3}
        maxToRenderPerBatch={15}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onResponderRelease={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onSnapToItem={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        overScrollMode="never"
        pinchGestureEnabled={false}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEnabled={true}
        scrollEventThrottle={1}
        scrollsToTop={false}
        shouldOptimizeUpdates={true}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        slideStyle={Object {}}
        sliderWidth={825}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flex": 0,
            "flexDirection": "row",
            "flexGrow": 0,
            "height": 400,
            "opacity": 0,
            "width": 825,
          }
        }
        swipeThreshold={20}
        updateCellsBatchingPeriod={50}
        useScrollView={false}
        vertical={false}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={15}
      >
        <View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/uninterestedIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 1
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 1 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/curiousIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 2
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 2 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/forgivenIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 3
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 3 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`renders renders correctly without back button 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#66D9F0",
      "flex": 1,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../assets/images/landscapeStagesImage.png",
      }
    }
    style={
      Array [
        Object {
          "bottom": -100,
          "height": 275,
          "position": "absolute",
        },
        Object {
          "left": -150,
          "width": 2360,
        },
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Header
      left={<DeprecatedBackButton />}
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#007398",
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 18,
            "fontWeight": "500",
            "paddingBottom": 25,
            "paddingHorizontal": 30,
            "paddingTop": 45,
            "textAlign": "center",
            "width": 650,
          }
        }
      >
        Which stage best describes where Person is on their journey?
      </Text>
      <RCTScrollView
        activeAnimationOptions={null}
        activeAnimationType="timing"
        activeSlideAlignment="center"
        activeSlideOffset={20}
        apparitionDelay={0}
        automaticallyAdjustContentInsets={false}
        autoplay={false}
        autoplayDelay={1000}
        autoplayInterval={3000}
        callbackOffsetMargin={5}
        containerCustomStyle={
          Object {
            "flex": 0,
            "flexGrow": 0,
            "height": 400,
          }
        }
        contentContainerCustomStyle={Object {}}
        contentContainerStyle={
          Array [
            Object {
              "paddingLeft": 72.5,
              "paddingRight": 72.5,
            },
            Object {},
          ]
        }
        data={
          Array [
            Object {
              "description": "Stage 1 description",
              "icon_url": "https://misisonhub.com",
              "id": "1",
              "localized_pathway_stages": Array [],
              "name": "Stage 1",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 2 description",
              "icon_url": "https://misisonhub.com",
              "id": "2",
              "localized_pathway_stages": Array [],
              "name": "Stage 2",
              "position": 1,
              "self_followup_description": "description",
            },
            Object {
              "description": "Stage 3 description",
              "icon_url": "https://misisonhub.com",
              "id": "3",
              "localized_pathway_stages": Array [],
              "name": "Stage 3",
              "position": 1,
              "self_followup_description": "description",
            },
          ]
        }
        decelerationRate="fast"
        directionalLockEnabled={true}
        disableVirtualization={false}
        enableMomentum={false}
        enableSnap={true}
        firstItem={0}
        getItem={[Function]}
        getItemCount={[Function]}
        hasParallaxImages={false}
        horizontal={true}
        inactiveSlideOpacity={1}
        inactiveSlideScale={1}
        inactiveSlideShift={0}
        initialNumToRender={7}
        invertStickyHeaders={false}
        inverted={false}
        itemWidth={680}
        keyExtractor={[Function]}
        layout="default"
        lockScrollTimeoutDuration={1000}
        lockScrollWhileSnapping={false}
        loop={false}
        loopClonesPerSide={3}
        maxToRenderPerBatch={15}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onResponderRelease={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onSnapToItem={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        overScrollMode="never"
        pinchGestureEnabled={false}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEnabled={true}
        scrollEventThrottle={1}
        scrollsToTop={false}
        shouldOptimizeUpdates={true}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        slideStyle={Object {}}
        sliderWidth={825}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flex": 0,
            "flexDirection": "row",
            "flexGrow": 0,
            "height": 400,
            "opacity": 0,
            "width": 825,
          }
        }
        swipeThreshold={20}
        updateCellsBatchingPeriod={50}
        useScrollView={false}
        vertical={false}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={15}
      >
        <View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/uninterestedIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 1
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 1 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/curiousIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 2
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 2 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "width": 680,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "height": 320,
                    "justifyContent": "space-between",
                    "marginHorizontal": 25,
                    "width": 630,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingLeft": 15,
                      "paddingRight": 15,
                      "paddingTop": 30,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../assets/images/forgivenIcon.png",
                      }
                    }
                  />
                  <Text
                    header={true}
                    style={
                      Object {
                        "color": "#007398",
                        "fontSize": 42,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    stage 3
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "padding": 5,
                        "textAlign": "center",
                      }
                    }
                  >
                    Stage 3 description
                  </Text>
                </View>
                <Button
                  onPress={[Function]}
                  testID="stageSelectButton"
                  text="HERE"
                  type="primary"
                />
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`renders renders correctly without stages 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#66D9F0",
      "flex": 1,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../assets/images/landscapeStagesImage.png",
      }
    }
    style={
      Array [
        Object {
          "bottom": -100,
          "height": 275,
          "position": "absolute",
        },
        Object {
          "left": -150,
          "width": 395,
        },
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Header
      left={<DeprecatedBackButton />}
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#007398",
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 18,
            "fontWeight": "500",
            "paddingBottom": 25,
            "paddingHorizontal": 30,
            "paddingTop": 45,
            "textAlign": "center",
            "width": 650,
          }
        }
      >
        Which stage best describes where Person is on their journey?
      </Text>
      <RCTScrollView
        activeAnimationOptions={null}
        activeAnimationType="timing"
        activeSlideAlignment="center"
        activeSlideOffset={20}
        apparitionDelay={0}
        automaticallyAdjustContentInsets={false}
        autoplay={false}
        autoplayDelay={1000}
        autoplayInterval={3000}
        callbackOffsetMargin={5}
        containerCustomStyle={
          Object {
            "flex": 0,
            "flexGrow": 0,
            "height": 400,
          }
        }
        contentContainerCustomStyle={Object {}}
        contentContainerStyle={
          Array [
            Object {
              "paddingLeft": 72.5,
              "paddingRight": 72.5,
            },
            Object {},
          ]
        }
        data={Array []}
        decelerationRate="fast"
        directionalLockEnabled={true}
        disableVirtualization={false}
        enableMomentum={false}
        enableSnap={true}
        firstItem={0}
        getItem={[Function]}
        getItemCount={[Function]}
        hasParallaxImages={false}
        horizontal={true}
        inactiveSlideOpacity={1}
        inactiveSlideScale={1}
        inactiveSlideShift={0}
        initialNumToRender={7}
        invertStickyHeaders={false}
        inverted={false}
        itemWidth={680}
        keyExtractor={[Function]}
        layout="default"
        lockScrollTimeoutDuration={1000}
        lockScrollWhileSnapping={false}
        loop={false}
        loopClonesPerSide={3}
        maxToRenderPerBatch={15}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onResponderRelease={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onSnapToItem={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        overScrollMode="never"
        pinchGestureEnabled={false}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEnabled={true}
        scrollEventThrottle={1}
        scrollsToTop={false}
        shouldOptimizeUpdates={true}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        slideStyle={Object {}}
        sliderWidth={825}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flex": 0,
            "flexDirection": "row",
            "flexGrow": 0,
            "height": 400,
            "opacity": 0,
            "width": 825,
          }
        }
        swipeThreshold={20}
        updateCellsBatchingPeriod={50}
        useScrollView={false}
        vertical={false}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={15}
      >
        <View />
      </RCTScrollView>
    </View>
  </View>
</View>
`;
