// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CommunityHeader should render community details 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -33,11 +33,15 @@
            \\"height\\": 210,
          }
        }
      >
        <Image
-         source={Object {}}
+         source={
+           Object {
+             \\"uri\\": \\"recusandae alias consequuntur\\",
+           }
+         }
          style={
            Array [
              Object {
                \\"bottom\\": 0,
                \\"left\\": 0,
@@ -206,11 +210,11 @@
                \\"textAlignVertical\\": \\"center\\",
                \\"textTransform\\": \\"none\\",
              }
            }
          >
-           -
+           Inverse zero tolerance paradigm
          </Text>
          <View
            style={
              Array [
                Object {},
@@ -269,11 +273,11 @@
                      \\"textTransform\\": \\"none\\",
                    },
                  ]
                }
              >
-               0 Members
+               30233 Members
              </Text>
            </View>
          </View>
        </View>
      </View>"
`;

exports[`CommunityHeader should render global community details 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -242,11 +242,11 @@
                      \\"textTransform\\": \\"none\\",
                    },
                  ]
                }
              >
-               0 Members
+               41702 Members
              </Text>
            </View>
          </View>
        </View>
      </View>"
`;

exports[`CommunityHeader should render global community loading 1`] = `
<View
  hideHeader={[Function]}
  interpolatedHeaderTranslation={[Function]}
  showHeader={[Function]}
  style={
    Object {
      "height": 260,
      "left": 0,
      "paddingTop": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
      "transform": Array [
        Object {
          "translateY": 0,
        },
      ],
      "zIndex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#ECEEF2",
      }
    }
  >
    <View
      accessibilityIgnoresInvertColors={true}
      style={
        Object {
          "height": 210,
        }
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../assets/images/globalCommunityImage.png",
          }
        }
        style={
          Array [
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "height": 210,
              "width": undefined,
            },
            undefined,
          ]
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "#000000",
            "bottom": 0,
            "left": 0,
            "opacity": 0.15,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "backgroundColor": "transparent",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "height": 56,
                "paddingTop": 0,
              },
              undefined,
              null,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "paddingLeft": 5,
                },
                Object {
                  "alignItems": "flex-start",
                  "flex": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "flex-start",
                  "alignSelf": "flex-start",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "opacity": 1,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                }
              }
              testID="BackButton"
            >
              <SvgMock
                color="#ffffff"
              />
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "paddingRight": 5,
                },
                Object {
                  "alignItems": "flex-end",
                  "flex": 1,
                  "justifyContent": "center",
                },
              ]
            }
          />
        </View>
      </RCTSafeAreaView>
      <View
        style={
          Array [
            Object {
              "paddingLeft": 25,
              "paddingRight": 100,
            },
            Object {
              "flex": 1,
              "justifyContent": "space-around",
            },
          ]
        }
      >
        <Text
          numberOfLines={2}
          style={
            Object {
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Light",
              "fontSize": 24,
              "fontStyle": "normal",
              "lineHeight": 30,
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          MissionHub
        </Text>
        <View
          style={
            Array [
              Object {},
              Object {
                "alignItems": "flex-start",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#ffffff",
                "borderRadius": 50,
                "borderWidth": 1,
                "marginBottom": 10,
                "opacity": 1,
                "paddingHorizontal": 12,
                "paddingVertical": 3,
              }
            }
            testID="communityMembersButton"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Bold",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "letterSpacing": 1,
                    "lineHeight": 18,
                    "textAlign": "center",
                    "textAlignVertical": "center",
                    "textTransform": "uppercase",
                  },
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                ]
              }
            >
              0 Members
            </Text>
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      bounces={false}
      contentContainerStyle={
        Object {
          "backgroundColor": "#ffffff",
          "height": 50,
          "minWidth": "100%",
        }
      }
      horizontal={true}
      showsHorizontalScrollIndicator={false}
    >
      <View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
              "minWidth": 100,
              "opacity": 1,
              "paddingHorizontal": 12,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Feed
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
              "minWidth": 100,
              "opacity": 1,
              "paddingHorizontal": 12,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Challenges
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
              "minWidth": 100,
              "opacity": 1,
              "paddingHorizontal": 12,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Impact
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`CommunityHeader should render loading state 1`] = `
<View
  hideHeader={[Function]}
  interpolatedHeaderTranslation={[Function]}
  showHeader={[Function]}
  style={
    Object {
      "height": 260,
      "left": 0,
      "paddingTop": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
      "transform": Array [
        Object {
          "translateY": 0,
        },
      ],
      "zIndex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#ECEEF2",
      }
    }
  >
    <View
      accessibilityIgnoresInvertColors={true}
      style={
        Object {
          "height": 210,
        }
      }
    >
      <Image
        source={Object {}}
        style={
          Array [
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "height": 210,
              "width": undefined,
            },
            undefined,
          ]
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "#000000",
            "bottom": 0,
            "left": 0,
            "opacity": 0.15,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "backgroundColor": "transparent",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
                "height": 56,
                "paddingTop": 0,
              },
              undefined,
              null,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "paddingLeft": 5,
                },
                Object {
                  "alignItems": "flex-start",
                  "flex": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "flex-start",
                  "alignSelf": "flex-start",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "opacity": 1,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                }
              }
              testID="BackButton"
            >
              <SvgMock
                color="#ffffff"
              />
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "paddingRight": 5,
                },
                Object {
                  "alignItems": "flex-end",
                  "flex": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "opacity": 1,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                }
              }
              testID="communityProfileButton"
            >
              <SvgMock
                color="#ffffff"
              />
            </View>
          </View>
        </View>
      </RCTSafeAreaView>
      <View
        style={
          Array [
            Object {
              "paddingLeft": 25,
              "paddingRight": 100,
            },
            Object {
              "flex": 1,
              "justifyContent": "space-around",
            },
          ]
        }
      >
        <Text
          numberOfLines={2}
          style={
            Object {
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Light",
              "fontSize": 24,
              "fontStyle": "normal",
              "lineHeight": 30,
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          -
        </Text>
        <View
          style={
            Array [
              Object {},
              Object {
                "alignItems": "flex-start",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#ffffff",
                "borderRadius": 50,
                "borderWidth": 1,
                "marginBottom": 10,
                "opacity": 1,
                "paddingHorizontal": 12,
                "paddingVertical": 3,
              }
            }
            testID="communityMembersButton"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Bold",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "letterSpacing": 1,
                    "lineHeight": 18,
                    "textAlign": "center",
                    "textAlignVertical": "center",
                    "textTransform": "uppercase",
                  },
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                ]
              }
            >
              0 Members
            </Text>
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      bounces={false}
      contentContainerStyle={
        Object {
          "backgroundColor": "#ffffff",
          "height": 50,
          "minWidth": "100%",
        }
      }
      horizontal={true}
      showsHorizontalScrollIndicator={false}
    >
      <View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
              "minWidth": 100,
              "opacity": 1,
              "paddingHorizontal": 12,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Feed
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
              "minWidth": 100,
              "opacity": 1,
              "paddingHorizontal": 12,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Challenges
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
              "minWidth": 100,
              "opacity": 1,
              "paddingHorizontal": 12,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Impact
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
