// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "padding": 14,
          "paddingBottom": 5,
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="NameButton"
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "color": "#007398",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "fontWeight": "bold",
                        "lineHeight": 20,
                      },
                    ],
                  ]
                }
              >
                Hayden Zieme
              </Text>
            </View>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Array [
                  Object {
                    "color": "#B2B0B2",
                    "fontSize": 12,
                  },
                  Object {},
                ],
              ]
            }
            testID="Text"
          >
            September 19, 2010 @ 3:58 AM
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "width": 60,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 14,
                    "lineHeight": 20,
                    "paddingRight": 10,
                    "textAlign": "right",
                    "width": 30,
                  },
                ]
              }
            />
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="LikeIconButton"
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    null,
                    Object {
                      "height": 24,
                      "width": 24,
                    },
                    null,
                  ]
                }
              >
                <SvgMock
                  color="#505256"
                />
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "width": 60,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 14,
                    "lineHeight": 20,
                    "paddingRight": 10,
                    "textAlign": "right",
                    "width": 30,
                  },
                ]
              }
            >
              72032
            </Text>
            <SvgMock />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              Object {
                "marginLeft": 10,
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  null,
                  Object {},
                  null,
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "fontSize": 18,
                      },
                      Array [
                        Object {
                          "margin": 10,
                        },
                        Object {
                          "color": "#000000",
                        },
                      ],
                    ],
                    Object {
                      "fontFamily": "icomoon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                Ó§ç
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "#505256",
        "flex": 1,
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../assets/images/Trailss.png",
        }
      }
      style={
        Object {
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <Image
      source={
        Object {
          "testUri": "../../../assets/images/TrailGrey.png",
        }
      }
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
        }
      }
    />
    <RCTScrollView
      ListHeaderComponent={[Function]}
      bounces={false}
      contentContainerStyle={
        Object {
          "paddingBottom": 15,
        }
      }
      data={
        Array [
          Object {
            "content": "some comment",
            "created_at": "2019-04-11T13:51:49.888",
            "id": "comment1",
            "person": Object {
              "first_name": "Person",
              "last_name": "1",
            },
            "updated_at": "2019-04-11T13:51:49.888",
          },
          Object {
            "content": "some comment",
            "created_at": "2019-04-11T13:51:49.888",
            "id": "comment2",
            "person": Object {
              "first_name": "Person",
              "last_name": "2",
            },
            "updated_at": "2019-04-11T13:51:49.888",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <MyRefreshControl
          onRefresh={[Function]}
          refreshing={false}
          testID="RefreshControl"
        />
      }
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "flex": 1,
        }
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Object {
                "paddingHorizontal": 20,
                "paddingTop": 12,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "paddingVertical": 8,
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="ANNOUNCEMENTButton"
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 0,
                        "borderWidth": 0,
                        "height": 60,
                        "justifyContent": "center",
                        "margin": 0,
                        "paddingHorizontal": 20,
                        "paddingVertical": 10,
                      },
                      null,
                      Array [
                        Object {
                          "alignItems": "center",
                          "borderRadius": 18,
                          "flexDirection": "row",
                          "height": 36,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 20,
                          "paddingVertical": 10,
                        },
                        Object {
                          "backgroundColor": "#505256",
                        },
                        null,
                        null,
                      ],
                      Object {
                        "borderRadius": 50,
                      },
                    ]
                  }
                >
                  <SvgMock
                    color="#ffffff"
                    height={20}
                    style={
                      Object {
                        "marginLeft": -10,
                        "marginRight": 10,
                      }
                    }
                    width={20}
                  />
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#505256",
                        },
                        Object {
                          "fontFamily": "SourceSansPro-Regular",
                        },
                        Object {
                          "color": "#ffffff",
                          "fontSize": 14,
                          "lineHeight": 20,
                        },
                      ]
                    }
                  >
                    Announcement
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "paddingVertical": 8,
                }
              }
            >
              <Image
                resizeMode="cover"
                source={
                  Object {
                    "uri": "quam ipsam nobis",
                  }
                }
                style={
                  Array [
                    Object {
                      "borderRadius": 24,
                      "height": 48,
                      "width": 48,
                    },
                    Object {
                      "backgroundColor": "rgb(123, 167, 115)",
                    },
                    undefined,
                  ]
                }
              />
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "paddingHorizontal": 8,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#007398",
                          "fontSize": 16,
                        },
                        Object {
                          "color": "#505256",
                          "fontSize": 16,
                          "fontWeight": "bold",
                          "lineHeight": 20,
                        },
                      ],
                    ]
                  }
                >
                  Hayden Zieme
                </Text>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Array [
                        Object {
                          "color": "#B2B0B2",
                          "fontSize": 12,
                        },
                        Object {
                          "color": "#B4B6BA",
                          "fontSize": 12,
                          "lineHeight": 16,
                        },
                      ],
                    ]
                  }
                  testID="Text"
                >
                  3:58 AM
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "white",
                "padding": 14,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 14,
                    "justifyContent": "flex-start",
                    "lineHeight": 18,
                  },
                ]
              }
            >
              ut sunt qui
            </Text>
          </View>
          <Image
            resizeMode="contain"
            source={
              Object {
                "uri": "libero qui recusandae",
              }
            }
            style={
              Object {
                "aspectRatio": 2,
              }
            }
          />
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#ECEEF2",
                  "height": 1,
                },
                undefined,
              ]
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "paddingHorizontal": 20,
                "paddingVertical": 16,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "justifyContent": "flex-end",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "flex-end",
                      "width": 60,
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#505256",
                        },
                        Object {
                          "fontFamily": "SourceSansPro-Regular",
                        },
                        Object {
                          "fontSize": 14,
                          "lineHeight": 20,
                          "paddingRight": 10,
                          "textAlign": "right",
                          "width": 30,
                        },
                      ]
                    }
                  />
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID="LikeIconButton"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                          },
                          null,
                          Object {
                            "height": 24,
                            "width": 24,
                          },
                          null,
                        ]
                      }
                    >
                      <SvgMock
                        color="#505256"
                      />
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "flex-end",
                      "width": 60,
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#505256",
                        },
                        Object {
                          "fontFamily": "SourceSansPro-Regular",
                        },
                        Object {
                          "fontSize": 14,
                          "lineHeight": 20,
                          "paddingRight": 10,
                          "textAlign": "right",
                          "width": 30,
                        },
                      ]
                    }
                  >
                    72032
                  </Text>
                  <SvgMock />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <CommentItem
            item={
              Object {
                "content": "some comment",
                "created_at": "2019-04-11T13:51:49.888",
                "id": "comment1",
                "person": Object {
                  "first_name": "Person",
                  "last_name": "1",
                },
                "updated_at": "2019-04-11T13:51:49.888",
              }
            }
            menuActions={
              Array [
                Object {
                  "onPress": [Function],
                  "text": "Report to Owner",
                },
              ]
            }
            organization={
              Object {
                "id": "24234234",
                "name": "Community",
              }
            }
            testID="CommentItem"
          />
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <CommentItem
            item={
              Object {
                "content": "some comment",
                "created_at": "2019-04-11T13:51:49.888",
                "id": "comment2",
                "person": Object {
                  "first_name": "Person",
                  "last_name": "2",
                },
                "updated_at": "2019-04-11T13:51:49.888",
              }
            }
            menuActions={
              Array [
                Object {
                  "onPress": [Function],
                  "text": "Report to Owner",
                },
              ]
            }
            organization={
              Object {
                "id": "24234234",
                "name": "Community",
              }
            }
            testID="CommentItem"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderTopColor": "#B2B0B2",
          "borderTopWidth": 1,
          "flexDirection": "column",
          "width": 750,
        },
        Object {
          "backgroundColor": "#C5C7CB",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "marginHorizontal": 20,
          "marginVertical": 10,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "#ffffff",
            "borderColor": "#B2B0B2",
            "borderRadius": 20,
            "borderWidth": 1,
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingLeft": 13,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            autoCorrect={true}
            autoFocus={false}
            blurOnSubmit={true}
            multiline={false}
            onChangeText={[Function]}
            placeholder="Write a comment..."
            placeholderTextColor="#B2B0B2"
            rejectResponderTermination={true}
            returnKeyType="done"
            selectionColor="#005A7F"
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "#52C5DC",
                  "borderBottomWidth": 1,
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 16,
                  "letterSpacing": 0.25,
                  "paddingVertical": 5,
                },
                Object {
                  "borderBottomWidth": 0,
                  "color": "#4E4C4E",
                  "flex": 1,
                  "fontSize": 16,
                  "paddingLeft": 5,
                  "paddingVertical": 7,
                },
              ]
            }
            underlineColorAndroid="rgba(0,0,0,0)"
            value=""
          />
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;
