// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`reported comment screen render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FF5532",
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#FF5532",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flex": 4,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 24,
              },
            ]
          }
        >
          Reported Comment
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="CloseButton"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                },
                null,
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "justifyContent": "center",
                  },
                  undefined,
                ],
                null,
              ]
            }
          >
            <SvgMock
              color="#ffffff"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <RCTScrollView
    contentInset={
      Object {
        "bottom": 120,
      }
    }
    style={
      Object {
        "backgroundColor": "#ECEEF2",
        "height": "100%",
      }
    }
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`reported post screen render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FF5532",
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#FF5532",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flex": 4,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 20,
              },
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "lineHeight": 24,
              },
            ]
          }
        >
          Reported Comment
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="CloseButton"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 0,
                  "borderWidth": 0,
                  "height": 60,
                  "justifyContent": "center",
                  "margin": 0,
                  "paddingHorizontal": 20,
                  "paddingVertical": 10,
                },
                null,
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "justifyContent": "center",
                  },
                  undefined,
                ],
                null,
              ]
            }
          >
            <SvgMock
              color="#ffffff"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <RCTScrollView
    contentInset={
      Object {
        "bottom": 120,
      }
    }
    style={
      Object {
        "backgroundColor": "#ECEEF2",
        "height": "100%",
      }
    }
  >
    <View />
  </RCTScrollView>
</View>
`;
