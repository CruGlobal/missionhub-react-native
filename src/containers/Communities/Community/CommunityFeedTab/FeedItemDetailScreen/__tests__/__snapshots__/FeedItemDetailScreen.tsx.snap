// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`edit/delete post delete for admin and not my post 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "height": 56,
              "paddingTop": 0,
            },
            undefined,
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "paddingLeft": 5,
              },
              Object {
                "alignItems": "flex-start",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="BackButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "borderWidth": 0,
                    "height": 60,
                    "justifyContent": "center",
                    "margin": 0,
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                  },
                  null,
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              <SvgMock
                color="#B4B6BA"
              />
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="CommunityNameHeader"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 14,
                    "lineHeight": 20,
                  },
                ]
              }
            >
              Operative static Graphical User Interface
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "paddingRight": 5,
              },
              Object {
                "alignItems": "flex-end",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        />
      </View>
    </RCTSafeAreaView>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#ECEEF2",
            "height": 1,
          },
          undefined,
        ]
      }
    />
  </RCTSafeAreaView>
  <RCTScrollView
    ListFooterComponent={null}
    ListHeaderComponent={[Function]}
    bounces={false}
    contentContainerStyle={
      Object {
        "paddingBottom": 15,
      }
    }
    data={
      Array [
        Object {
          "__typename": "FeedItemComment",
          "content": "sed libero repudiandae",
          "contentUpdatedAt": "2015-06-20T04:51:30.834Z",
          "createdAt": "2015-11-12T20:05:56.328Z",
          "id": "3",
          "person": Object {
            "__typename": "Person",
            "fullName": "Keaton Keeling",
            "id": "4",
            "picture": "eos itaque velit",
          },
        },
        Object {
          "__typename": "FeedItemComment",
          "content": "omnis et porro",
          "contentUpdatedAt": "2012-01-05T22:26:33.583Z",
          "createdAt": "2010-05-11T20:17:10.674Z",
          "id": "5",
          "person": Object {
            "__typename": "Person",
            "fullName": "Elza Bosco",
            "id": "6",
            "picture": "eligendi occaecati debitis",
          },
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={false}
        testID="RefreshControl"
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingTop": 12,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "paddingVertical": 8,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 18,
                    "flexDirection": "row",
                    "height": 36,
                    "justifyContent": "space-between",
                    "paddingLeft": 20,
                    "paddingRight": 16,
                    "paddingVertical": 0,
                  },
                  Object {
                    "backgroundColor": "#7076B5",
                  },
                  null,
                  null,
                ]
              }
              testID="STORYLabel"
            >
              <SvgMock
                color="#ffffff"
                height={20}
                style={
                  Array [
                    Object {
                      "marginLeft": -10,
                      "marginRight": 10,
                    },
                    undefined,
                  ]
                }
                width={20}
              />
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Object {
                      "color": "#ffffff",
                      "fontSize": 14,
                      "lineHeight": 20,
                    },
                  ]
                }
              >
                God Story
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-end",
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "paddingLeft": 30,
                    "paddingRight": 12,
                    "paddingVertical": 5,
                  }
                }
                testID="popupMenuButton"
              >
                <SvgMock
                  color="#505256"
                />
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "paddingVertical": 8,
              }
            }
          >
            <Image
              resizeMode="cover"
              source={
                Object {
                  "uri": "libero qui recusandae",
                }
              }
              style={
                Array [
                  Object {
                    "borderRadius": 24,
                    "height": 48,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": "rgb(155, 123, 152)",
                  },
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "paddingHorizontal": 8,
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={2}
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "color": "#007398",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "fontWeight": "bold",
                        "lineHeight": 20,
                      },
                    ],
                  ]
                }
              >
                dignissimos debitis incidunt
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "color": "#B2B0B2",
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#B4B6BA",
                        "fontSize": 12,
                        "lineHeight": 16,
                      },
                    ],
                  ]
                }
                testID="Text"
              >
                November 13, 2015 @ 8:52 PM
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingVertical": 8,
            }
          }
        >
          <View
            style={Object {}}
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "justifyContent": "flex-start",
                  "marginBottom": 10,
                  "marginTop": 10,
                  "marginVertical": 10,
                  "width": "100%",
                }
              }
            >
              <Text
                style={Object {}}
              >
                <Text
                  style={
                    Array [
                      Object {},
                      Object {
                        "color": "#505256",
                        "fontFamily": "SourceSansPro-Regular",
                        "fontSize": 14,
                        "lineHeight": 18,
                      },
                    ]
                  }
                >
                  alias consequuntur corporis
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "sunt qui amet",
            }
          }
          style={
            Object {
              "aspectRatio": 1.3333333333333333,
            }
          }
        />
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "height": 1,
              },
              undefined,
            ]
          }
        />
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "opacity": 1,
              "paddingHorizontal": 20,
              "paddingVertical": 16,
            }
          }
          testID="FooterTouchable"
        >
          <View
            style={
              Object {
                "flex": 1,
                "justifyContent": "flex-end",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-end",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": 80,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Object {
                        "fontSize": 14,
                        "lineHeight": 20,
                        "paddingRight": 10,
                        "textAlign": "right",
                        "width": 30,
                      },
                    ]
                  }
                />
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="LikeIconButton"
                >
                  <View
                    hitSlop={
                      Object {
                        "bottom": 25,
                        "left": 25,
                        "right": 25,
                        "top": 25,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        null,
                        Object {
                          "height": 24,
                          "marginRight": 20,
                          "width": 24,
                        },
                        null,
                      ]
                    }
                  >
                    <SvgMock
                      color="#FF5532"
                      fill="#FF5532"
                    />
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": 40,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Object {
                        "fontSize": 14,
                        "lineHeight": 20,
                        "paddingRight": 10,
                        "textAlign": "right",
                        "width": 30,
                      },
                    ]
                  }
                >
                  2738
                </Text>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="CommentIconButton"
                >
                  <View
                    hitSlop={
                      Object {
                        "bottom": 25,
                        "left": 25,
                        "right": 25,
                        "top": 25,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        null,
                        Object {},
                        null,
                      ]
                    }
                  >
                    <SvgMock />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "height": 1,
              },
              Object {
                "marginBottom": 6,
              },
            ]
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <CommentItem
          comment={
            Object {
              "__typename": "FeedItemComment",
              "content": "sed libero repudiandae",
              "contentUpdatedAt": "2015-06-20T04:51:30.834Z",
              "createdAt": "2015-11-12T20:05:56.328Z",
              "id": "3",
              "person": Object {
                "__typename": "Person",
                "fullName": "Keaton Keeling",
                "id": "4",
                "picture": "eos itaque velit",
              },
            }
          }
          isEditing={false}
          menuActions={
            Array [
              Object {
                "onPress": [Function],
                "text": "Report to Owner",
              },
            ]
          }
          testID="CommentItem"
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <CommentItem
          comment={
            Object {
              "__typename": "FeedItemComment",
              "content": "omnis et porro",
              "contentUpdatedAt": "2012-01-05T22:26:33.583Z",
              "createdAt": "2010-05-11T20:17:10.674Z",
              "id": "5",
              "person": Object {
                "__typename": "Person",
                "fullName": "Elza Bosco",
                "id": "6",
                "picture": "eligendi occaecati debitis",
              },
            }
          }
          isEditing={false}
          menuActions={
            Array [
              Object {
                "onPress": [Function],
                "text": "Report to Owner",
              },
            ]
          }
          testID="CommentItem"
        />
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "marginHorizontal": 16,
        "marginVertical": 12,
      }
    }
  >
    <Image
      resizeMode="cover"
      source={
        Object {
          "uri": "eum eaque enim",
        }
      }
      style={
        Array [
          Object {
            "borderRadius": 18,
            "height": 36,
            "width": 36,
          },
          Object {
            "backgroundColor": "rgb(135, 155, 67)",
          },
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ECEEF2",
          "borderRadius": 8,
          "flex": 1,
          "marginHorizontal": 8,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={true}
        autoFocus={false}
        blurOnSubmit={true}
        multiline={false}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Add a comment..."
        placeholderTextColor="#B2B0B2"
        rejectResponderTermination={true}
        returnKeyType="done"
        selectionColor="#005A7F"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#52C5DC",
              "borderBottomWidth": 1,
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "letterSpacing": 0.25,
              "paddingVertical": 5,
            },
            Object {
              "borderBottomWidth": 0,
              "color": "#4E4C4E",
              "flex": 1,
              "fontSize": 14,
              "paddingHorizontal": 12,
              "paddingVertical": 6,
            },
          ]
        }
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="SubmitButton"
    >
      <SvgMock
        color="#ECEEF2"
      />
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`edit/delete post edit and delete for my post 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "height": 56,
              "paddingTop": 0,
            },
            undefined,
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "paddingLeft": 5,
              },
              Object {
                "alignItems": "flex-start",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="BackButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "borderWidth": 0,
                    "height": 60,
                    "justifyContent": "center",
                    "margin": 0,
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                  },
                  null,
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              <SvgMock
                color="#B4B6BA"
              />
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="CommunityNameHeader"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 14,
                    "lineHeight": 20,
                  },
                ]
              }
            >
              Operative static Graphical User Interface
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "paddingRight": 5,
              },
              Object {
                "alignItems": "flex-end",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        />
      </View>
    </RCTSafeAreaView>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#ECEEF2",
            "height": 1,
          },
          undefined,
        ]
      }
    />
  </RCTSafeAreaView>
  <RCTScrollView
    ListFooterComponent={null}
    ListHeaderComponent={[Function]}
    bounces={false}
    contentContainerStyle={
      Object {
        "paddingBottom": 15,
      }
    }
    data={
      Array [
        Object {
          "__typename": "FeedItemComment",
          "content": "sed libero repudiandae",
          "contentUpdatedAt": "2015-06-20T04:51:30.834Z",
          "createdAt": "2015-11-12T20:05:56.328Z",
          "id": "3",
          "person": Object {
            "__typename": "Person",
            "fullName": "Keaton Keeling",
            "id": "4",
            "picture": "eos itaque velit",
          },
        },
        Object {
          "__typename": "FeedItemComment",
          "content": "omnis et porro",
          "contentUpdatedAt": "2012-01-05T22:26:33.583Z",
          "createdAt": "2010-05-11T20:17:10.674Z",
          "id": "5",
          "person": Object {
            "__typename": "Person",
            "fullName": "Elza Bosco",
            "id": "6",
            "picture": "eligendi occaecati debitis",
          },
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={false}
        testID="RefreshControl"
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingTop": 12,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "paddingVertical": 8,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 18,
                    "flexDirection": "row",
                    "height": 36,
                    "justifyContent": "space-between",
                    "paddingLeft": 20,
                    "paddingRight": 16,
                    "paddingVertical": 0,
                  },
                  Object {
                    "backgroundColor": "#7076B5",
                  },
                  null,
                  null,
                ]
              }
              testID="STORYLabel"
            >
              <SvgMock
                color="#ffffff"
                height={20}
                style={
                  Array [
                    Object {
                      "marginLeft": -10,
                      "marginRight": 10,
                    },
                    undefined,
                  ]
                }
                width={20}
              />
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Object {
                      "color": "#ffffff",
                      "fontSize": 14,
                      "lineHeight": 20,
                    },
                  ]
                }
              >
                God Story
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-end",
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "paddingLeft": 30,
                    "paddingRight": 12,
                    "paddingVertical": 5,
                  }
                }
                testID="popupMenuButton"
              >
                <SvgMock
                  color="#505256"
                />
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "paddingVertical": 8,
              }
            }
          >
            <Image
              resizeMode="cover"
              source={
                Object {
                  "uri": "libero qui recusandae",
                }
              }
              style={
                Array [
                  Object {
                    "borderRadius": 24,
                    "height": 48,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": "rgb(155, 57, 115)",
                  },
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "paddingHorizontal": 8,
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={2}
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "color": "#007398",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "fontWeight": "bold",
                        "lineHeight": 20,
                      },
                    ],
                  ]
                }
              >
                dignissimos debitis incidunt
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "color": "#B2B0B2",
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#B4B6BA",
                        "fontSize": 12,
                        "lineHeight": 16,
                      },
                    ],
                  ]
                }
                testID="Text"
              >
                November 13, 2015 @ 8:52 PM
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingVertical": 8,
            }
          }
        >
          <View
            style={Object {}}
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "justifyContent": "flex-start",
                  "marginBottom": 10,
                  "marginTop": 10,
                  "marginVertical": 10,
                  "width": "100%",
                }
              }
            >
              <Text
                style={Object {}}
              >
                <Text
                  style={
                    Array [
                      Object {},
                      Object {
                        "color": "#505256",
                        "fontFamily": "SourceSansPro-Regular",
                        "fontSize": 14,
                        "lineHeight": 18,
                      },
                    ]
                  }
                >
                  alias consequuntur corporis
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "sunt qui amet",
            }
          }
          style={
            Object {
              "aspectRatio": 1.3333333333333333,
            }
          }
        />
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "height": 1,
              },
              undefined,
            ]
          }
        />
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "opacity": 1,
              "paddingHorizontal": 20,
              "paddingVertical": 16,
            }
          }
          testID="FooterTouchable"
        >
          <View
            style={
              Object {
                "flex": 1,
                "justifyContent": "flex-end",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-end",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": 80,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Object {
                        "fontSize": 14,
                        "lineHeight": 20,
                        "paddingRight": 10,
                        "textAlign": "right",
                        "width": 30,
                      },
                    ]
                  }
                >
                  89460
                </Text>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="LikeIconButton"
                >
                  <View
                    hitSlop={
                      Object {
                        "bottom": 25,
                        "left": 25,
                        "right": 25,
                        "top": 25,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        null,
                        Object {
                          "height": 24,
                          "marginRight": 20,
                          "width": 24,
                        },
                        null,
                      ]
                    }
                  >
                    <SvgMock
                      color="#FF5532"
                      fill="#FF5532"
                    />
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": 40,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Object {
                        "fontSize": 14,
                        "lineHeight": 20,
                        "paddingRight": 10,
                        "textAlign": "right",
                        "width": 30,
                      },
                    ]
                  }
                >
                  2738
                </Text>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="CommentIconButton"
                >
                  <View
                    hitSlop={
                      Object {
                        "bottom": 25,
                        "left": 25,
                        "right": 25,
                        "top": 25,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        null,
                        Object {},
                        null,
                      ]
                    }
                  >
                    <SvgMock />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "height": 1,
              },
              Object {
                "marginBottom": 6,
              },
            ]
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <CommentItem
          comment={
            Object {
              "__typename": "FeedItemComment",
              "content": "sed libero repudiandae",
              "contentUpdatedAt": "2015-06-20T04:51:30.834Z",
              "createdAt": "2015-11-12T20:05:56.328Z",
              "id": "3",
              "person": Object {
                "__typename": "Person",
                "fullName": "Keaton Keeling",
                "id": "4",
                "picture": "eos itaque velit",
              },
            }
          }
          isEditing={false}
          menuActions={
            Array [
              Object {
                "onPress": [Function],
                "text": "Report to Owner",
              },
            ]
          }
          testID="CommentItem"
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <CommentItem
          comment={
            Object {
              "__typename": "FeedItemComment",
              "content": "omnis et porro",
              "contentUpdatedAt": "2012-01-05T22:26:33.583Z",
              "createdAt": "2010-05-11T20:17:10.674Z",
              "id": "5",
              "person": Object {
                "__typename": "Person",
                "fullName": "Elza Bosco",
                "id": "6",
                "picture": "eligendi occaecati debitis",
              },
            }
          }
          isEditing={false}
          menuActions={
            Array [
              Object {
                "onPress": [Function],
                "text": "Report to Owner",
              },
            ]
          }
          testID="CommentItem"
        />
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "marginHorizontal": 16,
        "marginVertical": 12,
      }
    }
  >
    <Image
      resizeMode="cover"
      source={
        Object {
          "uri": "eum eaque enim",
        }
      }
      style={
        Array [
          Object {
            "borderRadius": 18,
            "height": 36,
            "width": 36,
          },
          Object {
            "backgroundColor": "rgb(135, 155, 67)",
          },
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ECEEF2",
          "borderRadius": 8,
          "flex": 1,
          "marginHorizontal": 8,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={true}
        autoFocus={false}
        blurOnSubmit={true}
        multiline={false}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Add a comment..."
        placeholderTextColor="#B2B0B2"
        rejectResponderTermination={true}
        returnKeyType="done"
        selectionColor="#005A7F"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#52C5DC",
              "borderBottomWidth": 1,
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "letterSpacing": 0.25,
              "paddingVertical": 5,
            },
            Object {
              "borderBottomWidth": 0,
              "color": "#4E4C4E",
              "flex": 1,
              "fontSize": 14,
              "paddingHorizontal": 12,
              "paddingVertical": 6,
            },
          ]
        }
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="SubmitButton"
    >
      <SvgMock
        color="#ECEEF2"
      />
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`edit/delete post no options for not my post 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "height": 56,
              "paddingTop": 0,
            },
            undefined,
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "paddingLeft": 5,
              },
              Object {
                "alignItems": "flex-start",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="BackButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "borderWidth": 0,
                    "height": 60,
                    "justifyContent": "center",
                    "margin": 0,
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                  },
                  null,
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              <SvgMock
                color="#B4B6BA"
              />
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="CommunityNameHeader"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 14,
                    "lineHeight": 20,
                  },
                ]
              }
            >
              Operative static Graphical User Interface
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "paddingRight": 5,
              },
              Object {
                "alignItems": "flex-end",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        />
      </View>
    </RCTSafeAreaView>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#ECEEF2",
            "height": 1,
          },
          undefined,
        ]
      }
    />
  </RCTSafeAreaView>
  <RCTScrollView
    ListFooterComponent={null}
    ListHeaderComponent={[Function]}
    bounces={false}
    contentContainerStyle={
      Object {
        "paddingBottom": 15,
      }
    }
    data={
      Array [
        Object {
          "__typename": "FeedItemComment",
          "content": "sed libero repudiandae",
          "contentUpdatedAt": "2015-06-20T04:51:30.834Z",
          "createdAt": "2015-11-12T20:05:56.328Z",
          "id": "3",
          "person": Object {
            "__typename": "Person",
            "fullName": "Keaton Keeling",
            "id": "4",
            "picture": "eos itaque velit",
          },
        },
        Object {
          "__typename": "FeedItemComment",
          "content": "omnis et porro",
          "contentUpdatedAt": "2012-01-05T22:26:33.583Z",
          "createdAt": "2010-05-11T20:17:10.674Z",
          "id": "5",
          "person": Object {
            "__typename": "Person",
            "fullName": "Elza Bosco",
            "id": "6",
            "picture": "eligendi occaecati debitis",
          },
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={false}
        testID="RefreshControl"
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingTop": 12,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "paddingVertical": 8,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 18,
                    "flexDirection": "row",
                    "height": 36,
                    "justifyContent": "space-between",
                    "paddingLeft": 20,
                    "paddingRight": 16,
                    "paddingVertical": 0,
                  },
                  Object {
                    "backgroundColor": "#7076B5",
                  },
                  null,
                  null,
                ]
              }
              testID="STORYLabel"
            >
              <SvgMock
                color="#ffffff"
                height={20}
                style={
                  Array [
                    Object {
                      "marginLeft": -10,
                      "marginRight": 10,
                    },
                    undefined,
                  ]
                }
                width={20}
              />
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Object {
                      "color": "#ffffff",
                      "fontSize": 14,
                      "lineHeight": 20,
                    },
                  ]
                }
              >
                God Story
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "paddingVertical": 8,
              }
            }
          >
            <Image
              resizeMode="cover"
              source={
                Object {
                  "uri": "libero qui recusandae",
                }
              }
              style={
                Array [
                  Object {
                    "borderRadius": 24,
                    "height": 48,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": "rgb(155, 123, 152)",
                  },
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "paddingHorizontal": 8,
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={2}
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "color": "#007398",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "fontWeight": "bold",
                        "lineHeight": 20,
                      },
                    ],
                  ]
                }
              >
                dignissimos debitis incidunt
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "color": "#B2B0B2",
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#B4B6BA",
                        "fontSize": 12,
                        "lineHeight": 16,
                      },
                    ],
                  ]
                }
                testID="Text"
              >
                November 13, 2015 @ 8:52 PM
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingVertical": 8,
            }
          }
        >
          <View
            style={Object {}}
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "justifyContent": "flex-start",
                  "marginBottom": 10,
                  "marginTop": 10,
                  "marginVertical": 10,
                  "width": "100%",
                }
              }
            >
              <Text
                style={Object {}}
              >
                <Text
                  style={
                    Array [
                      Object {},
                      Object {
                        "color": "#505256",
                        "fontFamily": "SourceSansPro-Regular",
                        "fontSize": 14,
                        "lineHeight": 18,
                      },
                    ]
                  }
                >
                  alias consequuntur corporis
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "sunt qui amet",
            }
          }
          style={
            Object {
              "aspectRatio": 1.3333333333333333,
            }
          }
        />
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "height": 1,
              },
              undefined,
            ]
          }
        />
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "opacity": 1,
              "paddingHorizontal": 20,
              "paddingVertical": 16,
            }
          }
          testID="FooterTouchable"
        >
          <View
            style={
              Object {
                "flex": 1,
                "justifyContent": "flex-end",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-end",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": 80,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Object {
                        "fontSize": 14,
                        "lineHeight": 20,
                        "paddingRight": 10,
                        "textAlign": "right",
                        "width": 30,
                      },
                    ]
                  }
                />
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="LikeIconButton"
                >
                  <View
                    hitSlop={
                      Object {
                        "bottom": 25,
                        "left": 25,
                        "right": 25,
                        "top": 25,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        null,
                        Object {
                          "height": 24,
                          "marginRight": 20,
                          "width": 24,
                        },
                        null,
                      ]
                    }
                  >
                    <SvgMock
                      color="#FF5532"
                      fill="#FF5532"
                    />
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": 40,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Object {
                        "fontSize": 14,
                        "lineHeight": 20,
                        "paddingRight": 10,
                        "textAlign": "right",
                        "width": 30,
                      },
                    ]
                  }
                >
                  2738
                </Text>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="CommentIconButton"
                >
                  <View
                    hitSlop={
                      Object {
                        "bottom": 25,
                        "left": 25,
                        "right": 25,
                        "top": 25,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        null,
                        Object {},
                        null,
                      ]
                    }
                  >
                    <SvgMock />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "height": 1,
              },
              Object {
                "marginBottom": 6,
              },
            ]
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <CommentItem
          comment={
            Object {
              "__typename": "FeedItemComment",
              "content": "sed libero repudiandae",
              "contentUpdatedAt": "2015-06-20T04:51:30.834Z",
              "createdAt": "2015-11-12T20:05:56.328Z",
              "id": "3",
              "person": Object {
                "__typename": "Person",
                "fullName": "Keaton Keeling",
                "id": "4",
                "picture": "eos itaque velit",
              },
            }
          }
          isEditing={false}
          menuActions={
            Array [
              Object {
                "onPress": [Function],
                "text": "Report to Owner",
              },
            ]
          }
          testID="CommentItem"
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <CommentItem
          comment={
            Object {
              "__typename": "FeedItemComment",
              "content": "omnis et porro",
              "contentUpdatedAt": "2012-01-05T22:26:33.583Z",
              "createdAt": "2010-05-11T20:17:10.674Z",
              "id": "5",
              "person": Object {
                "__typename": "Person",
                "fullName": "Elza Bosco",
                "id": "6",
                "picture": "eligendi occaecati debitis",
              },
            }
          }
          isEditing={false}
          menuActions={
            Array [
              Object {
                "onPress": [Function],
                "text": "Report to Owner",
              },
            ]
          }
          testID="CommentItem"
        />
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "marginHorizontal": 16,
        "marginVertical": 12,
      }
    }
  >
    <Image
      resizeMode="cover"
      source={
        Object {
          "uri": "eum eaque enim",
        }
      }
      style={
        Array [
          Object {
            "borderRadius": 18,
            "height": 36,
            "width": 36,
          },
          Object {
            "backgroundColor": "rgb(135, 155, 67)",
          },
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ECEEF2",
          "borderRadius": 8,
          "flex": 1,
          "marginHorizontal": 8,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={true}
        autoFocus={false}
        blurOnSubmit={true}
        multiline={false}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Add a comment..."
        placeholderTextColor="#B2B0B2"
        rejectResponderTermination={true}
        returnKeyType="done"
        selectionColor="#005A7F"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#52C5DC",
              "borderBottomWidth": 1,
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "letterSpacing": 0.25,
              "paddingVertical": 5,
            },
            Object {
              "borderBottomWidth": 0,
              "color": "#4E4C4E",
              "flex": 1,
              "fontSize": 14,
              "paddingHorizontal": 12,
              "paddingVertical": 6,
            },
          ]
        }
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="SubmitButton"
    >
      <SvgMock
        color="#ECEEF2"
      />
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`refresh calls refreshComments 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -138,11 +138,11 @@
                      \\"lineHeight\\": 20,
                    },
                  ]
                }
              >
-               Inverse dynamic open architecture
+               Advanced 4th generation pricing structure
              </Text>
            </View>
          </View>
          <View
            style={
@@ -183,32 +183,32 @@
      }
      data={
        Array [
          Object {
            \\"__typename\\": \\"FeedItemComment\\",
-           \\"content\\": \\"sed libero repudiandae\\",
-           \\"contentUpdatedAt\\": \\"2015-06-20T04:51:30.834Z\\",
-           \\"createdAt\\": \\"2015-11-12T20:05:56.328Z\\",
-           \\"id\\": \\"5\\",
+           \\"content\\": \\"ducimus temporibus modi\\",
+           \\"contentUpdatedAt\\": \\"2019-04-21T05:17:53.090Z\\",
+           \\"createdAt\\": \\"2019-01-02T05:24:03.933Z\\",
+           \\"id\\": \\"15\\",
            \\"person\\": Object {
              \\"__typename\\": \\"Person\\",
-             \\"fullName\\": \\"Keaton Keeling\\",
-             \\"id\\": \\"6\\",
-             \\"picture\\": \\"eos itaque velit\\",
+             \\"fullName\\": \\"Isai Koss\\",
+             \\"id\\": \\"16\\",
+             \\"picture\\": \\"voluptates explicabo exercitationem\\",
            },
          },
          Object {
            \\"__typename\\": \\"FeedItemComment\\",
-           \\"content\\": \\"omnis et porro\\",
-           \\"contentUpdatedAt\\": \\"2012-01-05T22:26:33.583Z\\",
-           \\"createdAt\\": \\"2010-05-11T20:17:10.674Z\\",
-           \\"id\\": \\"7\\",
+           \\"content\\": \\"ut quis sed\\",
+           \\"contentUpdatedAt\\": \\"2014-10-16T11:34:26.098Z\\",
+           \\"createdAt\\": \\"2018-09-26T09:29:49.567Z\\",
+           \\"id\\": \\"17\\",
            \\"person\\": Object {
              \\"__typename\\": \\"Person\\",
-             \\"fullName\\": \\"Elza Bosco\\",
-             \\"id\\": \\"8\\",
-             \\"picture\\": \\"eligendi occaecati debitis\\",
+             \\"fullName\\": \\"Aimee Boehm\\",
+             \\"id\\": \\"18\\",
+             \\"picture\\": \\"soluta sint non\\",
            },
          },
        ]
      }
      disableVirtualization={false}
@@ -323,10 +323,45 @@
                  }
                >
                  Announcement
                </Text>
              </View>
+             <View
+               style={
+                 Object {
+                   \\"alignItems\\": \\"flex-end\\",
+                   \\"flex\\": 1,
+                   \\"justifyContent\\": \\"center\\",
+                 }
+               }
+             >
+               <View
+                 accessible={true}
+                 focusable={true}
+                 isTVSelectable={true}
+                 onClick={[Function bound touchableHandlePress]}
+                 onResponderGrant={[Function bound touchableHandleResponderGrant]}
+                 onResponderMove={[Function bound touchableHandleResponderMove]}
+                 onResponderRelease={[Function bound touchableHandleResponderRelease]}
+                 onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
+                 onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
+                 onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
+                 style={
+                   Object {
+                     \\"opacity\\": 1,
+                     \\"paddingLeft\\": 30,
+                     \\"paddingRight\\": 12,
+                     \\"paddingVertical\\": 5,
+                   }
+                 }
+                 testID=\\"popupMenuButton\\"
+               >
+                 <SvgMock
+                   color=\\"#505256\\"
+                 />
+               </View>
+             </View>
            </View>
            <View
              style={
                Object {
                  \\"flexDirection\\": \\"row\\",
@@ -337,11 +372,11 @@
            >
              <Image
                resizeMode=\\"cover\\"
                source={
                  Object {
-                   \\"uri\\": \\"cupiditate sed dignissimos\\",
+                   \\"uri\\": \\"fuga doloribus distinctio\\",
                  }
                }
                style={
                  Object {
                    \\"borderRadius\\": 24,
@@ -378,11 +413,11 @@
                        \\"fontWeight\\": \\"bold\\",
                      },
                    ]
                  }
                >
-                 Inverse dynamic open architecture
+                 Advanced 4th generation pricing structure
                </Text>
                <Text
                  style={
                    Array [
                      Object {
@@ -404,11 +439,11 @@
                      ],
                    ]
                  }
                  testID=\\"Text\\"
                >
-                 November 1, 2012 @ 7:34 PM
+                 April 5, 2011 @ 6:42 PM
                </Text>
              </View>
            </View>
          </View>
          <View
@@ -450,21 +485,21 @@
                          \\"lineHeight\\": 18,
                        },
                      ]
                    }
                  >
-                   corporis repellat ratione
+                   quam tempore a
                  </Text>
                </Text>
              </View>
            </View>
          </View>
          <Image
            resizeMode=\\"cover\\"
            source={
              Object {
-               \\"uri\\": \\"amet iure ut\\",
+               \\"uri\\": \\"eligendi nostrum ipsam\\",
              }
            }
            style={
              Object {
                \\"aspectRatio\\": 1.3333333333333333,
@@ -625,11 +660,11 @@
                          \\"width\\": 30,
                        },
                      ]
                    }
                  >
-                   2738
+                   28044
                  </Text>
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
@@ -694,28 +729,29 @@
        >
          <CommentItem
            comment={
              Object {
                \\"__typename\\": \\"FeedItemComment\\",
-               \\"content\\": \\"sed libero repudiandae\\",
-               \\"contentUpdatedAt\\": \\"2015-06-20T04:51:30.834Z\\",
-               \\"createdAt\\": \\"2015-11-12T20:05:56.328Z\\",
-               \\"id\\": \\"5\\",
+               \\"content\\": \\"ducimus temporibus modi\\",
+               \\"contentUpdatedAt\\": \\"2019-04-21T05:17:53.090Z\\",
+               \\"createdAt\\": \\"2019-01-02T05:24:03.933Z\\",
+               \\"id\\": \\"15\\",
                \\"person\\": Object {
                  \\"__typename\\": \\"Person\\",
-                 \\"fullName\\": \\"Keaton Keeling\\",
-                 \\"id\\": \\"6\\",
-                 \\"picture\\": \\"eos itaque velit\\",
+                 \\"fullName\\": \\"Isai Koss\\",
+                 \\"id\\": \\"16\\",
+                 \\"picture\\": \\"voluptates explicabo exercitationem\\",
                },
              }
            }
            isEditing={false}
            menuActions={
              Array [
                Object {
+                 \\"destructive\\": true,
                  \\"onPress\\": [Function onPress],
-                 \\"text\\": \\"Report to Owner\\",
+                 \\"text\\": \\"Delete Comment\\",
                },
              ]
            }
            testID=\\"CommentItem\\"
          />
@@ -726,28 +762,29 @@
        >
          <CommentItem
            comment={
              Object {
                \\"__typename\\": \\"FeedItemComment\\",
-               \\"content\\": \\"omnis et porro\\",
-               \\"contentUpdatedAt\\": \\"2012-01-05T22:26:33.583Z\\",
-               \\"createdAt\\": \\"2010-05-11T20:17:10.674Z\\",
-               \\"id\\": \\"7\\",
+               \\"content\\": \\"ut quis sed\\",
+               \\"contentUpdatedAt\\": \\"2014-10-16T11:34:26.098Z\\",
+               \\"createdAt\\": \\"2018-09-26T09:29:49.567Z\\",
+               \\"id\\": \\"17\\",
                \\"person\\": Object {
                  \\"__typename\\": \\"Person\\",
-                 \\"fullName\\": \\"Elza Bosco\\",
-                 \\"id\\": \\"8\\",
-                 \\"picture\\": \\"eligendi occaecati debitis\\",
+                 \\"fullName\\": \\"Aimee Boehm\\",
+                 \\"id\\": \\"18\\",
+                 \\"picture\\": \\"soluta sint non\\",
                },
              }
            }
            isEditing={false}
            menuActions={
              Array [
                Object {
+                 \\"destructive\\": true,
                  \\"onPress\\": [Function onPress],
-                 \\"text\\": \\"Report to Owner\\",
+                 \\"text\\": \\"Delete Comment\\",
                },
              ]
            }
            testID=\\"CommentItem\\"
          />
@@ -767,22 +804,22 @@
    >
      <Image
        resizeMode=\\"cover\\"
        source={
          Object {
-           \\"uri\\": \\"eum eaque enim\\",
+           \\"uri\\": \\"qui illo error\\",
          }
        }
        style={
          Array [
            Object {
              \\"borderRadius\\": 18,
              \\"height\\": 36,
              \\"width\\": 36,
            },
            Object {
-             \\"backgroundColor\\": \\"rgb(144, 160, 67)\\",
+             \\"backgroundColor\\": \\"rgb(199, 178, 125)\\",
            },
            undefined,
          ]
        }
      />"
`;

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "height": 56,
              "paddingTop": 0,
            },
            undefined,
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "paddingLeft": 5,
              },
              Object {
                "alignItems": "flex-start",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="BackButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "borderWidth": 0,
                    "height": 60,
                    "justifyContent": "center",
                    "margin": 0,
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                  },
                  null,
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              <SvgMock
                color="#B4B6BA"
              />
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="CommunityNameHeader"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 14,
                    "lineHeight": 20,
                  },
                ]
              }
            >
              Operative static Graphical User Interface
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "paddingRight": 5,
              },
              Object {
                "alignItems": "flex-end",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        />
      </View>
    </RCTSafeAreaView>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#ECEEF2",
            "height": 1,
          },
          undefined,
        ]
      }
    />
  </RCTSafeAreaView>
  <RCTScrollView
    ListFooterComponent={null}
    ListHeaderComponent={[Function]}
    bounces={false}
    contentContainerStyle={
      Object {
        "paddingBottom": 15,
      }
    }
    data={
      Array [
        Object {
          "__typename": "FeedItemComment",
          "content": "libero repudiandae esse",
          "contentUpdatedAt": "2014-06-14T18:46:15.611Z",
          "createdAt": "2015-06-20T04:51:30.834Z",
          "id": "3",
          "person": Object {
            "__typename": "Person",
            "fullName": "Hipolito Connelly",
            "id": "4",
            "picture": "itaque velit omnis",
          },
        },
        Object {
          "__typename": "FeedItemComment",
          "content": "et porro ut",
          "contentUpdatedAt": "2016-11-26T00:02:28.431Z",
          "createdAt": "2012-01-05T22:26:33.583Z",
          "id": "5",
          "person": Object {
            "__typename": "Person",
            "fullName": "Augusta Pouros",
            "id": "6",
            "picture": "occaecati debitis et",
          },
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={false}
        testID="RefreshControl"
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingTop": 12,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "paddingVertical": 8,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 18,
                    "flexDirection": "row",
                    "height": 36,
                    "justifyContent": "space-between",
                    "paddingLeft": 20,
                    "paddingRight": 16,
                    "paddingVertical": 0,
                  },
                  Object {
                    "backgroundColor": "#7076B5",
                  },
                  null,
                  null,
                ]
              }
              testID="STORYLabel"
            >
              <SvgMock
                color="#ffffff"
                height={20}
                style={
                  Array [
                    Object {
                      "marginLeft": -10,
                      "marginRight": 10,
                    },
                    undefined,
                  ]
                }
                width={20}
              />
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Object {
                      "color": "#ffffff",
                      "fontSize": 14,
                      "lineHeight": 20,
                    },
                  ]
                }
              >
                God Story
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-end",
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "paddingLeft": 30,
                    "paddingRight": 12,
                    "paddingVertical": 5,
                  }
                }
                testID="popupMenuButton"
              >
                <SvgMock
                  color="#505256"
                />
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "paddingVertical": 8,
              }
            }
          >
            <Image
              resizeMode="cover"
              source={
                Object {
                  "uri": "libero qui recusandae",
                }
              }
              style={
                Array [
                  Object {
                    "borderRadius": 24,
                    "height": 48,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": "rgb(195, 195, 152)",
                  },
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "paddingHorizontal": 8,
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={2}
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "color": "#007398",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "fontWeight": "bold",
                        "lineHeight": 20,
                      },
                    ],
                  ]
                }
              >
                debitis incidunt accusantium
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "color": "#B2B0B2",
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#B4B6BA",
                        "fontSize": 12,
                        "lineHeight": 16,
                      },
                    ],
                  ]
                }
                testID="Text"
              >
                November 13, 2015 @ 8:52 PM
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingVertical": 8,
            }
          }
        >
          <View
            style={Object {}}
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "justifyContent": "flex-start",
                  "marginBottom": 10,
                  "marginTop": 10,
                  "marginVertical": 10,
                  "width": "100%",
                }
              }
            >
              <Text
                style={Object {}}
              >
                <Text
                  style={
                    Array [
                      Object {},
                      Object {
                        "color": "#505256",
                        "fontFamily": "SourceSansPro-Regular",
                        "fontSize": 14,
                        "lineHeight": 18,
                      },
                    ]
                  }
                >
                  alias consequuntur corporis
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "sunt qui amet",
            }
          }
          style={
            Object {
              "aspectRatio": 1.3333333333333333,
            }
          }
        />
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "height": 1,
              },
              undefined,
            ]
          }
        />
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "opacity": 1,
              "paddingHorizontal": 20,
              "paddingVertical": 16,
            }
          }
          testID="FooterTouchable"
        >
          <View
            style={
              Object {
                "flex": 1,
                "justifyContent": "flex-end",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-end",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": 80,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Object {
                        "fontSize": 14,
                        "lineHeight": 20,
                        "paddingRight": 10,
                        "textAlign": "right",
                        "width": 30,
                      },
                    ]
                  }
                />
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="LikeIconButton"
                >
                  <View
                    hitSlop={
                      Object {
                        "bottom": 25,
                        "left": 25,
                        "right": 25,
                        "top": 25,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        null,
                        Object {
                          "height": 24,
                          "marginRight": 20,
                          "width": 24,
                        },
                        null,
                      ]
                    }
                  >
                    <SvgMock
                      color="#FF5532"
                      fill="#FF5532"
                    />
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": 40,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Object {
                        "fontSize": 14,
                        "lineHeight": 20,
                        "paddingRight": 10,
                        "textAlign": "right",
                        "width": 30,
                      },
                    ]
                  }
                >
                  53441
                </Text>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="CommentIconButton"
                >
                  <View
                    hitSlop={
                      Object {
                        "bottom": 25,
                        "left": 25,
                        "right": 25,
                        "top": 25,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        null,
                        Object {},
                        null,
                      ]
                    }
                  >
                    <SvgMock />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "height": 1,
              },
              Object {
                "marginBottom": 6,
              },
            ]
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <CommentItem
          comment={
            Object {
              "__typename": "FeedItemComment",
              "content": "libero repudiandae esse",
              "contentUpdatedAt": "2014-06-14T18:46:15.611Z",
              "createdAt": "2015-06-20T04:51:30.834Z",
              "id": "3",
              "person": Object {
                "__typename": "Person",
                "fullName": "Hipolito Connelly",
                "id": "4",
                "picture": "itaque velit omnis",
              },
            }
          }
          isEditing={false}
          menuActions={
            Array [
              Object {
                "onPress": [Function],
                "text": "Report to Owner",
              },
            ]
          }
          testID="CommentItem"
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <CommentItem
          comment={
            Object {
              "__typename": "FeedItemComment",
              "content": "et porro ut",
              "contentUpdatedAt": "2016-11-26T00:02:28.431Z",
              "createdAt": "2012-01-05T22:26:33.583Z",
              "id": "5",
              "person": Object {
                "__typename": "Person",
                "fullName": "Augusta Pouros",
                "id": "6",
                "picture": "occaecati debitis et",
              },
            }
          }
          isEditing={false}
          menuActions={
            Array [
              Object {
                "onPress": [Function],
                "text": "Report to Owner",
              },
            ]
          }
          testID="CommentItem"
        />
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "marginHorizontal": 16,
        "marginVertical": 12,
      }
    }
  >
    <Image
      resizeMode="cover"
      source={
        Object {
          "uri": "eaque enim ipsum",
        }
      }
      style={
        Array [
          Object {
            "borderRadius": 18,
            "height": 36,
            "width": 36,
          },
          Object {
            "backgroundColor": "rgb(161, 136, 125)",
          },
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ECEEF2",
          "borderRadius": 8,
          "flex": 1,
          "marginHorizontal": 8,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={true}
        autoFocus={false}
        blurOnSubmit={true}
        multiline={false}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Add a comment..."
        placeholderTextColor="#B2B0B2"
        rejectResponderTermination={true}
        returnKeyType="done"
        selectionColor="#005A7F"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#52C5DC",
              "borderBottomWidth": 1,
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "letterSpacing": 0.25,
              "paddingVertical": 5,
            },
            Object {
              "borderBottomWidth": 0,
              "color": "#4E4C4E",
              "flex": 1,
              "fontSize": 14,
              "paddingHorizontal": 12,
              "paddingVertical": 6,
            },
          ]
        }
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="SubmitButton"
    >
      <SvgMock
        color="#ECEEF2"
      />
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`renders correctly with communityId passed in 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "height": 56,
              "paddingTop": 0,
            },
            undefined,
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "paddingLeft": 5,
              },
              Object {
                "alignItems": "flex-start",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="BackButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "borderWidth": 0,
                    "height": 60,
                    "justifyContent": "center",
                    "margin": 0,
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                  },
                  null,
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              <SvgMock
                color="#B4B6BA"
              />
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="CommunityNameHeader"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 14,
                    "lineHeight": 20,
                  },
                ]
              }
            >
              Operative static Graphical User Interface
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "paddingRight": 5,
              },
              Object {
                "alignItems": "flex-end",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        />
      </View>
    </RCTSafeAreaView>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#ECEEF2",
            "height": 1,
          },
          undefined,
        ]
      }
    />
  </RCTSafeAreaView>
  <RCTScrollView
    ListFooterComponent={null}
    ListHeaderComponent={[Function]}
    bounces={false}
    contentContainerStyle={
      Object {
        "paddingBottom": 15,
      }
    }
    data={
      Array [
        Object {
          "__typename": "FeedItemComment",
          "content": "libero repudiandae esse",
          "contentUpdatedAt": "2014-06-14T18:46:15.611Z",
          "createdAt": "2015-06-20T04:51:30.834Z",
          "id": "3",
          "person": Object {
            "__typename": "Person",
            "fullName": "Hipolito Connelly",
            "id": "4",
            "picture": "itaque velit omnis",
          },
        },
        Object {
          "__typename": "FeedItemComment",
          "content": "et porro ut",
          "contentUpdatedAt": "2016-11-26T00:02:28.431Z",
          "createdAt": "2012-01-05T22:26:33.583Z",
          "id": "5",
          "person": Object {
            "__typename": "Person",
            "fullName": "Augusta Pouros",
            "id": "6",
            "picture": "occaecati debitis et",
          },
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={false}
        testID="RefreshControl"
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingTop": 12,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "paddingVertical": 8,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 18,
                    "flexDirection": "row",
                    "height": 36,
                    "justifyContent": "space-between",
                    "paddingLeft": 20,
                    "paddingRight": 16,
                    "paddingVertical": 0,
                  },
                  Object {
                    "backgroundColor": "#7076B5",
                  },
                  null,
                  null,
                ]
              }
              testID="STORYLabel"
            >
              <SvgMock
                color="#ffffff"
                height={20}
                style={
                  Array [
                    Object {
                      "marginLeft": -10,
                      "marginRight": 10,
                    },
                    undefined,
                  ]
                }
                width={20}
              />
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Object {
                      "color": "#ffffff",
                      "fontSize": 14,
                      "lineHeight": 20,
                    },
                  ]
                }
              >
                God Story
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-end",
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "paddingLeft": 30,
                    "paddingRight": 12,
                    "paddingVertical": 5,
                  }
                }
                testID="popupMenuButton"
              >
                <SvgMock
                  color="#505256"
                />
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "paddingVertical": 8,
              }
            }
          >
            <Image
              resizeMode="cover"
              source={
                Object {
                  "uri": "libero qui recusandae",
                }
              }
              style={
                Array [
                  Object {
                    "borderRadius": 24,
                    "height": 48,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": "rgb(195, 195, 152)",
                  },
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "paddingHorizontal": 8,
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={2}
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "color": "#007398",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#505256",
                        "fontSize": 16,
                        "fontWeight": "bold",
                        "lineHeight": 20,
                      },
                    ],
                  ]
                }
              >
                debitis incidunt accusantium
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Array [
                      Object {
                        "color": "#B2B0B2",
                        "fontSize": 12,
                      },
                      Object {
                        "color": "#B4B6BA",
                        "fontSize": 12,
                        "lineHeight": 16,
                      },
                    ],
                  ]
                }
                testID="Text"
              >
                November 13, 2015 @ 8:52 PM
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingVertical": 8,
            }
          }
        >
          <View
            style={Object {}}
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "justifyContent": "flex-start",
                  "marginBottom": 10,
                  "marginTop": 10,
                  "marginVertical": 10,
                  "width": "100%",
                }
              }
            >
              <Text
                style={Object {}}
              >
                <Text
                  style={
                    Array [
                      Object {},
                      Object {
                        "color": "#505256",
                        "fontFamily": "SourceSansPro-Regular",
                        "fontSize": 14,
                        "lineHeight": 18,
                      },
                    ]
                  }
                >
                  alias consequuntur corporis
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <Image
          resizeMode="cover"
          source={
            Object {
              "uri": "sunt qui amet",
            }
          }
          style={
            Object {
              "aspectRatio": 1.3333333333333333,
            }
          }
        />
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "height": 1,
              },
              undefined,
            ]
          }
        />
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flexDirection": "row",
              "opacity": 1,
              "paddingHorizontal": 20,
              "paddingVertical": 16,
            }
          }
          testID="FooterTouchable"
        >
          <View
            style={
              Object {
                "flex": 1,
                "justifyContent": "flex-end",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "flex-end",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": 80,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Object {
                        "fontSize": 14,
                        "lineHeight": 20,
                        "paddingRight": 10,
                        "textAlign": "right",
                        "width": 30,
                      },
                    ]
                  }
                />
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="LikeIconButton"
                >
                  <View
                    hitSlop={
                      Object {
                        "bottom": 25,
                        "left": 25,
                        "right": 25,
                        "top": 25,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        null,
                        Object {
                          "height": 24,
                          "marginRight": 20,
                          "width": 24,
                        },
                        null,
                      ]
                    }
                  >
                    <SvgMock
                      color="#FF5532"
                      fill="#FF5532"
                    />
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": 40,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#505256",
                      },
                      Object {
                        "fontFamily": "SourceSansPro-Regular",
                      },
                      Object {
                        "fontSize": 14,
                        "lineHeight": 20,
                        "paddingRight": 10,
                        "textAlign": "right",
                        "width": 30,
                      },
                    ]
                  }
                >
                  53441
                </Text>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="CommentIconButton"
                >
                  <View
                    hitSlop={
                      Object {
                        "bottom": 25,
                        "left": 25,
                        "right": 25,
                        "top": 25,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        null,
                        Object {},
                        null,
                      ]
                    }
                  >
                    <SvgMock />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#ECEEF2",
                "height": 1,
              },
              Object {
                "marginBottom": 6,
              },
            ]
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <CommentItem
          comment={
            Object {
              "__typename": "FeedItemComment",
              "content": "libero repudiandae esse",
              "contentUpdatedAt": "2014-06-14T18:46:15.611Z",
              "createdAt": "2015-06-20T04:51:30.834Z",
              "id": "3",
              "person": Object {
                "__typename": "Person",
                "fullName": "Hipolito Connelly",
                "id": "4",
                "picture": "itaque velit omnis",
              },
            }
          }
          isEditing={false}
          menuActions={
            Array [
              Object {
                "onPress": [Function],
                "text": "Report to Owner",
              },
            ]
          }
          testID="CommentItem"
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <CommentItem
          comment={
            Object {
              "__typename": "FeedItemComment",
              "content": "et porro ut",
              "contentUpdatedAt": "2016-11-26T00:02:28.431Z",
              "createdAt": "2012-01-05T22:26:33.583Z",
              "id": "5",
              "person": Object {
                "__typename": "Person",
                "fullName": "Augusta Pouros",
                "id": "6",
                "picture": "occaecati debitis et",
              },
            }
          }
          isEditing={false}
          menuActions={
            Array [
              Object {
                "onPress": [Function],
                "text": "Report to Owner",
              },
            ]
          }
          testID="CommentItem"
        />
      </View>
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "marginHorizontal": 16,
        "marginVertical": 12,
      }
    }
  >
    <Image
      resizeMode="cover"
      source={
        Object {
          "uri": "eaque enim ipsum",
        }
      }
      style={
        Array [
          Object {
            "borderRadius": 18,
            "height": 36,
            "width": 36,
          },
          Object {
            "backgroundColor": "rgb(161, 136, 125)",
          },
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ECEEF2",
          "borderRadius": 8,
          "flex": 1,
          "marginHorizontal": 8,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={true}
        autoFocus={false}
        blurOnSubmit={true}
        multiline={false}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Add a comment..."
        placeholderTextColor="#B2B0B2"
        rejectResponderTermination={true}
        returnKeyType="done"
        selectionColor="#005A7F"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#52C5DC",
              "borderBottomWidth": 1,
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "letterSpacing": 0.25,
              "paddingVertical": 5,
            },
            Object {
              "borderBottomWidth": 0,
              "color": "#4E4C4E",
              "flex": 1,
              "fontSize": 14,
              "paddingHorizontal": 12,
              "paddingVertical": 6,
            },
          ]
        }
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="SubmitButton"
    >
      <SvgMock
        color="#ECEEF2"
      />
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`renders loading 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "height": 56,
              "paddingTop": 0,
            },
            undefined,
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "paddingLeft": 5,
              },
              Object {
                "alignItems": "flex-start",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="BackButton"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 0,
                    "borderWidth": 0,
                    "height": 60,
                    "justifyContent": "center",
                    "margin": 0,
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                  },
                  null,
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              <SvgMock
                color="#B4B6BA"
              />
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="CommunityNameHeader"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "fontSize": 14,
                    "lineHeight": 20,
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "paddingRight": 5,
              },
              Object {
                "alignItems": "flex-end",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        />
      </View>
    </RCTSafeAreaView>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#ECEEF2",
            "height": 1,
          },
          undefined,
        ]
      }
    />
  </RCTSafeAreaView>
  <View
    style={
      Array [
        Object {
          "padding": 10,
        },
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        },
      ]
    }
  >
    <ActivityIndicator
      animating={true}
      color="rgba(0, 0, 0, 1)"
      hidesWhenStopped={true}
      size="small"
    />
  </View>
</View>
`;
