// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <View
    alignItems="center"
    flex={0.9}
    justifyContent="center"
    style={
      Object {
        "marginTop": 30,
      }
    }
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../assets/images/challenge_bullseye.png",
        }
      }
    />
    <Text
      style={
        Array [
          Object {
            "color": "#505256",
          },
          Object {
            "fontFamily": "AmaticSC-Bold",
          },
          Object {
            "color": "#52C5DC",
            "fontSize": 36,
          },
        ]
      }
    >
      new challenge
    </Text>
  </View>
  <View
    flex={1}
    style={
      Object {
        "paddingHorizontal": 30,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <Text
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "color": "#52C5DC",
              "fontSize": 14,
              "marginBottom": 5,
              "marginTop": 15,
            },
          ]
        }
      >
        Challenge
      </Text>
      <TextInput
        allowFontScaling={true}
        autoCorrect={true}
        autoFocus={false}
        blurOnSubmit={true}
        multiline={false}
        onChangeText={[Function]}
        placeholder="Describe Your Challenge"
        placeholderTextColor="#ffffff"
        rejectResponderTermination={true}
        returnKeyType="done"
        selectionColor="#ffffff"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#52C5DC",
              "borderBottomWidth": 1,
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "letterSpacing": 0.25,
              "paddingVertical": 5,
            },
            Object {},
          ]
        }
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
    </View>
    <View>
      <Text
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Object {
              "color": "#52C5DC",
              "fontSize": 14,
              "marginBottom": 5,
              "marginTop": 15,
            },
          ]
        }
      >
        End Date
      </Text>
      <View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "borderBottomColor": "#52C5DC",
                  "borderBottomWidth": 1,
                },
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                  },
                  Object {
                    "fontFamily": "SourceSansPro-Regular",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#ffffff",
                    "fontSize": 16,
                    "letterSpacing": 0.25,
                    "paddingVertical": 5,
                  },
                ]
              }
            >
              End Date (Required)
            </Text>
          </View>
        </View>
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "flexDirection": "row",
            }
          }
          transparent={true}
          visible={false}
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "rgba(0, 0, 0, 0.5)",
                "flex": 1,
                "opacity": 1,
              }
            }
          />
          <View
            pointerEvents="auto"
            style={
              Object {
                "backgroundColor": "#ffffff",
                "height": 0,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderTopColor": "#ccc",
                    "borderTopWidth": 1,
                    "marginTop": 60,
                  },
                  undefined,
                ]
              }
            >
              <RCTDatePicker
                date={1535760000000}
                minimumDate={1535760000000}
                mode="date"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "height": 216,
                  }
                }
                timeZoneOffsetInMinutes={null}
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "flexDirection": "row",
                  "height": 60,
                  "paddingHorizontal": 20,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      null,
                      Object {},
                      null,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#505256",
                        },
                        Object {
                          "fontFamily": "SourceSansPro-Regular",
                        },
                        Array [
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#ffffff",
                            "fontSize": 18,
                            "fontWeight": "500",
                            "letterSpacing": 1.5,
                            "textAlign": "center",
                          },
                          Array [
                            Object {
                              "color": "#007AFF",
                              "fontSize": 16,
                              "fontWeight": "normal",
                              "letterSpacing": 1,
                            },
                            Object {
                              "textAlign": "left",
                            },
                          ],
                        ],
                      ]
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#505256",
                    },
                    Object {
                      "fontFamily": "SourceSansPro-Regular",
                    },
                    Object {
                      "color": undefined,
                      "flex": 1,
                      "fontSize": 16,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Date
              </Text>
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      null,
                      Object {},
                      null,
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#505256",
                        },
                        Object {
                          "fontFamily": "SourceSansPro-Regular",
                        },
                        Array [
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#ffffff",
                            "fontSize": 18,
                            "fontWeight": "500",
                            "letterSpacing": 1.5,
                            "textAlign": "center",
                          },
                          Array [
                            Object {
                              "color": "#007AFF",
                              "fontSize": 16,
                              "fontWeight": "normal",
                              "letterSpacing": 1,
                            },
                            undefined,
                          ],
                        ],
                      ]
                    }
                  >
                    Done
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#52C5DC",
            "height": 60,
            "justifyContent": "center",
          },
          Object {
            "opacity": 0.6,
          },
          Object {
            "width": 750,
          },
          null,
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#505256",
            },
            Object {
              "fontFamily": "SourceSansPro-Regular",
            },
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#ffffff",
                "fontSize": 18,
                "fontWeight": "500",
                "letterSpacing": 1.5,
                "textAlign": "center",
              },
              Object {},
            ],
          ]
        }
      >
        CREATE CHALLENGE
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignItems": "flex-start",
          "alignSelf": "flex-start",
          "justifyContent": "center",
        },
        undefined,
        Object {
          "left": 5,
          "position": "absolute",
          "top": 25,
        },
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            null,
            Object {},
            null,
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#ffffff",
                },
                Object {
                  "fontSize": 18,
                },
                Array [
                  Object {
                    "margin": 10,
                  },
                  Object {},
                ],
              ],
              Object {
                "fontFamily": "icomoon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </RCTSafeAreaView>
</RCTSafeAreaView>
`;

exports[`renders edit challenge correctly 1`] = `
<SafeAreaView
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <View
    alignItems="center"
    flex={0.9}
    justifyContent="center"
    style={
      Object {
        "marginTop": 30,
      }
    }
  >
    <Image
      resizeMode="contain"
      source={
        Object {
          "testUri": "../../../assets/images/challenge_bullseye.png",
        }
      }
    />
    <MyText
      style={
        Object {
          "color": "#52C5DC",
          "fontSize": 36,
        }
      }
      type="header"
    >
      Edit Challenge
    </MyText>
  </View>
  <View
    flex={1}
    style={
      Object {
        "paddingHorizontal": 30,
        "paddingTop": 10,
      }
    }
  >
    <View>
      <MyText
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 14,
            "marginBottom": 5,
            "marginTop": 15,
          }
        }
      >
        Challenge
      </MyText>
      <Input
        autoCorrect={true}
        autoFocus={false}
        blurOnSubmit={true}
        onChangeText={[Function]}
        placeholder="Describe Your Challenge"
        placeholderTextColor="#ffffff"
        returnKeyType="done"
        selectionColor="#ffffff"
        value="Test Title"
      />
    </View>
    <View>
      <MyText
        style={
          Object {
            "color": "#52C5DC",
            "fontSize": 14,
            "marginBottom": 5,
            "marginTop": 15,
          }
        }
      >
        End Date
      </MyText>
      <withI18nextTranslation(MyDatePickerIOS)
        customStyles={Object {}}
        date="2018-09-30 23:59:59"
        disabled={false}
        duration={300}
        height={259}
        minDate={2018-09-01T00:00:00.000Z}
        mode="date"
        onDateChange={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "borderBottomColor": "#52C5DC",
                "borderBottomWidth": 1,
              },
              undefined,
            ]
          }
        >
          <MyText
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontSize": 16,
                "letterSpacing": 0.25,
                "paddingVertical": 5,
              }
            }
          >
            September 30, 2018
          </MyText>
        </View>
      </withI18nextTranslation(MyDatePickerIOS)>
    </View>
  </View>
  <BottomButton
    disabled={true}
    onPress={[Function]}
    text="Save Changes"
  />
  <Connect(BackButton)
    absolute={true}
    customIcon="deleteIcon"
  />
</SafeAreaView>
`;
