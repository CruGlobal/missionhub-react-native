// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders date only date picker 1`] = `
<Component>
  <TouchableIOS
    onPress={[Function]}
  />
  <Component
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 1,
        "flexDirection": "row",
      }
    }
    transparent={true}
    visible={false}
  >
    <TouchableIOS
      activeOpacity={1}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
        }
      }
    />
    <AnimatedComponent
      pointerEvents="auto"
      style={
        Array [
          Object {
            "backgroundColor": "#ffffff",
            "height": 0,
            "overflow": "hidden",
          },
          Object {
            "height": 0,
          },
        ]
      }
    >
      <DatePickerIOS
        date={2018-09-12T12:00:00.000Z}
        mode="date"
        onDateChange={[Function]}
        style={
          Array [
            Object {
              "borderTopColor": "#ccc",
              "borderTopWidth": 1,
              "marginTop": 60,
            },
            undefined,
          ]
        }
        timeZoneOffsetInMinutes={null}
      />
      <Component
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
          onPress={[Function]}
          text="Cancel"
          type="transparent"
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": undefined,
              "flex": 1,
              "fontSize": 16,
              "textAlign": "center",
            }
          }
        >
          Date
        </MyText>
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              undefined,
            ]
          }
          onPress={[Function]}
          text="Done"
          type="transparent"
        />
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;

exports[`renders date only date picker with max date 1`] = `
<Component>
  <TouchableIOS
    onPress={[Function]}
  />
  <Component
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 1,
        "flexDirection": "row",
      }
    }
    transparent={true}
    visible={false}
  >
    <TouchableIOS
      activeOpacity={1}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
        }
      }
    />
    <AnimatedComponent
      pointerEvents="auto"
      style={
        Array [
          Object {
            "backgroundColor": "#ffffff",
            "height": 0,
            "overflow": "hidden",
          },
          Object {
            "height": 0,
          },
        ]
      }
    >
      <DatePickerIOS
        date={2018-09-12T12:00:00.000Z}
        maximumDate={2018-09-12T12:00:00.000Z}
        mode="date"
        onDateChange={[Function]}
        style={
          Array [
            Object {
              "borderTopColor": "#ccc",
              "borderTopWidth": 1,
              "marginTop": 60,
            },
            undefined,
          ]
        }
        timeZoneOffsetInMinutes={null}
      />
      <Component
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
          onPress={[Function]}
          text="Cancel"
          type="transparent"
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": undefined,
              "flex": 1,
              "fontSize": 16,
              "textAlign": "center",
            }
          }
        >
          Date
        </MyText>
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              undefined,
            ]
          }
          onPress={[Function]}
          text="Done"
          type="transparent"
        />
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;

exports[`renders date only date picker with min date 1`] = `
<Component>
  <TouchableIOS
    onPress={[Function]}
  />
  <Component
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 1,
        "flexDirection": "row",
      }
    }
    transparent={true}
    visible={false}
  >
    <TouchableIOS
      activeOpacity={1}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
        }
      }
    />
    <AnimatedComponent
      pointerEvents="auto"
      style={
        Array [
          Object {
            "backgroundColor": "#ffffff",
            "height": 0,
            "overflow": "hidden",
          },
          Object {
            "height": 0,
          },
        ]
      }
    >
      <DatePickerIOS
        date={2018-09-12T12:00:00.000Z}
        minimumDate={2018-09-12T12:00:00.000Z}
        mode="date"
        onDateChange={[Function]}
        style={
          Array [
            Object {
              "borderTopColor": "#ccc",
              "borderTopWidth": 1,
              "marginTop": 60,
            },
            undefined,
          ]
        }
        timeZoneOffsetInMinutes={null}
      />
      <Component
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
          onPress={[Function]}
          text="Cancel"
          type="transparent"
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": undefined,
              "flex": 1,
              "fontSize": 16,
              "textAlign": "center",
            }
          }
        >
          Date
        </MyText>
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              undefined,
            ]
          }
          onPress={[Function]}
          text="Done"
          type="transparent"
        />
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;

exports[`renders date with custom title 1`] = `
<Component>
  <TouchableIOS
    onPress={[Function]}
  />
  <Component
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 1,
        "flexDirection": "row",
      }
    }
    transparent={true}
    visible={false}
  >
    <TouchableIOS
      activeOpacity={1}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
        }
      }
    />
    <AnimatedComponent
      pointerEvents="auto"
      style={
        Array [
          Object {
            "backgroundColor": "#ffffff",
            "height": 0,
            "overflow": "hidden",
          },
          Object {
            "height": 0,
          },
        ]
      }
    >
      <DatePickerIOS
        date={2018-09-12T12:00:00.000Z}
        mode="date"
        onDateChange={[Function]}
        style={
          Array [
            Object {
              "borderTopColor": "#ccc",
              "borderTopWidth": 1,
              "marginTop": 60,
            },
            undefined,
          ]
        }
        timeZoneOffsetInMinutes={null}
      />
      <Component
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
          onPress={[Function]}
          text="Cancel"
          type="transparent"
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": undefined,
              "flex": 1,
              "fontSize": 16,
              "textAlign": "center",
            }
          }
        >
          Title
        </MyText>
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              undefined,
            ]
          }
          onPress={[Function]}
          text="Done"
          type="transparent"
        />
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;

exports[`renders datetime only date picker 1`] = `
<Component>
  <TouchableIOS
    onPress={[Function]}
  />
  <Component
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 1,
        "flexDirection": "row",
      }
    }
    transparent={true}
    visible={false}
  >
    <TouchableIOS
      activeOpacity={1}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
        }
      }
    />
    <AnimatedComponent
      pointerEvents="auto"
      style={
        Array [
          Object {
            "backgroundColor": "#ffffff",
            "height": 0,
            "overflow": "hidden",
          },
          Object {
            "height": 0,
          },
        ]
      }
    >
      <DatePickerIOS
        date={2018-09-12T12:00:00.000Z}
        mode="datetime"
        onDateChange={[Function]}
        style={
          Array [
            Object {
              "borderTopColor": "#ccc",
              "borderTopWidth": 1,
              "marginTop": 60,
            },
            undefined,
          ]
        }
        timeZoneOffsetInMinutes={null}
      />
      <Component
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
          onPress={[Function]}
          text="Cancel"
          type="transparent"
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": undefined,
              "flex": 1,
              "fontSize": 16,
              "textAlign": "center",
            }
          }
        >
          Date
        </MyText>
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              undefined,
            ]
          }
          onPress={[Function]}
          text="Done"
          type="transparent"
        />
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;

exports[`renders default date picker 1`] = `
<Component>
  <TouchableIOS
    onPress={[Function]}
  />
  <Component
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 1,
        "flexDirection": "row",
      }
    }
    transparent={true}
    visible={false}
  >
    <TouchableIOS
      activeOpacity={1}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
        }
      }
    />
    <AnimatedComponent
      pointerEvents="auto"
      style={
        Array [
          Object {
            "backgroundColor": "#ffffff",
            "height": 0,
            "overflow": "hidden",
          },
          Object {
            "height": 0,
          },
        ]
      }
    >
      <DatePickerIOS
        date={2018-09-12T12:00:00.000Z}
        mode="date"
        onDateChange={[Function]}
        style={
          Array [
            Object {
              "borderTopColor": "#ccc",
              "borderTopWidth": 1,
              "marginTop": 60,
            },
            undefined,
          ]
        }
        timeZoneOffsetInMinutes={null}
      />
      <Component
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
          onPress={[Function]}
          text="Cancel"
          type="transparent"
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": undefined,
              "flex": 1,
              "fontSize": 16,
              "textAlign": "center",
            }
          }
        >
          Date
        </MyText>
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              undefined,
            ]
          }
          onPress={[Function]}
          text="Done"
          type="transparent"
        />
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;

exports[`renders time only date picker 1`] = `
<Component>
  <TouchableIOS
    onPress={[Function]}
  />
  <Component
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 1,
        "flexDirection": "row",
      }
    }
    transparent={true}
    visible={false}
  >
    <TouchableIOS
      activeOpacity={1}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
        }
      }
    />
    <AnimatedComponent
      pointerEvents="auto"
      style={
        Array [
          Object {
            "backgroundColor": "#ffffff",
            "height": 0,
            "overflow": "hidden",
          },
          Object {
            "height": 0,
          },
        ]
      }
    >
      <DatePickerIOS
        date={2018-09-12T12:00:00.000Z}
        mode="time"
        onDateChange={[Function]}
        style={
          Array [
            Object {
              "borderTopColor": "#ccc",
              "borderTopWidth": 1,
              "marginTop": 60,
            },
            undefined,
          ]
        }
        timeZoneOffsetInMinutes={null}
      />
      <Component
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
          onPress={[Function]}
          text="Cancel"
          type="transparent"
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": undefined,
              "flex": 1,
              "fontSize": 16,
              "textAlign": "center",
            }
          }
        >
          Date
        </MyText>
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              undefined,
            ]
          }
          onPress={[Function]}
          text="Done"
          type="transparent"
        />
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;

exports[`renders with additional modal component 1`] = `
<Component>
  <TouchableIOS
    onPress={[Function]}
  />
  <Component
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 1,
        "flexDirection": "row",
      }
    }
    transparent={true}
    visible={false}
  >
    <TouchableIOS
      activeOpacity={1}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
        }
      }
    />
    <AnimatedComponent
      pointerEvents="auto"
      style={
        Array [
          Object {
            "backgroundColor": "#ffffff",
            "height": 0,
            "overflow": "hidden",
          },
          Object {
            "height": 0,
          },
        ]
      }
    >
      <DatePickerIOS
        date={2018-09-12T12:00:00.000Z}
        mode="date"
        onDateChange={[Function]}
        style={
          Array [
            Object {
              "borderTopColor": "#ccc",
              "borderTopWidth": 1,
              "marginTop": 60,
            },
            undefined,
          ]
        }
        timeZoneOffsetInMinutes={null}
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Modal Component
      </Text>
      <Component
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
          onPress={[Function]}
          text="Cancel"
          type="transparent"
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": undefined,
              "flex": 1,
              "fontSize": 16,
              "textAlign": "center",
            }
          }
        >
          Date
        </MyText>
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              undefined,
            ]
          }
          onPress={[Function]}
          text="Done"
          type="transparent"
        />
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;

exports[`renders with child component 1`] = `
<Component>
  <TouchableIOS
    onPress={[Function]}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      Child Component
    </Text>
  </TouchableIOS>
  <Component
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 1,
        "flexDirection": "row",
      }
    }
    transparent={true}
    visible={false}
  >
    <TouchableIOS
      activeOpacity={1}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
        }
      }
    />
    <AnimatedComponent
      pointerEvents="auto"
      style={
        Array [
          Object {
            "backgroundColor": "#ffffff",
            "height": 0,
            "overflow": "hidden",
          },
          Object {
            "height": 0,
          },
        ]
      }
    >
      <DatePickerIOS
        date={2018-09-12T12:00:00.000Z}
        mode="date"
        onDateChange={[Function]}
        style={
          Array [
            Object {
              "borderTopColor": "#ccc",
              "borderTopWidth": 1,
              "marginTop": 60,
            },
            undefined,
          ]
        }
        timeZoneOffsetInMinutes={null}
      />
      <Component
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
          onPress={[Function]}
          text="Cancel"
          type="transparent"
        />
        <MyText
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": undefined,
              "flex": 1,
              "fontSize": 16,
              "textAlign": "center",
            }
          }
        >
          Date
        </MyText>
        <Button
          buttonTextStyle={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 16,
                "fontWeight": "normal",
                "letterSpacing": 1,
              },
              undefined,
            ]
          }
          onPress={[Function]}
          text="Done"
          type="transparent"
        />
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;
