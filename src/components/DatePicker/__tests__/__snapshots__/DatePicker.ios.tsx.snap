// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DatePicker methods should open modal 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -22,11 +22,11 @@
    <Modal
      animationType=\\"none\\"
      hardwareAccelerated={false}
      onRequestClose={[Function closeModal]}
      transparent={true}
-     visible={false}
+     visible={true}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function onClick]}"
`;

exports[`renders date only date picker 1`] = `
Array [
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "opacity": 1,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 259,
            },
          ],
        }
      }
    >
      <DateTimePicker
        locale="en-TEST"
        mode="date"
        onChange={[Function]}
        style={
          Object {
            "borderTopColor": "#ccc",
            "borderTopWidth": 1,
            "marginTop": 60,
          }
        }
        testID="DateTimePicker"
        value={2018-09-12T12:00:00.000Z}
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ],
              ]
            }
          >
            Cancel
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#505256",
              "flex": 1,
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "normal",
              "lineHeight": 24,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Date
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Object {
                  "color": "#007AFF",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 24,
                  "textAlignVertical": "center",
                  "textTransform": "none",
                },
              ]
            }
          >
            Done
          </Text>
        </View>
      </View>
    </View>
  </Modal>,
]
`;

exports[`renders date only date picker with min date 1`] = `
Array [
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "opacity": 1,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 259,
            },
          ],
        }
      }
    >
      <DateTimePicker
        locale="en-TEST"
        minimumDate={2018-09-12T12:00:00.000Z}
        mode="date"
        onChange={[Function]}
        style={
          Object {
            "borderTopColor": "#ccc",
            "borderTopWidth": 1,
            "marginTop": 60,
          }
        }
        testID="DateTimePicker"
        value={2018-09-12T12:00:00.000Z}
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ],
              ]
            }
          >
            Cancel
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#505256",
              "flex": 1,
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "normal",
              "lineHeight": 24,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Date
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Object {
                  "color": "#007AFF",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 24,
                  "textAlignVertical": "center",
                  "textTransform": "none",
                },
              ]
            }
          >
            Done
          </Text>
        </View>
      </View>
    </View>
  </Modal>,
]
`;

exports[`renders datetime only date picker 1`] = `
Array [
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "opacity": 1,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 259,
            },
          ],
        }
      }
    >
      <DateTimePicker
        locale="en-TEST"
        mode="datetime"
        onChange={[Function]}
        style={
          Object {
            "borderTopColor": "#ccc",
            "borderTopWidth": 1,
            "marginTop": 60,
          }
        }
        testID="DateTimePicker"
        value={2018-09-12T12:00:00.000Z}
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ],
              ]
            }
          >
            Cancel
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#505256",
              "flex": 1,
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "normal",
              "lineHeight": 24,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Date
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Object {
                  "color": "#007AFF",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 24,
                  "textAlignVertical": "center",
                  "textTransform": "none",
                },
              ]
            }
          >
            Done
          </Text>
        </View>
      </View>
    </View>
  </Modal>,
]
`;

exports[`renders default date picker 1`] = `
Array [
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "opacity": 1,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 259,
            },
          ],
        }
      }
    >
      <DateTimePicker
        locale="en-TEST"
        mode="datetime"
        onChange={[Function]}
        style={
          Object {
            "borderTopColor": "#ccc",
            "borderTopWidth": 1,
            "marginTop": 60,
          }
        }
        testID="DateTimePicker"
        value={2018-09-12T12:00:00.000Z}
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ],
              ]
            }
          >
            Cancel
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#505256",
              "flex": 1,
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "normal",
              "lineHeight": 24,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Date
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Object {
                  "color": "#007AFF",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 24,
                  "textAlignVertical": "center",
                  "textTransform": "none",
                },
              ]
            }
          >
            Done
          </Text>
        </View>
      </View>
    </View>
  </Modal>,
]
`;

exports[`renders time only date picker 1`] = `
Array [
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "opacity": 1,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 259,
            },
          ],
        }
      }
    >
      <DateTimePicker
        locale="en-TEST"
        mode="time"
        onChange={[Function]}
        style={
          Object {
            "borderTopColor": "#ccc",
            "borderTopWidth": 1,
            "marginTop": 60,
          }
        }
        testID="DateTimePicker"
        value={2018-09-12T12:00:00.000Z}
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ],
              ]
            }
          >
            Cancel
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#505256",
              "flex": 1,
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "normal",
              "lineHeight": 24,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Date
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Object {
                  "color": "#007AFF",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 24,
                  "textAlignVertical": "center",
                  "textTransform": "none",
                },
              ]
            }
          >
            Done
          </Text>
        </View>
      </View>
    </View>
  </Modal>,
]
`;

exports[`renders with additional modal component 1`] = `
Array [
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  />,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "opacity": 1,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 259,
            },
          ],
        }
      }
    >
      <DateTimePicker
        locale="en-TEST"
        mode="datetime"
        onChange={[Function]}
        style={
          Object {
            "borderTopColor": "#ccc",
            "borderTopWidth": 1,
            "marginTop": 60,
          }
        }
        testID="DateTimePicker"
        value={2018-09-12T12:00:00.000Z}
      />
      <Text>
        Modal Component
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ],
              ]
            }
          >
            Cancel
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#505256",
              "flex": 1,
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "normal",
              "lineHeight": 24,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Date
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Object {
                  "color": "#007AFF",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 24,
                  "textAlignVertical": "center",
                  "textTransform": "none",
                },
              ]
            }
          >
            Done
          </Text>
        </View>
      </View>
    </View>
  </Modal>,
]
`;

exports[`renders with child component 1`] = `
Array [
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <Text>
      Child Component
    </Text>
  </View>,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "opacity": 1,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 259,
            },
          ],
        }
      }
    >
      <DateTimePicker
        locale="en-TEST"
        mode="datetime"
        onChange={[Function]}
        style={
          Object {
            "borderTopColor": "#ccc",
            "borderTopWidth": 1,
            "marginTop": 60,
          }
        }
        testID="DateTimePicker"
        value={2018-09-12T12:00:00.000Z}
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "flexDirection": "row",
            "height": 60,
            "paddingHorizontal": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                    "lineHeight": 24,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ],
              ]
            }
          >
            Cancel
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#505256",
              "flex": 1,
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "normal",
              "lineHeight": 24,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Date
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
            }
          }
          testID="Button"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "bold",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Object {
                  "color": "#007AFF",
                  "fontFamily": "SourceSansPro-Regular",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                  "lineHeight": 24,
                  "textAlignVertical": "center",
                  "textTransform": "none",
                },
              ]
            }
          >
            Done
          </Text>
        </View>
      </View>
    </View>
  </Modal>,
]
`;
