// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View>
  <View
    style={
      Array [
        Array [
          Object {
            "bottom": 0,
            "marginTop": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "width": 0,
          },
        ],
        Object {
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
      }
    }
  >
    <View />
  </View>
</View>
`;

exports[`renders edit action correctly 1`] = `
<View>
  <View
    style={
      Array [
        Array [
          Object {
            "bottom": 0,
            "marginTop": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "width": 75,
          },
        ],
        Object {
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#A0A2A6",
          "flex": 1,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flexDirection": "column",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#ffffff",
                },
                Object {
                  "fontSize": 30,
                },
                undefined,
              ],
              Object {
                "fontFamily": "icomoon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <Text
          style={
            Array [
              Object {
                "color": "#505256",
              },
              Object {
                "fontFamily": "SourceSansPro-Regular",
              },
              Object {
                "color": "#ffffff",
                "fontSize": 13,
              },
            ]
          }
        >
          Edit
        </Text>
      </View>
    </View>
  </View>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
      }
    }
  >
    <View />
  </View>
</View>
`;

exports[`renders edit bump correctly 1`] = `
<View>
  <View
    style={
      Array [
        Array [
          Object {
            "bottom": 0,
            "marginTop": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "width": 0,
          },
        ],
        Object {
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
      ]
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
      }
    }
  >
    <View />
  </View>
</View>
`;

exports[`renders remove/complete actions correctly 1`] = `
<View>
  <View
    style={
      Array [
        Array [
          Object {
            "bottom": 0,
            "marginTop": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "width": 150,
          },
        ],
        Object {
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FF5532",
          "flex": 1,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flexDirection": "column",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#ffffff",
                },
                Object {
                  "fontSize": 26,
                },
                undefined,
              ],
              Object {
                "fontFamily": "icomoon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <Text
          style={
            Array [
              Object {
                "color": "#505256",
              },
              Object {
                "fontFamily": "SourceSansPro-Regular",
              },
              Object {
                "color": "#ffffff",
                "fontSize": 13,
              },
            ]
          }
        >
          Remove
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#007398",
          "flex": 1,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
            Object {
              "alignItems": "center",
              "flexDirection": "column",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#ffffff",
                },
                Object {
                  "fontSize": 26,
                },
                undefined,
              ],
              Object {
                "fontFamily": "icomoon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <Text
          style={
            Array [
              Object {
                "color": "#505256",
              },
              Object {
                "fontFamily": "SourceSansPro-Regular",
              },
              Object {
                "color": "#ffffff",
                "fontSize": 13,
              },
            ]
          }
        >
          Complete
        </Text>
      </View>
    </View>
  </View>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
      }
    }
  >
    <View />
  </View>
</View>
`;
