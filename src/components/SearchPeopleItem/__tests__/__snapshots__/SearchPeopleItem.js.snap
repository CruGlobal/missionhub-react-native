// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders last name correctly 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderBottomColor": "#E6E8EC",
          "borderBottomWidth": 1,
          "paddingHorizontal": 24,
          "paddingVertical": 8,
          "width": 750,
        },
        Object {
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#505256",
          },
          Object {
            "fontFamily": "SourceSansPro-Regular",
          },
          Object {
            "color": "#007398",
            "fontSize": 14,
          },
        ]
      }
    >
      Test
       Test Last
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#505256",
          },
          Object {
            "fontFamily": "SourceSansPro-Regular",
          },
          Object {
            "fontSize": 10,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`renders no org correctly 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderBottomColor": "#E6E8EC",
          "borderBottomWidth": 1,
          "paddingHorizontal": 24,
          "paddingVertical": 8,
          "width": 750,
        },
        Object {
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#505256",
          },
          Object {
            "fontFamily": "SourceSansPro-Regular",
          },
          Object {
            "color": "#007398",
            "fontSize": 14,
          },
        ]
      }
    >
      Test
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#505256",
          },
          Object {
            "fontFamily": "SourceSansPro-Regular",
          },
          Object {
            "fontSize": 10,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`renders single person correctly 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderBottomColor": "#E6E8EC",
          "borderBottomWidth": 1,
          "paddingHorizontal": 24,
          "paddingVertical": 8,
          "width": 750,
        },
        Object {
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#505256",
          },
          Object {
            "fontFamily": "SourceSansPro-Regular",
          },
          Object {
            "color": "#007398",
            "fontSize": 14,
          },
        ]
      }
    >
      Test
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#505256",
          },
          Object {
            "fontFamily": "SourceSansPro-Regular",
          },
          Object {
            "fontSize": 10,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`renders unassign correctly 1`] = `
<TouchableHighlight
  accessibilityTraits="button"
  activeOpacity={0.85}
  delayPressOut={100}
  onPress={[Function]}
  underlayColor="rgba(0, 115, 152, 0.3)"
>
  <Flex
    justify="center"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "borderBottomColor": "#E6E8EC",
        "borderBottomWidth": 1,
        "paddingHorizontal": 24,
        "paddingVertical": 8,
        "width": 750,
      }
    }
  >
    <MyText
      style={
        Object {
          "color": "#007398",
          "fontSize": 14,
        }
      }
    >
      Test
       Test Last
    </MyText>
    <MyText
      style={
        Object {
          "fontSize": 10,
        }
      }
    />
  </Flex>
</TouchableHighlight>
`;
