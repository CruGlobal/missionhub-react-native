// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fullscreen renders not paused, muted 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -181,11 +181,11 @@
              }
            }
            testID=\\"MutedButton\\"
          >
            <SvgMock
-             testID=\\"UnmutedIcon\\"
+             testID=\\"MutedIcon\\"
            />
          </View>
        </View>
      </View>
    </View>"
`;

exports[`fullscreen renders not paused, unmuted 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "height": 300,
      },
      undefined,
    ]
  }
>
  <Video
    controls={false}
    paused={false}
    source={
      Object {
        "uri": "testVideo.mp4",
      }
    }
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
  <View
    style={
      Object {
        "flex": 1,
        "justifyContent": "space-between",
      }
    }
  >
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "alignItems": "flex-end",
          "justifyContent": "flex-end",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 20,
          "width": 750,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#00000066",
            "borderRadius": 18,
            "margin": 18,
            "opacity": 1,
          }
        }
        testID="CloseButton"
      >
        <SvgMock
          color="#ffffff"
          height={36}
          width={36}
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "backgroundColor": "#00000066",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 20,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 32,
            "paddingVertical": 24,
            "width": 750,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "width": 40,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#505256",
                },
                Object {
                  "fontFamily": "SourceSansPro-Regular",
                },
                Object {
                  "color": "#ffffff",
                  "fontSize": 24,
                  "fontWeight": "300",
                  "lineHeight": 30,
                  "textAlign": "center",
                },
              ]
            }
          >
            :15
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "borderColor": "#ffffff",
              "borderRadius": 24,
              "borderWidth": 2,
              "height": 48,
              "justifyContent": "center",
              "opacity": 1,
              "width": 48,
            }
          }
          testID="PausePlayButton"
        >
          <SvgMock
            testID="PauseIcon"
          />
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="MutedButton"
        >
          <SvgMock
            testID="UnmutedIcon"
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`fullscreen renders paused, unmuted 1`] = `
"Snapshot Diff:
- First value
+ Second value

@@ -11,11 +11,11 @@
      ]
    }
  >
    <Video
      controls={false}
-     paused={false}
+     paused={true}
      source={
        Object {
          \\"uri\\": \\"testVideo.mp4\\",
        }
      }
@@ -159,11 +159,11 @@
              }
            }
            testID=\\"PausePlayButton\\"
          >
            <SvgMock
-             testID=\\"PauseIcon\\"
+             testID=\\"PlayIconEmpty\\"
            />
          </View>
          <View
            accessible={true}
            focusable={true}"
`;

exports[`fullscreen returns to small screen 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "height": 300,
      },
      undefined,
    ]
  }
>
  <Video
    controls={false}
    paused={true}
    source={
      Object {
        "uri": "testVideo.mp4",
      }
    }
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#00000066",
          "borderRadius": 32,
          "height": 64,
          "justifyContent": "center",
          "margin": 16,
          "opacity": 1,
          "paddingLeft": 24,
          "width": 64,
        }
      }
      testID="PlayButton"
    >
      <SvgMock />
    </View>
  </View>
</View>
`;

exports[`small screen renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "height": 300,
      },
      undefined,
    ]
  }
>
  <Video
    controls={false}
    paused={true}
    source={
      Object {
        "uri": "testVideo.mp4",
      }
    }
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#00000066",
          "borderRadius": 32,
          "height": 64,
          "justifyContent": "center",
          "margin": 16,
          "opacity": 1,
          "paddingLeft": 24,
          "width": 64,
        }
      }
      testID="PlayButton"
    >
      <SvgMock />
    </View>
  </View>
</View>
`;

exports[`small screen renders with delete button 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "height": 300,
      },
      Object {
        "height": 1000,
      },
    ]
  }
>
  <Video
    controls={false}
    paused={true}
    source={
      Object {
        "uri": "testVideo.mp4",
      }
    }
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FF5532",
          "borderRadius": 18,
          "height": 40,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 16,
          "top": 16,
          "width": 40,
        }
      }
      testID="DeleteButton"
    >
      <SvgMock />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#00000066",
          "borderRadius": 32,
          "height": 64,
          "justifyContent": "center",
          "margin": 16,
          "opacity": 1,
          "paddingLeft": 24,
          "width": 64,
        }
      }
      testID="PlayButton"
    >
      <SvgMock />
    </View>
  </View>
</View>
`;

exports[`small screen renders with style 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "height": 300,
      },
      Object {
        "height": 1000,
      },
    ]
  }
>
  <Video
    controls={false}
    paused={true}
    source={
      Object {
        "uri": "testVideo.mp4",
      }
    }
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#00000066",
          "borderRadius": 32,
          "height": 64,
          "justifyContent": "center",
          "margin": 16,
          "opacity": 1,
          "paddingLeft": 24,
          "width": 64,
        }
      }
      testID="PlayButton"
    >
      <SvgMock />
    </View>
  </View>
</View>
`;

exports[`small screen renders with width 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "height": 1600,
      },
      undefined,
    ]
  }
>
  <Video
    controls={false}
    paused={true}
    source={
      Object {
        "uri": "testVideo.mp4",
      }
    }
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#00000066",
          "borderRadius": 32,
          "height": 64,
          "justifyContent": "center",
          "margin": 16,
          "opacity": 1,
          "paddingLeft": 24,
          "width": 64,
        }
      }
      testID="PlayButton"
    >
      <SvgMock />
    </View>
  </View>
</View>
`;
