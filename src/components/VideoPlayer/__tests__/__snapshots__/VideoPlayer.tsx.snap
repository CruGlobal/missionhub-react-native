// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <Video
    controls={false}
    ignoreSilentSwitch="ignore"
    paused={true}
    resizeMode="cover"
    source={
      Object {
        "uri": "testVideo.mp4",
      }
    }
    style={
      Object {
        "aspectRatio": 0.5625,
        "width": "100%",
      }
    }
    testID="Video"
  />
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "height": "100%",
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="ControlsWrap"
  >
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#00000066",
          "borderRadius": 32,
          "height": 64,
          "justifyContent": "center",
          "margin": 16,
          "paddingLeft": 24,
          "width": 64,
        }
      }
    >
      <SvgMock />
    </View>
  </View>
</View>
`;

exports[`renders with delete button 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "height": 1000,
      },
    ]
  }
>
  <Video
    controls={false}
    ignoreSilentSwitch="ignore"
    paused={true}
    resizeMode="cover"
    source={
      Object {
        "uri": "testVideo.mp4",
      }
    }
    style={
      Object {
        "aspectRatio": 0.5625,
        "width": "100%",
      }
    }
    testID="Video"
  />
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "height": "100%",
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="ControlsWrap"
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FF5532",
          "borderRadius": 18,
          "height": 40,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 16,
          "top": 16,
          "width": 40,
        }
      }
      testID="DeleteButton"
    >
      <SvgMock />
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#00000066",
          "borderRadius": 32,
          "height": 64,
          "justifyContent": "center",
          "margin": 16,
          "paddingLeft": 24,
          "width": 64,
        }
      }
    >
      <SvgMock />
    </View>
  </View>
</View>
`;

exports[`renders with style 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "padding": 10,
      },
    ]
  }
>
  <Video
    controls={false}
    ignoreSilentSwitch="ignore"
    paused={true}
    resizeMode="cover"
    source={
      Object {
        "uri": "testVideo.mp4",
      }
    }
    style={
      Object {
        "aspectRatio": 0.5625,
        "width": "100%",
      }
    }
    testID="Video"
  />
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "height": "100%",
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="ControlsWrap"
  >
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#00000066",
          "borderRadius": 32,
          "height": 64,
          "justifyContent": "center",
          "margin": 16,
          "paddingLeft": 24,
          "width": 64,
        }
      }
    >
      <SvgMock />
    </View>
  </View>
</View>
`;
