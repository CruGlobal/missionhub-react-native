// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PendingFeedItem renders failed post 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "borderRadius": 8,
        "elevation": 4,
        "flexDirection": "row",
        "marginHorizontal": 16,
        "marginVertical": 8,
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.3,
        "shadowRadius": 2,
      },
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "flex-start",
        "padding": 16,
      },
    ]
  }
  testID="PendingFeedItem"
>
  <Video
    controls={false}
    paused={true}
    resizeMode="cover"
    source={
      Object {
        "uri": "",
      }
    }
    style={
      Object {
        "height": 48,
        "width": 48,
      }
    }
  />
  <View
    style={
      Object {
        "flex": 1,
        "marginHorizontal": 7,
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": "#505256",
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 16,
            "fontStyle": "normal",
            "lineHeight": 24,
            "textAlignVertical": "center",
            "textTransform": "none",
          }
        }
      >
        Failed to upload video.
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="RetryButton"
      >
        <Text
          style={
            Object {
              "color": "#3CC8E6",
              "fontFamily": "SourceSansPro-Bold",
              "fontSize": 16,
              "fontStyle": "normal",
              "lineHeight": 24,
              "textAlignVertical": "center",
              "textTransform": "none",
            }
          }
        >
          Try again.
        </Text>
      </View>
    </View>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="CancelButton"
  >
    <SvgMock
      color="#B4B6BA"
    />
  </View>
</View>
`;

exports[`PendingFeedItem renders pending post 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "borderRadius": 8,
        "elevation": 4,
        "flexDirection": "row",
        "marginHorizontal": 16,
        "marginVertical": 8,
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.3,
        "shadowRadius": 2,
      },
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "flex-start",
        "padding": 16,
      },
    ]
  }
  testID="PendingFeedItem"
>
  <Video
    controls={false}
    paused={true}
    resizeMode="cover"
    source={
      Object {
        "uri": "",
      }
    }
    style={
      Object {
        "height": 48,
        "width": 48,
      }
    }
  />
  <View
    style={
      Object {
        "flex": 1,
        "marginHorizontal": 7,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#505256",
          "fontFamily": "SourceSansPro-Regular",
          "fontSize": 16,
          "fontStyle": "normal",
          "lineHeight": 24,
          "textAlignVertical": "center",
          "textTransform": "none",
        }
      }
    >
      Posting...
    </Text>
  </View>
  <ActivityIndicator
    animating={true}
    color="rgba(0, 0, 0, 1)"
    hidesWhenStopped={true}
    size="small"
  />
</View>
`;
