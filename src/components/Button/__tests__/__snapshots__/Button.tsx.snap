// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "borderWidth": 0,
      "height": 60,
      "justifyContent": "center",
      "margin": 0,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 10,
    }
  }
  testID="Button"
/>
`;

exports[`renders pill correctly 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 50,
      "borderWidth": 0,
      "height": 60,
      "justifyContent": "center",
      "margin": 0,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 10,
    }
  }
  testID="Button"
/>
`;

exports[`renders primary correctly 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#007398",
      "height": 60,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
  testID="Button"
/>
`;

exports[`renders secondary correctly 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#3CC8E6",
      "height": 60,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
  testID="Button"
/>
`;

exports[`renders transparent correctly 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "transparent",
      "opacity": 1,
    }
  }
  testID="Button"
/>
`;

exports[`renders with image correctly 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "borderWidth": 0,
      "height": 60,
      "justifyContent": "center",
      "margin": 0,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 10,
    }
  }
  testID="Button"
>
  <View
    style={
      Array [
        Object {},
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-around",
        },
      ]
    }
  >
    <Image
      source={1234}
      style={
        Object {
          "marginHorizontal": 5,
        }
      }
    />
    <Text
      style={
        Array [
          Object {
            "color": "#ffffff",
            "fontFamily": "SourceSansPro-Bold",
            "fontSize": 14,
            "fontStyle": "normal",
            "letterSpacing": 1,
            "lineHeight": 18,
            "textAlign": "center",
            "textAlignVertical": "center",
            "textTransform": "uppercase",
          },
          Object {},
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`renders with text correctly 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "borderWidth": 0,
      "height": 60,
      "justifyContent": "center",
      "margin": 0,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 10,
    }
  }
  testID="Button"
>
  <Text
    style={
      Array [
        Object {
          "color": "#ffffff",
          "fontFamily": "SourceSansPro-Bold",
          "fontSize": 14,
          "fontStyle": "normal",
          "letterSpacing": 1,
          "lineHeight": 18,
          "textAlign": "center",
          "textAlignVertical": "center",
          "textTransform": "uppercase",
        },
        Object {},
      ]
    }
  >
    Button
  </Text>
</View>
`;
