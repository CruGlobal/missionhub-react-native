// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddSomeoneScreen next renders without back button correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#007398",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "opacity": 1,
              "padding": 15,
            }
          }
          testID="skipButton"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontFamily": "SourceSansPro-Bold",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "letterSpacing": 1,
                  "lineHeight": 18,
                  "textAlign": "center",
                  "textAlignVertical": "center",
                  "textTransform": "uppercase",
                },
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "SourceSansPro-Bold",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "letterSpacing": 1,
                    "lineHeight": 18,
                    "textAlignVertical": "center",
                    "textTransform": "uppercase",
                  },
                  undefined,
                ],
              ]
            }
          >
            SKIP
          </Text>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "paddingHorizontal": 60,
        },
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {},
          Object {
            "alignItems": "flex-start",
            "flex": 4,
            "justifyContent": "center",
          },
        ]
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../assets/images/add_someone.png",
          }
        }
        style={
          Object {
            "height": 80,
            "resizeMode": "contain",
            "width": 80,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 24,
            "fontStyle": "normal",
            "lineHeight": 32,
            "paddingVertical": 10,
            "textAlign": "left",
            "textAlignVertical": "center",
            "textTransform": "none",
          }
        }
      >
        Growing closer to God involves helping others experience Him.

Take a moment and pray. Who do you want to take steps of faith with?
      </Text>
    </View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "bottom": 20,
          "left": 50,
          "position": "absolute",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#3CC8E6",
            "borderRadius": 50,
            "height": 48,
            "justifyContent": "center",
            "opacity": 1,
            "width": 650,
          }
        }
        testID="bottomButton"
      >
        <Text
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "SourceSansPro-Bold",
                "fontSize": 14,
                "fontStyle": "normal",
                "letterSpacing": 1,
                "lineHeight": 18,
                "textAlign": "center",
                "textAlignVertical": "center",
                "textTransform": "uppercase",
              },
              Array [
                undefined,
              ],
            ]
          }
        >
          ADD SOMEONE
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`AddStepScreen next renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 18,
                    },
                    Array [
                      Object {
                        "margin": 10,
                      },
                      Object {
                        "color": "#B4B6BA",
                      },
                    ],
                  ],
                  Object {
                    "fontFamily": "icomoon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              î¤ƒ
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
    </View>
  </RCTSafeAreaView>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
        "paddingTop": 10,
      }
    }
    contentInset={
      Object {
        "bottom": 96,
      }
    }
    style={
      Object {
        "marginBottom": undefined,
      }
    }
  >
    <View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
            Object {
              "paddingBottom": 16,
              "paddingHorizontal": 45,
            },
          ]
        }
      >
        <SvgMock
          color="#B4B6BA"
          height={24}
        />
        <Text
          style={
            Array [
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Bold",
                "fontSize": 16,
                "fontStyle": "normal",
                "letterSpacing": 1,
                "lineHeight": 20,
                "textAlignVertical": "center",
                "textTransform": "uppercase",
              },
              Object {
                "color": "#B4B6BA",
                "paddingLeft": 4,
              },
              undefined,
            ]
          }
        >
          STEP OF FAITH
        </Text>
      </View>
      <TextInput
        allowFontScaling={true}
        autoCorrect={true}
        autoFocus={true}
        blurOnSubmit={true}
        maxLength={255}
        multiline={true}
        onChangeText={[Function]}
        placeholder="Create your own step"
        placeholderTextColor="#B4B6BA"
        rejectResponderTermination={true}
        returnKeyType="done"
        scrollEnabled={false}
        selectionColor="#005A7F"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#3CC8E6",
              "borderBottomWidth": 1,
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Regular",
              "fontSize": 16,
              "fontStyle": "normal",
              "letterSpacing": 0.25,
              "lineHeight": 24,
              "paddingVertical": 5,
              "textAlignVertical": "center",
              "textTransform": "none",
            },
            Object {
              "borderBottomColor": "transparent",
              "color": "#B4B6BA",
              "flex": 1,
              "fontFamily": "SourceSansPro-Light",
              "fontSize": 32,
              "fontStyle": "normal",
              "lineHeight": 38,
              "minHeight": 90.5,
              "paddingHorizontal": 45,
              "textAlignVertical": "center",
              "textTransform": "none",
            },
          ]
        }
        testID="stepInput"
        textAlignVertical="top"
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
    </View>
  </RCTScrollView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#3CC8E6",
          "borderRadius": 50,
          "height": 48,
          "justifyContent": "center",
          "opacity": 1,
          "width": 650,
        }
      }
      testID="bottomButton"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Bold",
              "fontSize": 14,
              "fontStyle": "normal",
              "letterSpacing": 1,
              "lineHeight": 18,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "uppercase",
            },
            Array [
              undefined,
            ],
          ]
        }
      >
        ADD TO MY STEPS
      </Text>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`CelebrationScreen next renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#3CC8E6",
      },
      Object {
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <Image
    onLoad={[Function]}
    resizeMode="contain"
    source={
      Object {
        "testUri": "../../../src/containers/CelebrationScreen/gifs/ArrowWhite.gif",
      }
    }
    style={
      Object {
        "flex": 1,
        "height": 1334,
        "width": 750,
      }
    }
    testID="gif"
  />
</View>
`;

exports[`PersonSelectStepScreen next renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ECEEF2",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  />
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          Object {
            "backgroundColor": "#007398",
          },
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "flex-start",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "opacity": 1,
              }
            }
            testID="IconButton"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "fontSize": 18,
                    },
                    Array [
                      Object {
                        "margin": 10,
                      },
                      undefined,
                    ],
                  ],
                  Object {
                    "fontFamily": "icomoon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              î¤ƒ
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 0,
                "borderWidth": 0,
                "height": 60,
                "justifyContent": "center",
                "margin": 0,
                "opacity": 1,
                "paddingHorizontal": 20,
                "paddingVertical": 10,
              }
            }
            testID="SelectStepExplainerIconButton"
          >
            <SvgMock
              color="#ffffff"
            />
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "#007398",
      }
    }
  >
    <Text
      numberOfLines={2}
      style={
        Object {
          "color": "#ffffff",
          "fontFamily": "SourceSansPro-Light",
          "fontSize": 24,
          "fontStyle": "normal",
          "lineHeight": 30,
          "marginHorizontal": 30,
          "marginVertical": 35,
          "textAlign": "center",
          "textAlignVertical": "center",
          "textTransform": "none",
        }
      }
    >
      Choose a step to take with them this week...
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#ffffff"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#ffffff",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Relate
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomWidth": 9,
                  "borderLeftColor": "transparent",
                  "borderLeftWidth": 7,
                  "borderRightColor": "transparent",
                  "borderRightWidth": 7,
                  "borderStyle": "solid",
                  "height": 0,
                  "width": 0,
                },
                Object {
                  "borderBottomColor": "#ECEEF2",
                  "transform": Array [
                    Object {
                      "rotate": "0deg",
                    },
                  ],
                },
                Object {
                  "marginTop": 12,
                },
              ]
            }
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Pray
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Care
            </Text>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          >
            <SvgMock
              color="#3CC8E6"
              height={32}
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#505256",
                    "fontFamily": "SourceSansPro-Regular",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "lineHeight": 20,
                    "textAlignVertical": "center",
                    "textTransform": "none",
                  },
                  Object {
                    "color": "#3CC8E6",
                    "marginTop": 7,
                    "paddingLeft": 4,
                  },
                  undefined,
                ]
              }
            >
              Share
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListFooterComponent={
      <ForwardRef(SafeAreaView)>
        <FooterLoading />
      </ForwardRef(SafeAreaView)>
    }
    ListHeaderComponent={
      <ErrorNotice
        message="Error loading step suggestions"
        refetch={[Function]}
      />
    }
    contentContainerStyle={
      Object {
        "marginTop": 12,
        "paddingBottom": 24,
      }
    }
    data={
      Array [
        Object {
          "action": [Function],
          "icon": true,
          "key": "custom",
          "text": "Create your own Relate Step",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <MyRefreshControl
        onRefresh={[Function]}
        refreshing={true}
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    scrollIndicatorInsets={
      Object {
        "right": 1,
      }
    }
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "borderRadius": 8,
              "elevation": 4,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginHorizontal": 20,
              "marginVertical": 6,
              "opacity": 1,
              "padding": 20,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.3,
              "shadowRadius": 2,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#505256",
                "fontFamily": "SourceSansPro-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "lineHeight": 24,
                "textAlignVertical": "center",
                "textTransform": "none",
              }
            }
          >
            Create your own Relate Step
          </Text>
          <SvgMock />
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
        >
          <View
            style={
              Array [
                Object {
                  "padding": 10,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <ActivityIndicator
              animating={true}
              color="rgba(0, 0, 0, 1)"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </RCTSafeAreaView>
      </View>
    </View>
  </RCTScrollView>
  <SelectStepExplainerModal
    onClose={[Function]}
  />
</View>
`;

exports[`SelectStageScreen renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#3CC8E6",
      "flex": 1,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../assets/images/landscapeStagesImage.png",
      }
    }
    style={
      Array [
        Object {
          "bottom": -100,
          "height": 275,
          "position": "absolute",
        },
        Object {
          "left": -150,
          "width": 395,
        },
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "height": 56,
              "paddingTop": 0,
            },
            undefined,
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "paddingLeft": 5,
              },
              Object {
                "alignItems": "flex-start",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "flex-start",
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "opacity": 1,
                }
              }
              testID="IconButton"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "fontSize": 18,
                      },
                      Array [
                        Object {
                          "margin": 10,
                        },
                        undefined,
                      ],
                    ],
                    Object {
                      "fontFamily": "icomoon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                î¤ƒ
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "paddingRight": 5,
              },
              Object {
                "alignItems": "flex-end",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        />
      </View>
    </RCTSafeAreaView>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#007398",
            "fontFamily": "SourceSansPro-Bold",
            "fontSize": 18,
            "fontStyle": "normal",
            "letterSpacing": 0,
            "lineHeight": 24,
            "paddingBottom": 25,
            "paddingHorizontal": 30,
            "paddingTop": 45,
            "textAlign": "center",
            "textAlignVertical": "center",
            "textTransform": "none",
            "width": 650,
          }
        }
      >
        Which stage best describes where  is on their journey?
      </Text>
      <RCTScrollView
        activeAnimationOptions={null}
        activeAnimationType="timing"
        activeSlideAlignment="center"
        activeSlideOffset={20}
        apparitionDelay={0}
        automaticallyAdjustContentInsets={false}
        autoplay={false}
        autoplayDelay={1000}
        autoplayInterval={3000}
        callbackOffsetMargin={5}
        containerCustomStyle={
          Object {
            "flex": 0,
            "flexGrow": 0,
            "height": 400,
          }
        }
        contentContainerCustomStyle={Object {}}
        contentContainerStyle={
          Array [
            Object {
              "paddingLeft": 72.5,
              "paddingRight": 72.5,
            },
            Object {},
          ]
        }
        data={Array []}
        decelerationRate="fast"
        directionalLockEnabled={true}
        disableVirtualization={false}
        enableMomentum={false}
        enableSnap={true}
        firstItem={0}
        forwardedRef={[Function]}
        getItem={[Function]}
        getItemCount={[Function]}
        hasParallaxImages={false}
        horizontal={true}
        inactiveSlideOpacity={1}
        inactiveSlideScale={1}
        inactiveSlideShift={0}
        initialNumToRender={7}
        invertStickyHeaders={false}
        inverted={false}
        itemWidth={680}
        keyExtractor={[Function]}
        layout="default"
        lockScrollTimeoutDuration={1000}
        lockScrollWhileSnapping={false}
        loop={false}
        loopClonesPerSide={3}
        maxToRenderPerBatch={15}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onResponderRelease={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onSnapToItem={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        overScrollMode="never"
        pinchGestureEnabled={false}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEnabled={true}
        scrollEventThrottle={1}
        scrollsToTop={false}
        shouldOptimizeUpdates={true}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        slideStyle={Object {}}
        sliderWidth={825}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flex": 0,
            "flexDirection": "row",
            "flexGrow": 0,
            "height": 400,
            "opacity": 0,
            "width": 825,
          }
        }
        swipeThreshold={20}
        updateCellsBatchingPeriod={50}
        useScrollView={false}
        vertical={false}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={15}
      >
        <View />
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`SuggestedStepDetailScreen next renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 56,
            "paddingTop": 0,
          },
          undefined,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingLeft": 5,
            },
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "flex-start",
              "alignSelf": "flex-start",
              "backgroundColor": "transparent",
              "borderRadius": 0,
              "borderWidth": 0,
              "height": 60,
              "justifyContent": "center",
              "margin": 0,
              "opacity": 1,
              "paddingHorizontal": 20,
              "paddingVertical": 10,
            }
          }
          testID="BackButton"
        >
          <SvgMock
            color="#B4B6BA"
          />
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "paddingRight": 5,
            },
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "justifyContent": "center",
            },
          ]
        }
      />
    </View>
  </RCTSafeAreaView>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          Object {
            "paddingHorizontal": 32,
            "paddingTop": 13,
          },
        ]
      }
    >
      <SvgMock
        color="#B4B6BA"
        height={24}
      />
      <Text
        style={
          Array [
            Object {
              "color": "#505256",
              "fontFamily": "SourceSansPro-Bold",
              "fontSize": 16,
              "fontStyle": "normal",
              "letterSpacing": 1,
              "lineHeight": 20,
              "textAlignVertical": "center",
              "textTransform": "uppercase",
            },
            Object {
              "color": "#B4B6BA",
              "paddingLeft": 4,
            },
            undefined,
          ]
        }
      >
        STEP OF FAITH
      </Text>
    </View>
    <Text
      style={
        Object {
          "color": "#505256",
          "fontFamily": "SourceSansPro-Light",
          "fontSize": 32,
          "fontStyle": "normal",
          "lineHeight": 38,
          "marginHorizontal": 32,
          "marginVertical": 16,
          "textAlignVertical": "center",
          "textTransform": "none",
        }
      }
    >
      
    </Text>
    <View
      style={
        Object {
          "borderBottomWidth": 1,
          "borderColor": "#ECEEF2",
        }
      }
    />
    <View
      style={
        Object {
          "paddingHorizontal": 0,
          "paddingTop": 26,
        }
      }
    />
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "bottom": 20,
        "left": 50,
        "position": "absolute",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#3CC8E6",
          "borderRadius": 50,
          "height": 48,
          "justifyContent": "center",
          "opacity": 1,
          "width": 650,
        }
      }
      testID="bottomButton"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#ffffff",
              "fontFamily": "SourceSansPro-Bold",
              "fontSize": 14,
              "fontStyle": "normal",
              "letterSpacing": 1,
              "lineHeight": 18,
              "textAlign": "center",
              "textAlignVertical": "center",
              "textTransform": "uppercase",
            },
            Array [
              undefined,
            ],
          ]
        }
      >
        ADD TO MY STEPS
      </Text>
    </View>
  </RCTSafeAreaView>
</View>
`;
